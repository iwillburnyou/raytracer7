; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	F:\BaiduYunDownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?window_hdc@@3PAUHDC__@@A			; window_hdc
PUBLIC	?surface@@3PAVSurface@Raytracer@@A		; surface
PUBLIC	?buffer@@3PAIA					; buffer
PUBLIC	?tracer@@3PAVEngine@Raytracer@@A		; tracer
_BSS	SEGMENT
?window_hdc@@3PAUHDC__@@A DD 01H DUP (?)		; window_hdc
?surface@@3PAVSurface@Raytracer@@A DD 01H DUP (?)	; surface
?buffer@@3PAIA DD 01H DUP (?)				; buffer
?tracer@@3PAVEngine@Raytracer@@A DD 01H DUP (?)		; tracer
_BSS	ENDS
PUBLIC	_WinMain@16
PUBLIC	??0vector3@Raytracer@@QAE@MMM@Z			; Raytracer::vector3::vector3
PUBLIC	?GetScene@Engine@Raytracer@@QAEPAVScene@2@XZ	; Raytracer::Engine::GetScene
PUBLIC	?GetBuffer@Surface@Raytracer@@QAEPAIXZ		; Raytracer::Surface::GetBuffer
PUBLIC	?DrawWindow@@YAXXZ				; DrawWindow
PUBLIC	??_C@_09JGNHJBCN@raytracer?$AA@			; `string'
PUBLIC	??_C@_08ENGKLPEJ@timings?3?$AA@			; `string'
PUBLIC	??_C@_09JHFEICIO@00?300?4000?$AA@		; `string'
PUBLIC	??_C@_05LJCPEOCK@0000k?$AA@			; `string'
PUBLIC	??_C@_05MKDHONKC@00?40M?$AA@			; `string'
PUBLIC	??_C@_04IFECBFNM@00?40?$AA@			; `string'
PUBLIC	__real@447a0000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__imp__StretchDIBits@52:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__RegisterClassA@4:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__TranslateAcceleratorA@12:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__ValidateRect@8:PROC
EXTRN	__imp__AdjustWindowRect@12:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	__imp__SystemParametersInfoA@16:PROC
EXTRN	??0Engine@Raytracer@@QAE@XZ:PROC		; Raytracer::Engine::Engine
EXTRN	?SetTarget@Engine@Raytracer@@QAEXPAIHH@Z:PROC	; Raytracer::Engine::SetTarget
EXTRN	?InitRender@Engine@Raytracer@@QAEXAAVvector3@2@0@Z:PROC ; Raytracer::Engine::InitRender
EXTRN	?RenderTiles@Engine@Raytracer@@QAE_NXZ:PROC	; Raytracer::Engine::RenderTiles
EXTRN	?InitScene@Scene@Raytracer@@QAE_NPAVSurface@2@@Z:PROC ; Raytracer::Scene::InitScene
EXTRN	??0Surface@Raytracer@@QAE@HH@Z:PROC		; Raytracer::Surface::Surface
EXTRN	?InitCharset@Surface@Raytracer@@QAEXXZ:PROC	; Raytracer::Surface::InitCharset
EXTRN	?Print@Surface@Raytracer@@QAEXPADHHI@Z:PROC	; Raytracer::Surface::Print
EXTRN	?Clear@Surface@Raytracer@@QAEXI@Z:PROC		; Raytracer::Surface::Clear
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_wc	DB	028H DUP (?)
_wnd	DD	01H DUP (?)
_bitmapbuffer DB 03cH DUP (?)
_bh	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT ??_C@_04IFECBFNM@00?40?$AA@
CONST	SEGMENT
??_C@_04IFECBFNM@00?40?$AA@ DB '00.0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MKDHONKC@00?40M?$AA@
CONST	SEGMENT
??_C@_05MKDHONKC@00?40M?$AA@ DB '00.0M', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LJCPEOCK@0000k?$AA@
CONST	SEGMENT
??_C@_05LJCPEOCK@0000k?$AA@ DB '0000k', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHFEICIO@00?300?4000?$AA@
CONST	SEGMENT
??_C@_09JHFEICIO@00?300?4000?$AA@ DB '00:00.000', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ENGKLPEJ@timings?3?$AA@
CONST	SEGMENT
??_C@_08ENGKLPEJ@timings?3?$AA@ DB 'timings:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JGNHJBCN@raytracer?$AA@
CONST	SEGMENT
??_C@_09JGNHJBCN@raytracer?$AA@ DB 'raytracer', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
;	COMDAT ?WndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WndProc@@YGJPAUHWND__@@IIJ@Z PROC			; WndProc, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp

; 28   : 	int result = 0, keycode = 0;
; 29   : 	switch (message)

	mov	ecx, DWORD PTR _message$[ebp]
	mov	eax, ecx
	push	esi
	xor	esi, esi
	sub	eax, 15					; 0000000fH
	je	SHORT $LN6@WndProc
	dec	eax
	je	SHORT $LN3@WndProc
	sub	eax, 240				; 000000f0H
	je	SHORT $LN4@WndProc

; 43   : 		break;
; 44   : 	default:
; 45   : 		result = DefWindowProc(hWnd,message,wParam,lParam);

	push	DWORD PTR _lParam$[ebp]
	push	DWORD PTR _wParam$[ebp]
	push	ecx
	push	DWORD PTR _hWnd$[ebp]
	call	DWORD PTR __imp__DefWindowProcA@16
	mov	esi, eax
	pop	esi

; 48   : }

	pop	ebp
	ret	16					; 00000010H
$LN4@WndProc:

; 35   : 		break;
; 36   : 	case WM_KEYDOWN:
; 37   : 		if ((wParam & 0xFF) != 27) break;

	cmp	BYTE PTR _wParam$[ebp], 27		; 0000001bH
	jne	$LN7@WndProc
$LN3@WndProc:

; 38   : 	case WM_CLOSE:
; 39   : 		ReleaseDC( wnd, window_hdc );

	push	DWORD PTR ?window_hdc@@3PAUHDC__@@A	; window_hdc
	push	DWORD PTR _wnd
	call	DWORD PTR __imp__ReleaseDC@8

; 40   : 		DestroyWindow( wnd );

	push	DWORD PTR _wnd
	call	DWORD PTR __imp__DestroyWindow@4

; 41   : 		SystemParametersInfo( SPI_SETSCREENSAVEACTIVE, 1, 0, 0 );

	push	0
	push	0
	push	1
	push	17					; 00000011H
	call	DWORD PTR __imp__SystemParametersInfoA@16

; 42   : 		ExitProcess( 0 );

	push	0
	call	DWORD PTR __imp__ExitProcess@4
$LN13@WndProc:
$LN6@WndProc:

; 30   : 	{
; 31   : 	case WM_PAINT:
; 32   : 		if (!buffer) break;

	mov	eax, DWORD PTR ?buffer@@3PAIA		; buffer
	test	eax, eax
	je	SHORT $LN7@WndProc

; 33   : 		StretchDIBits( window_hdc, 0, 0, SCRWIDTH, SCRHEIGHT, 0, 0, SCRWIDTH, SCRHEIGHT, buffer, bh, DIB_RGB_COLORS, SRCCOPY );

	push	13369376				; 00cc0020H
	push	0
	push	DWORD PTR _bh
	push	eax
	push	600					; 00000258H
	push	800					; 00000320H
	push	0
	push	0
	push	600					; 00000258H
	push	800					; 00000320H
	push	0
	push	0
	push	DWORD PTR ?window_hdc@@3PAUHDC__@@A	; window_hdc
	call	DWORD PTR __imp__StretchDIBits@52

; 34   : 		ValidateRect( wnd, NULL );

	push	0
	push	DWORD PTR _wnd
	call	DWORD PTR __imp__ValidateRect@8
$LN7@WndProc:

; 46   : 	}
; 47   : 	return result;

	mov	eax, esi
	pop	esi

; 48   : }

	pop	ebp
	ret	16					; 00000010H
$LN12@WndProc:
?WndProc@@YGJPAUHWND__@@IIJ@Z ENDP			; WndProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
;	COMDAT ?DrawWindow@@YAXXZ
_TEXT	SEGMENT
_message$ = -28						; size = 28
?DrawWindow@@YAXXZ PROC					; DrawWindow, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	ebx

; 151  : 	MSG message;
; 152  : 	HACCEL haccel = 0;
; 153  : 	InvalidateRect( wnd,NULL,TRUE );

	push	1
	push	0
	push	DWORD PTR _wnd
	call	DWORD PTR __imp__InvalidateRect@12

; 154  : 	SendMessage( wnd, WM_PAINT, 0, 0 );

	push	0
	push	0
	push	15					; 0000000fH
	push	DWORD PTR _wnd
	call	DWORD PTR __imp__SendMessageA@16

; 155  : 	while (PeekMessage( &message, wnd, 0, 0, PM_REMOVE ))

	mov	ebx, DWORD PTR __imp__PeekMessageA@20
	lea	eax, DWORD PTR _message$[ebp]
	push	1
	push	0
	push	0
	push	DWORD PTR _wnd
	push	eax
	call	ebx
	test	eax, eax
	je	SHORT $LN2@DrawWindow
	push	esi
	mov	esi, DWORD PTR __imp__TranslateMessage@4
	push	edi
	mov	edi, DWORD PTR __imp__DispatchMessageA@4
$LL3@DrawWindow:

; 156  : 	{
; 157  : 		if (TranslateAccelerator( wnd, haccel, &message ) == 0)

	lea	eax, DWORD PTR _message$[ebp]
	push	eax
	push	0
	push	DWORD PTR _wnd
	call	DWORD PTR __imp__TranslateAcceleratorA@12
	test	eax, eax
	jne	SHORT $LN1@DrawWindow

; 158  : 		{
; 159  : 			TranslateMessage( &message );

	lea	eax, DWORD PTR _message$[ebp]
	push	eax
	call	esi

; 160  : 			DispatchMessage( &message );

	lea	eax, DWORD PTR _message$[ebp]
	push	eax
	call	edi
$LN1@DrawWindow:

; 155  : 	while (PeekMessage( &message, wnd, 0, 0, PM_REMOVE ))

	push	1
	push	0
	push	0
	push	DWORD PTR _wnd
	lea	eax, DWORD PTR _message$[ebp]
	push	eax
	call	ebx
	test	eax, eax
	jne	SHORT $LL3@DrawWindow
	pop	edi
	pop	esi
$LN2@DrawWindow:

; 161  : 		}
; 162  : 	}
; 163  : 	Sleep( 0 );

	push	0
	call	DWORD PTR __imp__Sleep@4
	pop	ebx

; 164  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DrawWindow@@YAXXZ ENDP					; DrawWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\surface.h
;	COMDAT ?GetBuffer@Surface@Raytracer@@QAEPAIXZ
_TEXT	SEGMENT
?GetBuffer@Surface@Raytracer@@QAEPAIXZ PROC		; Raytracer::Surface::GetBuffer, COMDAT
; _this$ = ecx

; 28   :     Pixel* GetBuffer() { return m_Buffer; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?GetBuffer@Surface@Raytracer@@QAEPAIXZ ENDP		; Raytracer::Surface::GetBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.h
;	COMDAT ?GetScene@Engine@Raytracer@@QAEPAVScene@2@XZ
_TEXT	SEGMENT
?GetScene@Engine@Raytracer@@QAEPAVScene@2@XZ PROC	; Raytracer::Engine::GetScene, COMDAT
; _this$ = ecx

; 53   : 	Scene* GetScene() { return m_Scene; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?GetScene@Engine@Raytracer@@QAEPAVScene@2@XZ ENDP	; Raytracer::Engine::GetScene
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??0vector3@Raytracer@@QAE@MMM@Z
_TEXT	SEGMENT
_a_X$ = 8						; size = 4
_a_Y$ = 12						; size = 4
_a_Z$ = 16						; size = 4
??0vector3@Raytracer@@QAE@MMM@Z PROC			; Raytracer::vector3::vector3, COMDAT
; _this$ = ecx

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _a_X$[ebp]
	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR _a_Y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR _a_Z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0vector3@Raytracer@@QAE@MMM@Z ENDP			; Raytracer::vector3::vector3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp
;	COMDAT _WinMain@16
_TEXT	SEGMENT
$T1 = -76						; size = 12
$T2 = -64						; size = 12
_mins$1$ = -52						; size = 4
tv440 = -48						; size = 4
_ftime$1$ = -44						; size = 4
_tpos$1$ = -40						; size = 4
_initialized$1$ = -33					; size = 1
_rect$ = -32						; size = 16
_t$3 = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT

; 51   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi

; 52   : 	RECT rect;
; 53   : 	int cc;
; 54   : 	wc.style = CS_OWNDC | CS_VREDRAW | CS_HREDRAW;
; 55   : 	wc.lpfnWndProc = WndProc;
; 56   : 	wc.cbClsExtra = wc.cbWndExtra = 0;
; 57   : 	wc.hInstance = 0;
; 58   : 	wc.hIcon = NULL;
; 59   : 	wc.hCursor = LoadCursor(0,IDC_ARROW);

	push	32512					; 00007f00H
	push	0
	mov	DWORD PTR _wc, 35			; 00000023H
	mov	DWORD PTR _wc+4, OFFSET ?WndProc@@YGJPAUHWND__@@IIJ@Z ; WndProc
	mov	DWORD PTR _wc+12, 0
	mov	DWORD PTR _wc+8, 0
	mov	DWORD PTR _wc+16, 0
	mov	DWORD PTR _wc+20, 0
	call	DWORD PTR __imp__LoadCursorA@8

; 60   : 	wc.hbrBackground = NULL;
; 61   : 	wc.lpszMenuName = NULL;
; 62   : 	wc.lpszClassName = "raytracer";
; 63   : 	if (!RegisterClass(&wc)) return FALSE;

	push	OFFSET _wc
	mov	DWORD PTR _wc+24, eax
	mov	DWORD PTR _wc+28, 0
	mov	DWORD PTR _wc+32, 0
	mov	DWORD PTR _wc+36, OFFSET ??_C@_09JGNHJBCN@raytracer?$AA@
	call	DWORD PTR __imp__RegisterClassA@4
	test	ax, ax
	jne	SHORT $LN11@WinMain

; 146  : 	return 1;
; 147  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	eax, eax
	pop	edi
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@WinMain:

; 64   : 	rect.left = rect.top = 0;
; 65   : 	rect.right = SCRWIDTH, rect.bottom = SCRHEIGHT;
; 66   : 	AdjustWindowRect( &rect, WS_POPUP|WS_SYSMENU|WS_CAPTION, 0 );

	push	0
	push	-2134376448				; 80c80000H
	lea	eax, DWORD PTR _rect$[ebp]
	mov	DWORD PTR _rect$[ebp+4], 0
	push	eax
	mov	DWORD PTR _rect$[ebp], 0
	mov	DWORD PTR _rect$[ebp+8], 800		; 00000320H
	mov	DWORD PTR _rect$[ebp+12], 600		; 00000258H
	call	DWORD PTR __imp__AdjustWindowRect@12

; 67   : 	rect.right -= rect.left, rect.bottom -= rect.top;

	mov	eax, DWORD PTR _rect$[ebp+12]
	mov	ecx, DWORD PTR _rect$[ebp+8]
	sub	eax, DWORD PTR _rect$[ebp+4]
	sub	ecx, DWORD PTR _rect$[ebp]

; 68   : 	wnd = CreateWindowEx( 0, "raytracer", "raytracer", WS_OVERLAPPEDWINDOW & ~WS_MAXIMIZEBOX & ~WS_THICKFRAME,
; 69   : 		CW_USEDEFAULT, CW_USEDEFAULT, rect.right, rect.bottom, 0, 0, 0, 0 );

	push	0
	push	0
	push	0
	push	0
	push	eax
	push	ecx
	push	-2147483648				; 80000000H
	push	-2147483648				; 80000000H
	push	13238272				; 00ca0000H
	push	OFFSET ??_C@_09JGNHJBCN@raytracer?$AA@
	push	OFFSET ??_C@_09JGNHJBCN@raytracer?$AA@
	push	0
	mov	DWORD PTR _rect$[ebp+8], ecx
	mov	DWORD PTR _rect$[ebp+12], eax
	call	DWORD PTR __imp__CreateWindowExA@48

; 70   : 	ShowWindow(wnd,SW_NORMAL);

	push	1
	push	eax
	mov	DWORD PTR _wnd, eax
	call	DWORD PTR __imp__ShowWindow@8

; 71   : 	for ( cc = 0; cc < sizeof( BITMAPINFOHEADER ) + 16; cc++ ) bitmapbuffer[cc] = 0;

	xor	eax, eax
	npad	2
$LL10@WinMain:
	cmp	eax, 60					; 0000003cH
	jae	$LN43@WinMain
	mov	BYTE PTR _bitmapbuffer[eax], 0
	inc	eax
	cmp	eax, 56					; 00000038H
	jb	SHORT $LL10@WinMain

; 72   : 	bh = (BITMAPINFO *)&bitmapbuffer;
; 73   : 	bh->bmiHeader.biSize = sizeof( BITMAPINFOHEADER );
; 74   : 	bh->bmiHeader.biPlanes = 1;
; 75   : 	bh->bmiHeader.biBitCount = 32;
; 76   : 	bh->bmiHeader.biCompression = BI_BITFIELDS;
; 77   : 	bh->bmiHeader.biWidth = SCRWIDTH, bh->bmiHeader.biHeight = -SCRHEIGHT;
; 78   : 	((unsigned long*)bh->bmiColors)[0] = 255 << 16;
; 79   : 	((unsigned long*)bh->bmiColors)[1] = 255 << 8;
; 80   : 	((unsigned long*)bh->bmiColors)[2] = 255;
; 81   : 	window_hdc = GetDC(wnd);

	push	DWORD PTR _wnd
	mov	DWORD PTR _bh, OFFSET _bitmapbuffer
	mov	DWORD PTR _bitmapbuffer, 40		; 00000028H
	mov	DWORD PTR _bitmapbuffer+12, 2097153	; 00200001H
	mov	DWORD PTR _bitmapbuffer+16, 3
	mov	DWORD PTR _bitmapbuffer+4, 800		; 00000320H
	mov	DWORD PTR _bitmapbuffer+8, -600		; fffffda8H
	mov	DWORD PTR _bitmapbuffer+40, 16711680	; 00ff0000H
	mov	DWORD PTR _bitmapbuffer+44, 65280	; 0000ff00H
	mov	DWORD PTR _bitmapbuffer+48, 255		; 000000ffH
	call	DWORD PTR __imp__GetDC@4

; 82   : 	SystemParametersInfo(SPI_SETSCREENSAVEACTIVE, 0, 0, 0);

	push	0
	push	0
	push	0
	push	17					; 00000011H
	mov	DWORD PTR ?window_hdc@@3PAUHDC__@@A, eax ; window_hdc
	call	DWORD PTR __imp__SystemParametersInfoA@16

; 83   : 	// prepare output canvas
; 84   : 	surface = new Raytracer::Surface( SCRWIDTH, SCRHEIGHT );

	push	2312					; 00000908H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN16@WinMain
	push	600					; 00000258H
	push	800					; 00000320H
	mov	ecx, eax
	call	??0Surface@Raytracer@@QAE@HH@Z		; Raytracer::Surface::Surface
	mov	ecx, eax
	jmp	SHORT $LN17@WinMain
$LN16@WinMain:
	xor	ecx, ecx
$LN17@WinMain:
	mov	DWORD PTR ?surface@@3PAVSurface@Raytracer@@A, ecx ; surface

; 85   : 	buffer = surface->GetBuffer();

	mov	eax, DWORD PTR [ecx]

; 86   : 	surface->Clear( 0 );

	push	0
	mov	DWORD PTR ?buffer@@3PAIA, eax		; buffer
	call	?Clear@Surface@Raytracer@@QAEXI@Z	; Raytracer::Surface::Clear

; 87   : 	surface->InitCharset();

	mov	ecx, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	call	?InitCharset@Surface@Raytracer@@QAEXXZ	; Raytracer::Surface::InitCharset

; 88   : 	// prepare renderer
; 89   : 	tracer = new Raytracer::Engine();

	push	2640					; 00000a50H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@WinMain
	mov	ecx, eax
	call	??0Engine@Raytracer@@QAE@XZ		; Raytracer::Engine::Engine
	mov	ecx, eax
	jmp	SHORT $LN19@WinMain
$LN18@WinMain:
	xor	ecx, ecx
$LN19@WinMain:

; 90   : 	bool initialized = false;
; 91   : 	tracer->SetTarget( surface->GetBuffer(), SCRWIDTH, SCRHEIGHT );

	mov	eax, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	xor	bl, bl
	push	600					; 00000258H
	push	800					; 00000320H
	mov	DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A, ecx ; tracer
	push	DWORD PTR [eax]
	mov	BYTE PTR _initialized$1$[ebp], bl
	call	?SetTarget@Engine@Raytracer@@QAEXPAIHH@Z ; Raytracer::Engine::SetTarget

; 92   : 	int tpos = 60;

	mov	edi, DWORD PTR __imp__GetTickCount@0
	mov	DWORD PTR _tpos$1$[ebp], 60		; 0000003cH
	mov	DWORD PTR tv440[ebp], 10		; 0000000aH
	npad	7
$LL7@WinMain:

; 93   : 	// go
; 94   : 	while (1)
; 95   : 	{
; 96   : 		if (!initialized)

	test	bl, bl
	jne	SHORT $LN5@WinMain
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.h

; 53   : 	Scene* GetScene() { return m_Scene; }

	mov	eax, DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A ; tracer
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp

; 98   : 			if (tracer->GetScene()->InitScene( surface )) 

	push	DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	mov	ecx, DWORD PTR [eax]
	call	?InitScene@Scene@Raytracer@@QAE_NPAVSurface@2@@Z ; Raytracer::Scene::InitScene
	test	al, al
	je	SHORT $LN4@WinMain

; 99   : 			{
; 100  : 				initialized = true;
; 101  : 				surface->Clear( 0 );

	mov	ecx, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	mov	bl, 1
	push	0
	mov	BYTE PTR _initialized$1$[ebp], bl
	call	?Clear@Surface@Raytracer@@QAEXI@Z	; Raytracer::Surface::Clear

; 102  : 				surface->Print( "timings:", 2, 2, 0xffffffff );

	mov	ecx, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	push	-1
	push	2
	push	2
	push	OFFSET ??_C@_08ENGKLPEJ@timings?3?$AA@
	call	?Print@Surface@Raytracer@@QAEXPADHHI@Z	; Raytracer::Surface::Print
$LN4@WinMain:

; 103  : 			}
; 104  : 			DrawWindow();

	call	?DrawWindow@@YAXXZ			; DrawWindow

; 105  : 		}
; 106  : 		else

	jmp	SHORT $LL7@WinMain
$LN5@WinMain:

; 107  : 		{
; 108  : 			int fstart = GetTickCount();

	call	edi

; 109  : 			tracer->InitRender( Raytracer::vector3( -0.2f, 0, -2 ), Raytracer::vector3( -0.2f, 0.8f, 5 ) );

	mov	ecx, DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A ; tracer
	mov	esi, eax
	lea	eax, DWORD PTR $T1[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T1[ebp], -1102263091		; be4ccccdH
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp

; 109  : 			tracer->InitRender( Raytracer::vector3( -0.2f, 0, -2 ), Raytracer::vector3( -0.2f, 0.8f, 5 ) );

	push	eax
	lea	eax, DWORD PTR $T2[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T1[ebp+4], 1061997773	; 3f4ccccdH
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp

; 109  : 			tracer->InitRender( Raytracer::vector3( -0.2f, 0, -2 ), Raytracer::vector3( -0.2f, 0.8f, 5 ) );

	push	eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T1[ebp+8], 1084227584	; 40a00000H
	mov	DWORD PTR $T2[ebp], -1102263091		; be4ccccdH
	mov	DWORD PTR $T2[ebp+4], 0
	mov	DWORD PTR $T2[ebp+8], -1073741824	; c0000000H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\testapp.cpp

; 109  : 			tracer->InitRender( Raytracer::vector3( -0.2f, 0, -2 ), Raytracer::vector3( -0.2f, 0.8f, 5 ) );

	call	?InitRender@Engine@Raytracer@@QAEXAAVvector3@2@0@Z ; Raytracer::Engine::InitRender

; 110  : 			while (!tracer->RenderTiles()) DrawWindow();

	mov	ecx, DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A ; tracer
	call	?RenderTiles@Engine@Raytracer@@QAE_NXZ	; Raytracer::Engine::RenderTiles
	test	al, al
	jne	SHORT $LN1@WinMain
	npad	7
$LL2@WinMain:
	call	?DrawWindow@@YAXXZ			; DrawWindow
	mov	ecx, DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A ; tracer
	call	?RenderTiles@Engine@Raytracer@@QAE_NXZ	; Raytracer::Engine::RenderTiles
	test	al, al
	je	SHORT $LL2@WinMain
$LN1@WinMain:

; 111  : 			// while (!tracer->Render()) DrawWindow();
; 112  : 			int ftime = GetTickCount() - fstart;

	call	edi
	mov	ebx, eax

; 113  : 			char t[] = "00:00.000";

	movq	xmm0, QWORD PTR ??_C@_09JHFEICIO@00?300?4000?$AA@
	sub	ebx, esi
	movq	QWORD PTR _t$3[ebp], xmm0

; 114  : 			t[6] = (ftime / 100) % 10 + '0';

	mov	eax, 1374389535				; 51eb851fH
	mov	DWORD PTR _ftime$1$[ebp], ebx
	imul	ebx
	mov	esi, 10					; 0000000aH
	mov	cx, WORD PTR ??_C@_09JHFEICIO@00?300?4000?$AA@+8
	sar	edx, 5
	mov	eax, edx
	mov	WORD PTR _t$3[ebp+8], cx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi

; 115  : 			t[7] = (ftime / 10) % 10 + '0';

	mov	eax, 1717986919				; 66666667H
	add	dl, 48					; 00000030H
	mov	BYTE PTR _t$3[ebp+6], dl
	imul	ebx
	sar	edx, 2
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH
	add	ebx, edx
	mov	eax, ebx

; 116  : 			t[8] = (ftime % 10) + '0';

	mov	cl, bl
	cdq
	idiv	esi
	mov	al, BYTE PTR _ftime$1$[ebp]
	shl	bl, 2
	add	dl, 48					; 00000030H
	add	cl, bl
	mov	BYTE PTR _t$3[ebp+7], dl
	add	cl, cl

; 117  : 			int secs = (ftime / 1000) % 60;

	mov	ebx, 60					; 0000003cH
	sub	al, cl

; 118  : 			int mins = (ftime / 60000) % 100;

	mov	ecx, 100				; 00000064H
	add	al, 48					; 00000030H
	mov	BYTE PTR _t$3[ebp+8], al
	mov	eax, 274877907				; 10624dd3H
	imul	DWORD PTR _ftime$1$[ebp]
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	ebx
	mov	eax, 1172812403				; 45e7b273H
	mov	ebx, edx
	imul	DWORD PTR _ftime$1$[ebp]
	sar	edx, 14					; 0000000eH
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	ecx

; 119  : 			t[3] = ((secs / 10) % 10) + '0';

	mov	eax, 1717986919				; 66666667H
	mov	DWORD PTR _mins$1$[ebp], edx
	imul	ebx
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	eax, ecx
	cdq
	idiv	esi

; 120  : 			t[4] = (secs % 10) + '0';

	mov	al, cl
	shl	cl, 2
	add	al, cl
	add	dl, 48					; 00000030H
	add	al, al
	mov	BYTE PTR _t$3[ebp+3], dl
	sub	bl, al

; 121  : 			t[1] = (mins % 10) + '0';

	mov	eax, 1717986919				; 66666667H
	add	bl, 48					; 00000030H
	mov	BYTE PTR _t$3[ebp+4], bl
	mov	ebx, DWORD PTR _mins$1$[ebp]
	imul	ebx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	cl, al
	shl	cl, 2

; 122  : 			t[0] = ((mins / 10) % 10) + '0';
; 123  : 			surface->Print( t, tpos, 1, 0xffffffff );

	push	-1
	push	1
	lea	edx, DWORD PTR [ecx+eax]
	mov	ecx, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	add	dl, dl
	sub	bl, dl
	cdq
	idiv	esi
	add	bl, 48					; 00000030H
	lea	eax, DWORD PTR _t$3[ebp]
	mov	BYTE PTR _t$3[ebp+1], bl
	add	dl, 48					; 00000030H
	mov	ebx, DWORD PTR _tpos$1$[ebp]
	push	ebx
	push	eax
	mov	BYTE PTR _t$3[ebp], dl
	call	?Print@Surface@Raytracer@@QAEXPADHHI@Z	; Raytracer::Surface::Print
	movd	xmm0, DWORD PTR _ftime$1$[ebp]

; 124  : 			strcpy( t, "0000k" );

	mov	eax, DWORD PTR ??_C@_05LJCPEOCK@0000k?$AA@
	mov	DWORD PTR _t$3[ebp], eax
	movzx	eax, WORD PTR ??_C@_05LJCPEOCK@0000k?$AA@+4
	mov	WORD PTR _t$3[ebp+4], ax

; 125  : 			int r = (int)((tracer->m_RaysCast) / (ftime / 1000.0f));

	mov	eax, DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A ; tracer
	cvtdq2ps xmm0, xmm0

; 126  : 			t[0] += (r / 1000000) % 10;
; 127  : 			t[1] += (r / 100000) % 10;
; 128  : 			t[2] += (r / 10000) % 10;
; 129  : 			t[3] += (r / 1000) % 10;
; 130  : 			surface->Print( t, tpos, 9, 0xffffffff );

	push	-1
	push	9
	push	ebx
	movd	xmm1, DWORD PTR [eax+2632]
	mov	eax, 1125899907				; 431bde83H
	divss	xmm0, DWORD PTR __real@447a0000
	cvtdq2ps xmm1, xmm1
	divss	xmm1, xmm0
	cvttss2si ecx, xmm1
	imul	ecx
	sar	edx, 18					; 00000012H
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi
	mov	eax, 351843721				; 14f8b589H
	add	BYTE PTR _t$3[ebp], dl
	imul	ecx
	sar	edx, 13					; 0000000dH
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi
	mov	eax, 1759218605				; 68db8badH
	add	BYTE PTR _t$3[ebp+1], dl
	imul	ecx
	sar	edx, 12					; 0000000cH
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi
	mov	eax, 274877907				; 10624dd3H
	add	BYTE PTR _t$3[ebp+2], dl
	imul	ecx
	mov	ecx, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi
	lea	eax, DWORD PTR _t$3[ebp]
	add	BYTE PTR _t$3[ebp+3], dl
	push	eax
	call	?Print@Surface@Raytracer@@QAEXPADHHI@Z	; Raytracer::Surface::Print

; 131  : 			strcpy( t, "00.0M" );

	mov	eax, DWORD PTR ??_C@_05MKDHONKC@00?40M?$AA@
	mov	DWORD PTR _t$3[ebp], eax
	movzx	eax, WORD PTR ??_C@_05MKDHONKC@00?40M?$AA@+4
	mov	WORD PTR _t$3[ebp+4], ax

; 132  : 			r = tracer->m_Intersections;

	mov	eax, DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A ; tracer
	mov	ecx, DWORD PTR [eax+2636]

; 133  : 			t[0] += (r / 10000000) % 10;

	mov	eax, 1801439851				; 6b5fca6bH
	imul	ecx

; 134  : 			t[1] += (r / 1000000) % 10;
; 135  : 			t[3] += (r / 100000) % 10;
; 136  : 			surface->Print( t, tpos + 34, 9, 0xffffffff );

	push	-1
	sar	edx, 22					; 00000016H
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi
	mov	eax, 1125899907				; 431bde83H
	add	BYTE PTR _t$3[ebp], dl
	imul	ecx
	push	9
	sar	edx, 18					; 00000012H
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi
	mov	eax, 351843721				; 14f8b589H
	add	BYTE PTR _t$3[ebp+1], dl
	imul	ecx
	mov	ecx, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	sar	edx, 13					; 0000000dH
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	esi
	lea	esi, DWORD PTR [ebx+64]
	add	BYTE PTR _t$3[ebp+3], dl
	lea	eax, DWORD PTR [esi-30]
	push	eax
	lea	eax, DWORD PTR _t$3[ebp]
	push	eax
	call	?Print@Surface@Raytracer@@QAEXPADHHI@Z	; Raytracer::Surface::Print

; 137  : 			strcpy( t, "00.0" );

	mov	eax, DWORD PTR ??_C@_04IFECBFNM@00?40?$AA@

; 138  : 			r = (tracer->m_Intersections * 10) / (tracer->m_RaysCast);

	mov	ecx, DWORD PTR ?tracer@@3PAVEngine@Raytracer@@A ; tracer
	mov	DWORD PTR _t$3[ebp], eax
	mov	al, BYTE PTR ??_C@_04IFECBFNM@00?40?$AA@+4
	mov	BYTE PTR _t$3[ebp+4], al
	mov	eax, DWORD PTR [ecx+2636]

; 139  : 			t[0] += (r / 100) % 10;
; 140  : 			t[1] += (r / 10) % 10;
; 141  : 			t[3] += (r / 1) % 10;
; 142  : 			surface->Print( t, tpos + 64, 1, 0xffffffff );

	push	-1
	push	1
	push	esi
	lea	eax, DWORD PTR [eax+eax*4]
	add	eax, eax
	cdq
	idiv	DWORD PTR [ecx+2632]
	mov	ecx, 10					; 0000000aH
	mov	ebx, eax
	mov	eax, 1374389535				; 51eb851fH
	imul	ebx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cdq
	idiv	ecx
	mov	eax, 1717986919				; 66666667H
	add	BYTE PTR _t$3[ebp], dl
	imul	ebx
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	eax, ecx
	cdq
	idiv	DWORD PTR tv440[ebp]
	mov	al, cl
	shl	cl, 2
	add	BYTE PTR _t$3[ebp+1], dl
	add	al, cl
	mov	ecx, DWORD PTR ?surface@@3PAVSurface@Raytracer@@A ; surface
	add	al, al
	sub	bl, al
	lea	eax, DWORD PTR _t$3[ebp]
	add	BYTE PTR _t$3[ebp+3], bl
	push	eax
	call	?Print@Surface@Raytracer@@QAEXPADHHI@Z	; Raytracer::Surface::Print

; 143  : 			tpos += 120;

	add	DWORD PTR _tpos$1$[ebp], 120		; 00000078H

; 144  : 		}
; 145  : 	}

	mov	bl, BYTE PTR _initialized$1$[ebp]
	jmp	$LL7@WinMain
$LN43@WinMain:

; 71   : 	for ( cc = 0; cc < sizeof( BITMAPINFOHEADER ) + 16; cc++ ) bitmapbuffer[cc] = 0;

	call	___report_rangecheckfailure
$LN44@WinMain:
$LN42@WinMain:
	int	3
_WinMain@16 ENDP
_TEXT	ENDS
END
