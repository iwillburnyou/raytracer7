; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	F:\BaiduYunDownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_expf
PUBLIC	_sqrtf
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	??0vector3@Raytracer@@QAE@XZ			; Raytracer::vector3::vector3
PUBLIC	??0vector3@Raytracer@@QAE@MMM@Z			; Raytracer::vector3::vector3
PUBLIC	?Normalize@vector3@Raytracer@@QAEXXZ		; Raytracer::vector3::Normalize
PUBLIC	?Length@vector3@Raytracer@@QAEMXZ		; Raytracer::vector3::Length
PUBLIC	?Cross@vector3@Raytracer@@QAE?AV12@V12@@Z	; Raytracer::vector3::Cross
PUBLIC	??Yvector3@Raytracer@@QAEXAAV01@@Z		; Raytracer::vector3::operator+=
PUBLIC	??Xvector3@Raytracer@@QAEXM@Z			; Raytracer::vector3::operator*=
PUBLIC	??Gvector3@Raytracer@@QBE?AV01@XZ		; Raytracer::vector3::operator-
PUBLIC	??HRaytracer@@YA?AVvector3@0@ABV10@0@Z		; Raytracer::operator+
PUBLIC	??GRaytracer@@YA?AVvector3@0@ABV10@0@Z		; Raytracer::operator-
PUBLIC	??DRaytracer@@YA?AVvector3@0@ABV10@M@Z		; Raytracer::operator*
PUBLIC	??DRaytracer@@YA?AVvector3@0@ABV10@AAV10@@Z	; Raytracer::operator*
PUBLIC	??DRaytracer@@YA?AVvector3@0@MABV10@@Z		; Raytracer::operator*
PUBLIC	??0matrix@Raytracer@@QAE@XZ			; Raytracer::matrix::matrix
PUBLIC	?Identity@matrix@Raytracer@@QAEXXZ		; Raytracer::matrix::Identity
PUBLIC	?Transform@matrix@Raytracer@@QAE?AVvector3@2@AAV32@@Z ; Raytracer::matrix::Transform
PUBLIC	?Invert@matrix@Raytracer@@QAEXXZ		; Raytracer::matrix::Invert
PUBLIC	?GetPos@aabb@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::aabb::GetPos
PUBLIC	?GetSize@aabb@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::aabb::GetSize
PUBLIC	??0Twister@Raytracer@@QAE@XZ			; Raytracer::Twister::Twister
PUBLIC	??0Ray@Raytracer@@QAE@AAVvector3@1@0@Z		; Raytracer::Ray::Ray
PUBLIC	?GetOrigin@Ray@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::Ray::GetOrigin
PUBLIC	?GetDirection@Ray@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::Ray::GetDirection
PUBLIC	??0kdstack@Raytracer@@QAE@XZ			; Raytracer::kdstack::kdstack
PUBLIC	??0Engine@Raytracer@@QAE@XZ			; Raytracer::Engine::Engine
PUBLIC	??1Engine@Raytracer@@QAE@XZ			; Raytracer::Engine::~Engine
PUBLIC	?SetTarget@Engine@Raytracer@@QAEXPAIHH@Z	; Raytracer::Engine::SetTarget
PUBLIC	?FindNearest@Engine@Raytracer@@QAEHAAVRay@2@AAMAAPAVPrimitive@2@@Z ; Raytracer::Engine::FindNearest
PUBLIC	?FindOccluder@Engine@Raytracer@@QAEHAAVRay@2@AAM@Z ; Raytracer::Engine::FindOccluder
PUBLIC	?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z ; Raytracer::Engine::Raytrace
PUBLIC	?CalcShade@Engine@Raytracer@@QAEMPAVLight@2@Vvector3@2@AAV42@MM@Z ; Raytracer::Engine::CalcShade
PUBLIC	?InitRender@Engine@Raytracer@@QAEXAAVvector3@2@0@Z ; Raytracer::Engine::InitRender
PUBLIC	?RenderRay@Engine@Raytracer@@QAEPAVPrimitive@2@Vvector3@2@AAV42@@Z ; Raytracer::Engine::RenderRay
PUBLIC	?RenderTiles@Engine@Raytracer@@QAE_NXZ		; Raytracer::Engine::RenderTiles
PUBLIC	?GetColor@Material@Raytracer@@QAE?AVvector3@2@XZ ; Raytracer::Material::GetColor
PUBLIC	?GetSpecular@Material@Raytracer@@QAEMXZ		; Raytracer::Material::GetSpecular
PUBLIC	?GetDiffuse@Material@Raytracer@@QAEMXZ		; Raytracer::Material::GetDiffuse
PUBLIC	?GetReflection@Material@Raytracer@@QAEMXZ	; Raytracer::Material::GetReflection
PUBLIC	?GetRefraction@Material@Raytracer@@QAEMXZ	; Raytracer::Material::GetRefraction
PUBLIC	?GetRefrIndex@Material@Raytracer@@QAEMXZ	; Raytracer::Material::GetRefrIndex
PUBLIC	?GetDiffuseRefl@Material@Raytracer@@QAEMXZ	; Raytracer::Material::GetDiffuseRefl
PUBLIC	?GetPos@Light@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::Light::GetPos
PUBLIC	?GetCellX@Light@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::Light::GetCellX
PUBLIC	?GetCellY@Light@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::Light::GetCellY
PUBLIC	?GetGrid@Light@Raytracer@@QAEAAVvector3@2@H@Z	; Raytracer::Light::GetGrid
PUBLIC	?GetColor@Light@Raytracer@@QAEAAVvector3@2@XZ	; Raytracer::Light::GetColor
PUBLIC	?GetType@Light@Raytracer@@QAEHXZ		; Raytracer::Light::GetType
PUBLIC	?GetMaterial@Primitive@Raytracer@@QAEPAVMaterial@2@XZ ; Raytracer::Primitive::GetMaterial
PUBLIC	?GetPrimitive@ObjectList@Raytracer@@QAEPAVPrimitive@2@XZ ; Raytracer::ObjectList::GetPrimitive
PUBLIC	?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ	; Raytracer::ObjectList::GetNext
PUBLIC	?GetAxis@KdTreeNode@Raytracer@@QAEHXZ		; Raytracer::KdTreeNode::GetAxis
PUBLIC	?GetSplitPos@KdTreeNode@Raytracer@@QAEMXZ	; Raytracer::KdTreeNode::GetSplitPos
PUBLIC	?GetLeft@KdTreeNode@Raytracer@@QAEPAV12@XZ	; Raytracer::KdTreeNode::GetLeft
PUBLIC	?GetRight@KdTreeNode@Raytracer@@QAEPAV12@XZ	; Raytracer::KdTreeNode::GetRight
PUBLIC	?IsLeaf@KdTreeNode@Raytracer@@QAE_NXZ		; Raytracer::KdTreeNode::IsLeaf
PUBLIC	?GetList@KdTreeNode@Raytracer@@QAEPAVObjectList@2@XZ ; Raytracer::KdTreeNode::GetList
PUBLIC	?GetRoot@KdTree@Raytracer@@QAEPAVKdTreeNode@2@XZ ; Raytracer::KdTree::GetRoot
PUBLIC	?SetMemoryManager@KdTree@Raytracer@@SAXPAVMManager@2@@Z ; Raytracer::KdTree::SetMemoryManager
PUBLIC	?GetNrLights@Scene@Raytracer@@QAEHXZ		; Raytracer::Scene::GetNrLights
PUBLIC	?GetLight@Scene@Raytracer@@QAEPAVLight@2@H@Z	; Raytracer::Scene::GetLight
PUBLIC	?GetExtends@Scene@Raytracer@@QAEAAVaabb@2@XZ	; Raytracer::Scene::GetExtends
PUBLIC	?GetKdTree@Scene@Raytracer@@QAEPAVKdTree@2@XZ	; Raytracer::Scene::GetKdTree
PUBLIC	??_GScene@Raytracer@@QAEPAXI@Z			; Raytracer::Scene::`scalar deleting destructor'
PUBLIC	__real@00000000
PUBLIC	__real@38d1b717
PUBLIC	__real@3e19999a
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@3f7fe5c9
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40800000
PUBLIC	__real@41800000
PUBLIC	__real@42480000
PUBLIC	__real@43800000
PUBLIC	__real@c0400000
PUBLIC	__real@c0800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?Seed@Twister@Raytracer@@QAEXK@Z:PROC		; Raytracer::Twister::Seed
EXTRN	?Rand@Twister@Raytracer@@QAEMXZ:PROC		; Raytracer::Twister::Rand
EXTRN	?Intersect@Primitive@Raytracer@@QAEHAAVRay@2@AAM@Z:PROC ; Raytracer::Primitive::Intersect
EXTRN	?GetNormal@Primitive@Raytracer@@QAE?AVvector3@2@AAV32@@Z:PROC ; Raytracer::Primitive::GetNormal
EXTRN	?GetColor@Primitive@Raytracer@@QAE?AVvector3@2@AAV32@@Z:PROC ; Raytracer::Primitive::GetColor
EXTRN	??0Scene@Raytracer@@QAE@XZ:PROC			; Raytracer::Scene::Scene
EXTRN	??1Scene@Raytracer@@QAE@XZ:PROC			; Raytracer::Scene::~Scene
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	??0MManager@Raytracer@@QAE@XZ:PROC		; Raytracer::MManager::MManager
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_exp_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	?s_MManager@KdTree@Raytracer@@2PAVMManager@2@A:DWORD ; Raytracer::KdTree::s_MManager
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0800000
CONST	SEGMENT
__real@c0800000 DD 0c0800000r			; -4
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fe5c9
CONST	SEGMENT
__real@3f7fe5c9 DD 03f7fe5c9r			; 0.9996
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Engine@Raytracer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Engine@Raytracer@@QAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0Engine@Raytracer@@QAE@XZ$1
__ehfuncinfo$??0Engine@Raytracer@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Engine@Raytracer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GScene@Raytracer@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GScene@Raytracer@@QAEPAXI@Z PROC			; Raytracer::Scene::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1Scene@Raytracer@@QAE@XZ		; Raytracer::Scene::~Scene
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GScene@Raytracer@@QAEPAXI@Z ENDP			; Raytracer::Scene::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetKdTree@Scene@Raytracer@@QAEPAVKdTree@2@XZ
_TEXT	SEGMENT
?GetKdTree@Scene@Raytracer@@QAEPAVKdTree@2@XZ PROC	; Raytracer::Scene::GetKdTree, COMDAT
; _this$ = ecx

; 272  : 	KdTree* GetKdTree() { return m_KdTree; }

	mov	eax, DWORD PTR [ecx+40]
	ret	0
?GetKdTree@Scene@Raytracer@@QAEPAVKdTree@2@XZ ENDP	; Raytracer::Scene::GetKdTree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetExtends@Scene@Raytracer@@QAEAAVaabb@2@XZ
_TEXT	SEGMENT
?GetExtends@Scene@Raytracer@@QAEAAVaabb@2@XZ PROC	; Raytracer::Scene::GetExtends, COMDAT
; _this$ = ecx

; 271  : 	aabb& GetExtends() { return m_Extends; }

	lea	eax, DWORD PTR [ecx+16]
	ret	0
?GetExtends@Scene@Raytracer@@QAEAAVaabb@2@XZ ENDP	; Raytracer::Scene::GetExtends
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetLight@Scene@Raytracer@@QAEPAVLight@2@H@Z
_TEXT	SEGMENT
_a_Idx$ = 8						; size = 4
?GetLight@Scene@Raytracer@@QAEPAVLight@2@H@Z PROC	; Raytracer::Scene::GetLight, COMDAT
; _this$ = ecx

; 270  : 	Light* GetLight( int a_Idx ) { return m_Light[a_Idx]; }

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _a_Idx$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	pop	ebp
	ret	4
?GetLight@Scene@Raytracer@@QAEPAVLight@2@H@Z ENDP	; Raytracer::Scene::GetLight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetNrLights@Scene@Raytracer@@QAEHXZ
_TEXT	SEGMENT
?GetNrLights@Scene@Raytracer@@QAEHXZ PROC		; Raytracer::Scene::GetNrLights, COMDAT
; _this$ = ecx

; 269  : 	int GetNrLights() { return m_Lights; }

	mov	eax, DWORD PTR [ecx+4]
	ret	0
?GetNrLights@Scene@Raytracer@@QAEHXZ ENDP		; Raytracer::Scene::GetNrLights
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?SetMemoryManager@KdTree@Raytracer@@SAXPAVMManager@2@@Z
_TEXT	SEGMENT
_a_MM$ = 8						; size = 4
?SetMemoryManager@KdTree@Raytracer@@SAXPAVMManager@2@@Z PROC ; Raytracer::KdTree::SetMemoryManager, COMDAT

; 247  : 	static void SetMemoryManager( MManager* a_MM ) { s_MManager = a_MM; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _a_MM$[ebp]
	mov	DWORD PTR ?s_MManager@KdTree@Raytracer@@2PAVMManager@2@A, eax ; Raytracer::KdTree::s_MManager
	pop	ebp
	ret	0
?SetMemoryManager@KdTree@Raytracer@@SAXPAVMManager@2@@Z ENDP ; Raytracer::KdTree::SetMemoryManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetRoot@KdTree@Raytracer@@QAEPAVKdTreeNode@2@XZ
_TEXT	SEGMENT
?GetRoot@KdTree@Raytracer@@QAEPAVKdTreeNode@2@XZ PROC	; Raytracer::KdTree::GetRoot, COMDAT
; _this$ = ecx

; 241  : 	KdTreeNode* GetRoot() { return m_Root; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?GetRoot@KdTree@Raytracer@@QAEPAVKdTreeNode@2@XZ ENDP	; Raytracer::KdTree::GetRoot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetList@KdTreeNode@Raytracer@@QAEPAVObjectList@2@XZ
_TEXT	SEGMENT
?GetList@KdTreeNode@Raytracer@@QAEPAVObjectList@2@XZ PROC ; Raytracer::KdTreeNode::GetList, COMDAT
; _this$ = ecx

; 220  : 	ObjectList* GetList() { return (ObjectList*)(m_Data&0xfffffff8); }

	mov	eax, DWORD PTR [ecx+4]
	and	eax, -8					; fffffff8H
	ret	0
?GetList@KdTreeNode@Raytracer@@QAEPAVObjectList@2@XZ ENDP ; Raytracer::KdTreeNode::GetList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?IsLeaf@KdTreeNode@Raytracer@@QAE_NXZ
_TEXT	SEGMENT
?IsLeaf@KdTreeNode@Raytracer@@QAE_NXZ PROC		; Raytracer::KdTreeNode::IsLeaf, COMDAT
; _this$ = ecx

; 218  : 	bool IsLeaf() { return ((m_Data & 4) > 0); }

	mov	eax, DWORD PTR [ecx+4]
	xor	cl, cl
	and	al, 4
	cmp	cl, al
	sbb	eax, eax
	neg	eax
	ret	0
?IsLeaf@KdTreeNode@Raytracer@@QAE_NXZ ENDP		; Raytracer::KdTreeNode::IsLeaf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetRight@KdTreeNode@Raytracer@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetRight@KdTreeNode@Raytracer@@QAEPAV12@XZ PROC	; Raytracer::KdTreeNode::GetRight, COMDAT
; _this$ = ecx

; 216  : 	KdTreeNode* GetRight() { return ((KdTreeNode*)(m_Data&0xfffffff8)) + 1; }

	mov	eax, DWORD PTR [ecx+4]
	and	eax, -8					; fffffff8H
	add	eax, 8
	ret	0
?GetRight@KdTreeNode@Raytracer@@QAEPAV12@XZ ENDP	; Raytracer::KdTreeNode::GetRight
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetLeft@KdTreeNode@Raytracer@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetLeft@KdTreeNode@Raytracer@@QAEPAV12@XZ PROC		; Raytracer::KdTreeNode::GetLeft, COMDAT
; _this$ = ecx

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	mov	eax, DWORD PTR [ecx+4]
	and	eax, -8					; fffffff8H
	ret	0
?GetLeft@KdTreeNode@Raytracer@@QAEPAV12@XZ ENDP		; Raytracer::KdTreeNode::GetLeft
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetSplitPos@KdTreeNode@Raytracer@@QAEMXZ
_TEXT	SEGMENT
?GetSplitPos@KdTreeNode@Raytracer@@QAEMXZ PROC		; Raytracer::KdTreeNode::GetSplitPos, COMDAT
; _this$ = ecx

; 213  : 	real GetSplitPos() { return m_Split; }

	fld	DWORD PTR [ecx]
	ret	0
?GetSplitPos@KdTreeNode@Raytracer@@QAEMXZ ENDP		; Raytracer::KdTreeNode::GetSplitPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetAxis@KdTreeNode@Raytracer@@QAEHXZ
_TEXT	SEGMENT
?GetAxis@KdTreeNode@Raytracer@@QAEHXZ PROC		; Raytracer::KdTreeNode::GetAxis, COMDAT
; _this$ = ecx

; 211  : 	int GetAxis() { return m_Data & 3; }

	mov	eax, DWORD PTR [ecx+4]
	and	eax, 3
	ret	0
?GetAxis@KdTreeNode@Raytracer@@QAEHXZ ENDP		; Raytracer::KdTreeNode::GetAxis
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ PROC		; Raytracer::ObjectList::GetNext, COMDAT
; _this$ = ecx

; 195  : 	ObjectList* GetNext() { return m_Next; }

	mov	eax, DWORD PTR [ecx+4]
	ret	0
?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ ENDP		; Raytracer::ObjectList::GetNext
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetPrimitive@ObjectList@Raytracer@@QAEPAVPrimitive@2@XZ
_TEXT	SEGMENT
?GetPrimitive@ObjectList@Raytracer@@QAEPAVPrimitive@2@XZ PROC ; Raytracer::ObjectList::GetPrimitive, COMDAT
; _this$ = ecx

; 193  : 	Primitive* GetPrimitive() { return m_Primitive; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?GetPrimitive@ObjectList@Raytracer@@QAEPAVPrimitive@2@XZ ENDP ; Raytracer::ObjectList::GetPrimitive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetMaterial@Primitive@Raytracer@@QAEPAVMaterial@2@XZ
_TEXT	SEGMENT
?GetMaterial@Primitive@Raytracer@@QAEPAVMaterial@2@XZ PROC ; Raytracer::Primitive::GetMaterial, COMDAT
; _this$ = ecx

; 135  : 	Material* GetMaterial() { return m_Material; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?GetMaterial@Primitive@Raytracer@@QAEPAVMaterial@2@XZ ENDP ; Raytracer::Primitive::GetMaterial
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetType@Light@Raytracer@@QAEHXZ
_TEXT	SEGMENT
?GetType@Light@Raytracer@@QAEHXZ PROC			; Raytracer::Light::GetType, COMDAT
; _this$ = ecx

; 115  : 	int GetType() { return m_Type; }

	mov	eax, DWORD PTR [ecx+48]
	ret	0
?GetType@Light@Raytracer@@QAEHXZ ENDP			; Raytracer::Light::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetColor@Light@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetColor@Light@Raytracer@@QAEAAVvector3@2@XZ PROC	; Raytracer::Light::GetColor, COMDAT
; _this$ = ecx

; 114  : 	Color& GetColor() { return m_Color; }

	lea	eax, DWORD PTR [ecx+36]
	ret	0
?GetColor@Light@Raytracer@@QAEAAVvector3@2@XZ ENDP	; Raytracer::Light::GetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetGrid@Light@Raytracer@@QAEAAVvector3@2@H@Z
_TEXT	SEGMENT
_a_Idx$ = 8						; size = 4
?GetGrid@Light@Raytracer@@QAEAAVvector3@2@H@Z PROC	; Raytracer::Light::GetGrid, COMDAT
; _this$ = ecx

; 113  : 	vector3& GetGrid( int a_Idx ) { return m_Grid[a_Idx]; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _a_Idx$[ebp]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [ecx+52]
	lea	eax, DWORD PTR [eax+edx*4]
	pop	ebp
	ret	4
?GetGrid@Light@Raytracer@@QAEAAVvector3@2@H@Z ENDP	; Raytracer::Light::GetGrid
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetCellY@Light@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetCellY@Light@Raytracer@@QAEAAVvector3@2@XZ PROC	; Raytracer::Light::GetCellY, COMDAT
; _this$ = ecx

; 112  : 	vector3& GetCellY() { return m_CellY; }

	lea	eax, DWORD PTR [ecx+24]
	ret	0
?GetCellY@Light@Raytracer@@QAEAAVvector3@2@XZ ENDP	; Raytracer::Light::GetCellY
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetCellX@Light@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetCellX@Light@Raytracer@@QAEAAVvector3@2@XZ PROC	; Raytracer::Light::GetCellX, COMDAT
; _this$ = ecx

; 111  : 	vector3& GetCellX() { return m_CellX; }

	lea	eax, DWORD PTR [ecx+12]
	ret	0
?GetCellX@Light@Raytracer@@QAEAAVvector3@2@XZ ENDP	; Raytracer::Light::GetCellX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetPos@Light@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetPos@Light@Raytracer@@QAEAAVvector3@2@XZ PROC	; Raytracer::Light::GetPos, COMDAT
; _this$ = ecx

; 110  : 	vector3& GetPos() { return m_Pos; }

	mov	eax, ecx
	ret	0
?GetPos@Light@Raytracer@@QAEAAVvector3@2@XZ ENDP	; Raytracer::Light::GetPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetDiffuseRefl@Material@Raytracer@@QAEMXZ
_TEXT	SEGMENT
?GetDiffuseRefl@Material@Raytracer@@QAEMXZ PROC		; Raytracer::Material::GetDiffuseRefl, COMDAT
; _this$ = ecx

; 60   : 	real GetDiffuseRefl() { return m_DRefl; }

	fld	DWORD PTR [ecx+28]
	ret	0
?GetDiffuseRefl@Material@Raytracer@@QAEMXZ ENDP		; Raytracer::Material::GetDiffuseRefl
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetRefrIndex@Material@Raytracer@@QAEMXZ
_TEXT	SEGMENT
?GetRefrIndex@Material@Raytracer@@QAEMXZ PROC		; Raytracer::Material::GetRefrIndex, COMDAT
; _this$ = ecx

; 58   : 	real GetRefrIndex() { return m_RIndex; }

	fld	DWORD PTR [ecx+32]
	ret	0
?GetRefrIndex@Material@Raytracer@@QAEMXZ ENDP		; Raytracer::Material::GetRefrIndex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetRefraction@Material@Raytracer@@QAEMXZ
_TEXT	SEGMENT
?GetRefraction@Material@Raytracer@@QAEMXZ PROC		; Raytracer::Material::GetRefraction, COMDAT
; _this$ = ecx

; 56   : 	real GetRefraction() { return m_Refr; }

	fld	DWORD PTR [ecx+16]
	ret	0
?GetRefraction@Material@Raytracer@@QAEMXZ ENDP		; Raytracer::Material::GetRefraction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetReflection@Material@Raytracer@@QAEMXZ
_TEXT	SEGMENT
?GetReflection@Material@Raytracer@@QAEMXZ PROC		; Raytracer::Material::GetReflection, COMDAT
; _this$ = ecx

; 55   : 	real GetReflection() { return m_Refl; }

	fld	DWORD PTR [ecx+12]
	ret	0
?GetReflection@Material@Raytracer@@QAEMXZ ENDP		; Raytracer::Material::GetReflection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetDiffuse@Material@Raytracer@@QAEMXZ
_TEXT	SEGMENT
?GetDiffuse@Material@Raytracer@@QAEMXZ PROC		; Raytracer::Material::GetDiffuse, COMDAT
; _this$ = ecx

; 54   : 	real GetDiffuse() { return m_Diff; }

	fld	DWORD PTR [ecx+20]
	ret	0
?GetDiffuse@Material@Raytracer@@QAEMXZ ENDP		; Raytracer::Material::GetDiffuse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetSpecular@Material@Raytracer@@QAEMXZ
_TEXT	SEGMENT
?GetSpecular@Material@Raytracer@@QAEMXZ PROC		; Raytracer::Material::GetSpecular, COMDAT
; _this$ = ecx

; 53   : 	real GetSpecular() { return m_Spec; }

	fld	DWORD PTR [ecx+24]
	ret	0
?GetSpecular@Material@Raytracer@@QAEMXZ ENDP		; Raytracer::Material::GetSpecular
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetColor@Material@Raytracer@@QAE?AVvector3@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?GetColor@Material@Raytracer@@QAE?AVvector3@2@XZ PROC	; Raytracer::Material::GetColor, COMDAT
; _this$ = ecx

; 47   : 	Color GetColor() { return m_Color; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+8]
	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], ecx
	pop	ebp
	ret	4
?GetColor@Material@Raytracer@@QAE?AVvector3@2@XZ ENDP	; Raytracer::Material::GetColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?RenderTiles@Engine@Raytracer@@QAE_NXZ
_TEXT	SEGMENT
_ty$1$ = -172						; size = 4
_tdir$ = -168						; size = 12
_tdir$3$ = -156						; size = 4
_tdir$2$ = -152						; size = 4
_tdir$1$ = -148						; size = 4
_tdest$1$ = -144					; size = 4
_tx$1$ = -140						; size = 4
tv618 = -136						; size = 4
_ldir$1 = -132						; size = 12
tv647 = -120						; size = 4
tv665 = -116						; size = 4
_pdir$1$ = -112						; size = 4
_pdir$3$ = -108						; size = 4
_pdir$2$ = -104						; size = 4
_acc$2 = -100						; size = 12
_msecs$1$ = -88						; size = 4
_dir$4$ = -84						; size = 4
_dir$5$ = -80						; size = 4
_pdir$3 = -76						; size = 12
_dir$6$ = -64						; size = 8
_dist$4 = -52						; size = 4
_r$5 = -48						; size = 24
_dir$6 = -24						; size = 12
$T7 = -12						; size = 12
?RenderTiles@Engine@Raytracer@@QAE_NXZ PROC		; Raytracer::Engine::RenderTiles, COMDAT
; _this$ = ecx

; 474  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 172				; 000000acH
	push	ebx
	push	esi
	push	edi
	mov	esi, ecx

; 475  : 	// render scene in a tile based fashion
; 476  : 	aabb e = m_Scene->GetExtends();
; 477  : 	// initialize timer
; 478  : 	int msecs = GetTickCount();

	call	DWORD PTR __imp__GetTickCount@0

; 479  : 	// render remaining tiles
; 480  : 	int tx = m_CurrCol, ty = m_CurrRow;

	mov	ecx, DWORD PTR [esi+2620]

; 481  : 	int tdest = tx * TILESIZE + (ty * TILESIZE) * m_Width;

	mov	ebx, DWORD PTR [esi+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm4, DWORD PTR [esi+2596]
	movss	xmm5, DWORD PTR [esi+2600]
	movss	xmm6, DWORD PTR [esi+2604]
	movss	xmm1, DWORD PTR [esi+2584]
	movss	xmm2, DWORD PTR [esi+2588]
	movss	xmm3, DWORD PTR [esi+2592]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 481  : 	int tdest = tx * TILESIZE + (ty * TILESIZE) * m_Width;

	imul	ebx, ecx
	mov	DWORD PTR _ty$1$[esp+184], ecx

; 482  : 	vector3 tdir = m_P1 + (real)(tx * TILESIZE) * m_DX + (real)(ty * TILESIZE) * m_DY;

	shl	ecx, 4
	mov	DWORD PTR _msecs$1$[esp+184], eax
	mov	eax, DWORD PTR [esi+2616]
	add	ebx, eax
	mov	DWORD PTR _tx$1$[esp+184], eax
	movd	xmm0, ecx
	cvtdq2ps xmm0, xmm0
	shl	ebx, 4
	shl	eax, 4
	mov	DWORD PTR _tdest$1$[esp+184], ebx
	mov	DWORD PTR tv647[esp+184], ecx
	mov	DWORD PTR tv618[esp+184], 255		; 000000ffH
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm5, xmm0
	mulss	xmm6, xmm0
	mulss	xmm4, xmm0
	movd	xmm0, eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 482  : 	vector3 tdir = m_P1 + (real)(tx * TILESIZE) * m_DX + (real)(ty * TILESIZE) * m_DY;

	cvtdq2ps xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm1, xmm0
	mulss	xmm2, xmm0
	mulss	xmm3, xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [esi+2536]
	addss	xmm0, xmm1
	movss	xmm1, DWORD PTR [esi+2540]
	addss	xmm1, xmm2
	movss	xmm2, DWORD PTR [esi+2544]
	addss	xmm2, xmm3
	addss	xmm0, xmm4
	addss	xmm1, xmm5
	addss	xmm2, xmm6
	movss	DWORD PTR _tdir$1$[esp+184], xmm0

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _tdir$[esp+184], xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	DWORD PTR _tdir$2$[esp+184], xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _tdir$[esp+188], xmm1

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	DWORD PTR _tdir$3$[esp+184], xmm2

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _tdir$[esp+192], xmm2
	npad	6
$LL15@RenderTile:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 486  : 		vector3 ldir = tdir;

	movq	xmm0, QWORD PTR _tdir$[esp+184]
	mov	edi, ebx
	mov	eax, DWORD PTR _tdir$[esp+192]
	movq	QWORD PTR _ldir$1[esp+184], xmm0
	mov	DWORD PTR _ldir$1[esp+192], eax
	mov	DWORD PTR tv665[esp+184], 16		; 00000010H
	npad	2
$LL13@RenderTile:

; 488  : 		{
; 489  : 			vector3 pdir = ldir;

	movq	QWORD PTR _pdir$3[esp+184], xmm0
	mov	ebx, 16					; 00000010H
	movss	xmm2, DWORD PTR _pdir$3[esp+188]
	movss	xmm3, DWORD PTR _pdir$3[esp+184]
	mov	DWORD PTR _pdir$3[esp+192], eax
	movss	xmm1, DWORD PTR _pdir$3[esp+192]
	movss	DWORD PTR _pdir$3$[esp+184], xmm1
	movss	DWORD PTR _pdir$2$[esp+184], xmm2
	movss	DWORD PTR _pdir$1$[esp+184], xmm3
$LL10@RenderTile:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm3, DWORD PTR [esi+2524]
	movaps	xmm0, xmm2

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _acc$2[esp+184], 0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm0, DWORD PTR [esi+2528]
	movaps	xmm2, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _acc$2[esp+188], 0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm2, DWORD PTR [esi+2532]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _acc$2[esp+192], 0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movq	QWORD PTR _dir$6$[esp+184], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	movaps	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _dir$4$[esp+184], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	mulss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _dir$5$[esp+184], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	addss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
	xorps	xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtss2sd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	movss	xmm1, DWORD PTR __real@3f800000

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	mov	eax, DWORD PTR [esi+2532]

; 461  : 	Color acc( 0, 0, 0 );
; 462  : 	Ray r( m_Origin, dir );
; 463  : 	m_RaysCast++;

	inc	DWORD PTR [esi+2632]

; 21   : {

	mov	DWORD PTR _r$5[esp+200], eax

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	mov	DWORD PTR [esp+4], 1006632960		; 3c000000H
	movq	xmm3, QWORD PTR _dir$6$[esp+192]
	divss	xmm1, xmm0
	mov	DWORD PTR [esp], 1124073472		; 43000000H
	movss	xmm0, DWORD PTR _dir$5$[esp+192]
	movss	xmm2, DWORD PTR _dir$4$[esp+192]
	mulss	xmm0, xmm1
	mulss	xmm3, xmm1
	movss	DWORD PTR _dir$6[esp+200], xmm0

; 21   : {

	mov	eax, DWORD PTR _dir$6[esp+200]
	movq	xmm0, QWORD PTR [esi+2524]
	mov	DWORD PTR _r$5[esp+212], eax

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	lea	eax, DWORD PTR _dist$4[esp+192]
	push	eax
	push	ecx
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	lea	eax, DWORD PTR _acc$2[esp+200]
	mulss	xmm2, xmm1
	mov	ecx, esi
	push	1
	push	eax
	lea	eax, DWORD PTR _r$5[esp+208]

; 21   : {

	movq	QWORD PTR _r$5[esp+208], xmm0
	unpcklps xmm3, xmm2

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	push	eax

; 21   : {

	movq	QWORD PTR _r$5[esp+224], xmm3

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	call	?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z ; Raytracer::Engine::Raytrace

; 491  : 			{
; 492  : 				Color acc( 0, 0, 0 );
; 493  : 				Primitive* prim = RenderRay( pdir, acc );
; 494  : 				int red, green, blue;
; 495  : 				red = (int)(acc.r * 256);

	movss	xmm4, DWORD PTR __real@43800000
	movss	xmm0, DWORD PTR _acc$2[esp+184]
	mulss	xmm0, xmm4
	cvttss2si edx, xmm0

; 496  : 				green = (int)(acc.g * 256);

	movss	xmm0, DWORD PTR _acc$2[esp+188]
	mulss	xmm0, xmm4

; 497  : 				blue = (int)(acc.b * 256);
; 498  : 				if (red > 255) red = 255;

	cmp	edx, 255				; 000000ffH
	cmovg	edx, DWORD PTR tv618[esp+184]
	cvttss2si ecx, xmm0
	movss	xmm0, DWORD PTR _acc$2[esp+192]
	mulss	xmm0, xmm4

; 499  : 				if (green > 255) green = 255;

	cmp	ecx, 255				; 000000ffH
	cmovg	ecx, DWORD PTR tv618[esp+184]
	cvttss2si eax, xmm0

; 500  : 				if (blue > 255) blue = 255;

	cmp	eax, 255				; 000000ffH
	cmovg	eax, DWORD PTR tv618[esp+184]

; 501  : 				m_Dest[dest++] = (red << 16) + (green << 8) + blue;

	shl	edx, 8
	add	edx, ecx
	shl	edx, 8
	add	edx, eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+edi*4], edx
	inc	edi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	xmm0, DWORD PTR [esi+2584]
	addss	xmm0, DWORD PTR _pdir$1$[esp+184]
	movaps	xmm3, xmm0
	movss	xmm0, DWORD PTR [esi+2588]
	movss	DWORD PTR _pdir$1$[esp+184], xmm3
	addss	xmm0, DWORD PTR _pdir$2$[esp+184]
	movaps	xmm2, xmm0
	movss	xmm0, DWORD PTR [esi+2592]
	movss	DWORD PTR _pdir$2$[esp+184], xmm2
	addss	xmm0, DWORD PTR _pdir$3$[esp+184]
	movaps	xmm1, xmm0
	movss	DWORD PTR _pdir$3$[esp+184], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 490  : 			for ( int x = 0; x < TILESIZE; x++ )

	dec	ebx
	jne	$LL10@RenderTile
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	xmm0, DWORD PTR [esi+2596]
	addss	xmm0, DWORD PTR _ldir$1[esp+184]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 505  : 			dest += (m_Width - TILESIZE);

	mov	eax, DWORD PTR [esi+8]
	add	eax, -16				; fffffff0H
	add	edi, eax
	dec	DWORD PTR tv665[esp+184]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	DWORD PTR _ldir$1[esp+184], xmm0
	movss	xmm0, DWORD PTR [esi+2600]
	addss	xmm0, DWORD PTR _ldir$1[esp+188]
	movss	DWORD PTR _ldir$1[esp+188], xmm0
	movss	xmm0, DWORD PTR [esi+2604]
	addss	xmm0, DWORD PTR _ldir$1[esp+192]
	movss	DWORD PTR _ldir$1[esp+192], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 487  : 		for ( int y = 0; y < TILESIZE; y++ )

	je	SHORT $LN87@RenderTile

; 483  : 	while (1)
; 484  : 	{
; 485  : 		int dest = tdest;

	mov	eax, DWORD PTR _ldir$1[esp+192]
	movq	xmm0, QWORD PTR _ldir$1[esp+184]
	jmp	$LL13@RenderTile
$LN87@RenderTile:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm3, DWORD PTR __real@41800000
	movss	xmm1, DWORD PTR [esi+2588]
	movss	xmm2, DWORD PTR [esi+2592]
	movss	xmm0, DWORD PTR [esi+2584]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 509  : 		if (++tx == m_XTiles)

	mov	edi, DWORD PTR _tx$1$[esp+184]
	mov	ebx, DWORD PTR _tdest$1$[esp+184]
	inc	edi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm1, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 507  : 		tdest += TILESIZE;

	add	ebx, 16					; 00000010H
	mov	DWORD PTR _tdest$1$[esp+184], ebx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 509  : 		if (++tx == m_XTiles)

	mov	DWORD PTR _tx$1$[esp+184], edi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	addss	xmm1, DWORD PTR _tdir$2$[esp+184]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm0, xmm3

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	addss	xmm2, DWORD PTR _tdir$3$[esp+184]
	addss	xmm0, DWORD PTR _tdir$1$[esp+184]
	movss	DWORD PTR _tdir$2$[esp+184], xmm1
	movss	DWORD PTR _tdir$[esp+188], xmm1
	movaps	xmm1, xmm2
	movss	DWORD PTR _tdir$3$[esp+184], xmm1
	movss	DWORD PTR _tdir$1$[esp+184], xmm0
	movss	DWORD PTR _tdir$[esp+184], xmm0
	movss	DWORD PTR _tdir$[esp+192], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 509  : 		if (++tx == m_XTiles)

	cmp	edi, DWORD PTR [esi+2624]
	jne	$LN83@RenderTile

; 512  : 			ty++;

	mov	ecx, DWORD PTR tv647[esp+184]
	xor	edi, edi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm3, DWORD PTR [esi+2604]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 512  : 			ty++;

	add	ecx, 16					; 00000010H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm4, DWORD PTR [esi+2596]
	movss	xmm2, DWORD PTR [esi+2600]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 512  : 			ty++;

	mov	eax, DWORD PTR _ty$1$[esp+184]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm1, DWORD PTR [esi+2540]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 512  : 			ty++;

	inc	eax

; 513  : 			tdest = ty * TILESIZE * m_Width;

	mov	ebx, DWORD PTR [esi+8]
	movd	xmm0, ecx

; 514  : 			tdir = m_P1 + (real)(ty * TILESIZE) * m_DY;

	cvtdq2ps xmm0, xmm0
	mov	DWORD PTR _ty$1$[esp+184], eax
	mov	DWORD PTR _tx$1$[esp+184], edi
	mov	DWORD PTR tv647[esp+184], ecx
	imul	ebx, eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm4, xmm0
	mulss	xmm3, xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm4, DWORD PTR [esi+2536]

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 513  : 			tdest = ty * TILESIZE * m_Width;

	shl	ebx, 4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [esi+2544]
	addss	xmm0, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 513  : 			tdest = ty * TILESIZE * m_Width;

	mov	DWORD PTR _tdest$1$[esp+184], ebx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm1, xmm2

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T7[esp+192], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 514  : 			tdir = m_P1 + (real)(ty * TILESIZE) * m_DY;

	mov	eax, DWORD PTR $T7[esp+192]
	mov	DWORD PTR _tdir$[esp+192], eax
	movss	xmm0, DWORD PTR _tdir$[esp+192]
	unpcklps xmm4, xmm1
	movq	QWORD PTR _tdir$[esp+184], xmm4
	movss	DWORD PTR _tdir$3$[esp+184], xmm0
	movss	xmm0, DWORD PTR _tdir$[esp+188]
	movss	DWORD PTR _tdir$2$[esp+184], xmm0
	movss	xmm0, DWORD PTR _tdir$[esp+184]
	movss	DWORD PTR _tdir$1$[esp+184], xmm0
$LN83@RenderTile:

; 515  : 		}
; 516  : 		if (ty < m_YTiles)

	mov	eax, DWORD PTR _ty$1$[esp+184]
	cmp	eax, DWORD PTR [esi+2628]
	jge	SHORT $LN3@RenderTile

; 517  : 		{
; 518  : 			if ((GetTickCount() - msecs) > 200) 

	call	DWORD PTR __imp__GetTickCount@0
	sub	eax, DWORD PTR _msecs$1$[esp+184]
	cmp	eax, 200				; 000000c8H
	jbe	$LL15@RenderTile

; 519  : 			{
; 520  : 				m_CurrCol = tx;
; 521  : 				m_CurrRow = ty;

	mov	eax, DWORD PTR _ty$1$[esp+184]
	mov	DWORD PTR [esi+2620], eax

; 522  : 				return false;

	xor	al, al
	mov	DWORD PTR [esi+2616], edi

; 523  : 			}
; 524  : 		}
; 525  : 		else break;
; 526  : 	}
; 527  : 	return true;
; 528  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@RenderTile:
	pop	edi
	pop	esi
	mov	al, 1
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?RenderTiles@Engine@Raytracer@@QAE_NXZ ENDP		; Raytracer::Engine::RenderTiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?RenderRay@Engine@Raytracer@@QAEPAVPrimitive@2@Vvector3@2@AAV42@@Z
_TEXT	SEGMENT
_dir$4$ = -48						; size = 4
_dir$5$ = -44						; size = 4
_dist$ = -44						; size = 4
_dir$6$ = -40						; size = 8
_dir$ = -40						; size = 12
_r$ = -24						; size = 24
_a_ScreenPos$ = 8					; size = 12
_a_Acc$ = 20						; size = 4
?RenderRay@Engine@Raytracer@@QAEPAVPrimitive@2@Vvector3@2@AAV42@@Z PROC ; Raytracer::Engine::RenderRay, COMDAT
; _this$ = ecx

; 457  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 52					; 00000034H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm0, DWORD PTR _a_ScreenPos$[ebp+4]
	movss	xmm3, DWORD PTR _a_ScreenPos$[ebp]
	movss	xmm2, DWORD PTR _a_ScreenPos$[ebp+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 457  : {

	push	esi
	mov	esi, ecx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm0, DWORD PTR [esi+2528]
	subss	xmm3, DWORD PTR [esi+2524]
	subss	xmm2, DWORD PTR [esi+2532]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	movaps	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _dir$4$[esp+56], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	mulss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movq	QWORD PTR _dir$6$[esp+56], xmm3
	movss	DWORD PTR _dir$5$[esp+56], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	addss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
	xorps	xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtss2sd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 460  : 	NORMALIZE( dir );

	movss	xmm1, DWORD PTR __real@3f800000

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	mov	eax, DWORD PTR [esi+2532]

; 461  : 	Color acc( 0, 0, 0 );
; 462  : 	Ray r( m_Origin, dir );
; 463  : 	m_RaysCast++;

	inc	DWORD PTR [esi+2632]

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	mov	DWORD PTR [esp+4], 1006632960		; 3c000000H

; 21   : {

	mov	DWORD PTR _r$[esp+72], eax

; 460  : 	NORMALIZE( dir );

	movq	xmm3, QWORD PTR _dir$6$[esp+64]
	divss	xmm1, xmm0

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	mov	DWORD PTR [esp], 1124073472		; 43000000H
	movss	xmm0, DWORD PTR _dir$5$[esp+64]
	movss	xmm2, DWORD PTR _dir$4$[esp+64]
	mulss	xmm0, xmm1
	mulss	xmm3, xmm1
	movss	DWORD PTR _dir$[esp+72], xmm0

; 21   : {

	mov	eax, DWORD PTR _dir$[esp+72]
	movq	xmm0, QWORD PTR [esi+2524]
	mov	DWORD PTR _r$[esp+84], eax

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	lea	eax, DWORD PTR _dist$[esp+64]
	push	eax
	push	ecx
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	lea	eax, DWORD PTR _r$[esp+72]
	mulss	xmm2, xmm1
	mov	ecx, esi
	push	1
	push	DWORD PTR _a_Acc$[ebp]

; 21   : {

	movq	QWORD PTR _r$[esp+80], xmm0
	unpcklps xmm3, xmm2

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	push	eax

; 21   : {

	movq	QWORD PTR _r$[esp+96], xmm3

; 464  : 	real dist;
; 465  : 	// trace ray
; 466  : 	return Raytrace( r, a_Acc, 1, 1.0f, dist, SAMPLES, 1.0f / SAMPLES );

	call	?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z ; Raytracer::Engine::Raytrace

; 467  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?RenderRay@Engine@Raytracer@@QAEPAVPrimitive@2@Vvector3@2@AAV42@@Z ENDP ; Raytracer::Engine::RenderRay
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?InitRender@Engine@Raytracer@@QAEXAAVvector3@2@0@Z
_TEXT	SEGMENT
_t$3$ = -272						; size = 8
$T1 = -272						; size = 12
$T2 = -272						; size = 12
$T3 = -272						; size = 12
$T4 = -272						; size = 12
$T5 = -272						; size = 12
$T6 = -272						; size = 12
$T7 = -272						; size = 12
$T8 = -272						; size = 12
$T9 = -272						; size = 12
$T10 = -272						; size = 12
$T11 = -272						; size = 12
$T12 = -272						; size = 12
tv1449 = -256						; size = 4
tv1450 = -252						; size = 4
tv1478 = -248						; size = 4
_zaxis$6$ = -244					; size = 4
_zaxis$1$ = -244					; size = 4
_xaxis$2$ = -240					; size = 4
_zaxis$3$ = -240					; size = 4
_xaxis$1$ = -236					; size = 4
_zaxis$5$ = -236					; size = 4
_this$GSCopy$1$ = -232					; size = 4
_zaxis$2$ = -228					; size = 4
_yaxis$2$ = -224					; size = 4
_t$2$ = -220						; size = 4
_zaxis$4$ = -216					; size = 4
_yaxis$1$ = -212					; size = 4
tv1494 = -208						; size = 16
tv1488 = -192						; size = 16
tv1496 = -176						; size = 16
tv1490 = -160						; size = 16
_m$ = -136						; size = 64
_t$13 = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
_a_Pos$ = 8						; size = 4
_a_Target$ = 12						; size = 4
?InitRender@Engine@Raytracer@@QAEXAAVvector3@2@0@Z PROC	; Raytracer::Engine::InitRender, COMDAT
; _this$ = ecx

; 410  : {

	push	ebp
	mov	ebp, esp
	and	esp, -16				; fffffff0H
	sub	esp, 280				; 00000118H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+280], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	xmm3, DWORD PTR __real@c0800000
	xorps	xmm1, xmm1
	movss	xmm2, DWORD PTR __real@40800000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 416  : 	m_Origin = vector3( 0, 0, -5 );

	movss	xmm0, xmm1
	unpcklps xmm0, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	xmm1, DWORD PTR __real@40400000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 410  : {

	push	esi
	mov	esi, ecx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T12[esp+292], -1063256064	; c0a00000H

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	mov	ecx, DWORD PTR _a_Pos$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 410  : {

	push	edi
	mov	DWORD PTR _this$GSCopy$1$[esp+288], esi

; 414  : 	m_PPos = m_CurrLine * m_Width;

	mov	edi, DWORD PTR [esi+8]

; 416  : 	m_Origin = vector3( 0, 0, -5 );

	movq	QWORD PTR [esi+2524], xmm0

; 417  : 	m_P1 = vector3( -4,  3, 0 );

	movss	xmm0, xmm3
	unpcklps xmm0, xmm1
	movq	QWORD PTR [esi+2536], xmm0

; 418  : 	m_P2 = vector3(  4,  3, 0 );

	movss	xmm0, xmm2
	unpcklps xmm0, xmm1
	lea	eax, DWORD PTR [edi+edi*4]
	movq	QWORD PTR [esi+2548], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	xmm0, DWORD PTR __real@c0400000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 414  : 	m_PPos = m_CurrLine * m_Width;

	shl	eax, 2
	mov	DWORD PTR [esi+20], eax

; 416  : 	m_Origin = vector3( 0, 0, -5 );

	mov	eax, DWORD PTR $T12[esp+296]
	mov	DWORD PTR [esi+2532], eax

; 419  : 	m_P3 = vector3(  4, -3, 0 );

	unpcklps xmm2, xmm0

; 420  : 	m_P4 = vector3( -4, -3, 0 );

	unpcklps xmm3, xmm0
	movq	QWORD PTR [esi+2560], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T11[esp+296], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 417  : 	m_P1 = vector3( -4,  3, 0 );

	mov	eax, DWORD PTR $T11[esp+296]
	mov	DWORD PTR [esi+2544], eax

; 420  : 	m_P4 = vector3( -4, -3, 0 );

	movq	QWORD PTR [esi+2572], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T10[esp+296], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 418  : 	m_P2 = vector3(  4,  3, 0 );

	mov	eax, DWORD PTR $T10[esp+296]
	mov	DWORD PTR [esi+2556], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T9[esp+296], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 419  : 	m_P3 = vector3(  4, -3, 0 );

	mov	eax, DWORD PTR $T9[esp+296]
	mov	DWORD PTR [esi+2568], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR $T8[esp+296], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 420  : 	m_P4 = vector3( -4, -3, 0 );

	mov	eax, DWORD PTR $T8[esp+296]
	mov	DWORD PTR [esi+2580], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	mov	eax, DWORD PTR _a_Target$[ebp]
	mov	DWORD PTR [esi+16], 20			; 00000014H
	movss	xmm0, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR [ecx+4]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [eax+8]
	subss	xmm3, xmm0
	movss	DWORD PTR tv1478[esp+288], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	subss	xmm0, xmm1
	movss	DWORD PTR tv1449[esp+288], xmm1
	movss	xmm1, DWORD PTR [ecx+8]
	subss	xmm2, xmm1
	movss	DWORD PTR tv1450[esp+288], xmm1
	movss	DWORD PTR _zaxis$1$[esp+288], xmm3

; 66   : 	real Length() { return (real)sqrt( x * x + y * y + z * z ); }

	movaps	xmm1, xmm0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _zaxis$3$[esp+288], xmm0

; 66   : 	real Length() { return (real)sqrt( x * x + y * y + z * z ); }

	mulss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _zaxis$5$[esp+288], xmm2

; 66   : 	real Length() { return (real)sqrt( x * x + y * y + z * z ); }

	addss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 65   : 	void Normalize() { real l = 1.0f / Length(); x *= l; y *= l; z *= l; }

	movss	xmm3, DWORD PTR __real@3f800000
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 65   : 	void Normalize() { real l = 1.0f / Length(); x *= l; y *= l; z *= l; }

	divss	xmm3, xmm0
	movaps	xmm1, xmm3
	movaps	xmm7, xmm3
	mulss	xmm1, DWORD PTR _zaxis$1$[esp+288]
	mulss	xmm7, DWORD PTR _zaxis$3$[esp+288]
	mulss	xmm3, DWORD PTR _zaxis$5$[esp+288]
	movss	DWORD PTR _zaxis$2$[esp+288], xmm1

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movaps	xmm2, xmm7

; 65   : 	void Normalize() { real l = 1.0f / Length(); x *= l; y *= l; z *= l; }

	movss	DWORD PTR _zaxis$4$[esp+288], xmm7
	movss	DWORD PTR _zaxis$6$[esp+288], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 430  : 	m.cell[8] = zaxis.x, m.cell[9] = zaxis.y, m.cell[10] = zaxis.z;

	xorps	xmm6, xmm6
	movss	DWORD PTR _m$[esp+324], xmm7
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	mulss	xmm2, xmm6

; 105  : 	matrix() { Identity(); }

	lea	ecx, DWORD PTR _t$13[esp+288]

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movaps	xmm5, xmm3
	movaps	xmm4, xmm1
	movaps	xmm0, xmm3
	mulss	xmm4, xmm6
	mulss	xmm0, xmm6
	subss	xmm5, xmm2
	subss	xmm2, xmm1

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }
; 71   : 	void operator += ( vector3* a_V ) { x += a_V->x; y += a_V->y; z += a_V->z; }
; 72   : 	void operator -= ( vector3& a_V ) { x -= a_V.x; y -= a_V.y; z -= a_V.z; }
; 73   : 	void operator -= ( vector3* a_V ) { x -= a_V->x; y -= a_V->y; z -= a_V->z; }
; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }
; 75   : 	void operator *= ( vector3& a_V ) { x *= a_V.x; y *= a_V.y; z *= a_V.z; }
; 76   : 	void operator *= ( vector3* a_V ) { x *= a_V->x; y *= a_V->y; z *= a_V->z; }
; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	movaps	xmm6, xmm7

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	subss	xmm4, xmm0

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }
; 71   : 	void operator += ( vector3* a_V ) { x += a_V->x; y += a_V->y; z += a_V->z; }
; 72   : 	void operator -= ( vector3& a_V ) { x -= a_V.x; y -= a_V.y; z -= a_V.z; }
; 73   : 	void operator -= ( vector3* a_V ) { x -= a_V->x; y -= a_V->y; z -= a_V->z; }
; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }
; 75   : 	void operator *= ( vector3& a_V ) { x *= a_V.x; y *= a_V.y; z *= a_V.z; }
; 76   : 	void operator *= ( vector3* a_V ) { x *= a_V->x; y *= a_V->y; z *= a_V->z; }
; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	movss	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	xorps	xmm6, xmm0

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movss	DWORD PTR _xaxis$1$[esp+288], xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 428  : 	m.cell[0] = xaxis.x, m.cell[1] = xaxis.y, m.cell[2] = xaxis.z;

	movss	DWORD PTR _m$[esp+288], xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movq	QWORD PTR _t$3$[esp+288], xmm2

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }
; 71   : 	void operator += ( vector3* a_V ) { x += a_V->x; y += a_V->y; z += a_V->z; }
; 72   : 	void operator -= ( vector3& a_V ) { x -= a_V.x; y -= a_V.y; z -= a_V.z; }
; 73   : 	void operator -= ( vector3* a_V ) { x -= a_V->x; y -= a_V->y; z -= a_V->z; }
; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }
; 75   : 	void operator *= ( vector3& a_V ) { x *= a_V.x; y *= a_V.y; z *= a_V.z; }
; 76   : 	void operator *= ( vector3* a_V ) { x *= a_V->x; y *= a_V->y; z *= a_V->z; }
; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	movaps	xmm2, xmm1
	xorps	xmm2, xmm0
	movaps	xmm1, xmm3
	xorps	xmm1, xmm0

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movss	DWORD PTR _xaxis$2$[esp+288], xmm4
	movaps	xmm0, xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 428  : 	m.cell[0] = xaxis.x, m.cell[1] = xaxis.y, m.cell[2] = xaxis.z;

	movss	DWORD PTR _m$[esp+292], xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	mulss	xmm0, DWORD PTR _t$3$[esp+288]
	movaps	xmm3, xmm1
	mulss	xmm3, xmm4
	mulss	xmm1, xmm5
	subss	xmm3, xmm0
	mulss	xmm6, xmm5
	movaps	xmm0, xmm2
	mulss	xmm2, xmm4
	mulss	xmm0, DWORD PTR _t$3$[esp+288]
	subss	xmm6, xmm2
	movss	DWORD PTR _yaxis$1$[esp+288], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 429  : 	m.cell[4] = yaxis.x, m.cell[5] = yaxis.y, m.cell[6] = yaxis.z;

	movss	DWORD PTR _m$[esp+304], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	subss	xmm0, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 428  : 	m.cell[0] = xaxis.x, m.cell[1] = xaxis.y, m.cell[2] = xaxis.z;

	movq	xmm1, QWORD PTR _t$3$[esp+288]
	movss	DWORD PTR _m$[esp+296], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movss	DWORD PTR _t$2$[esp+288], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 429  : 	m.cell[4] = yaxis.x, m.cell[5] = yaxis.y, m.cell[6] = yaxis.z;

	movss	DWORD PTR _m$[esp+312], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movss	DWORD PTR _yaxis$2$[esp+288], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 429  : 	m.cell[4] = yaxis.x, m.cell[5] = yaxis.y, m.cell[6] = yaxis.z;

	movss	DWORD PTR _m$[esp+308], xmm0

; 430  : 	m.cell[8] = zaxis.x, m.cell[9] = zaxis.y, m.cell[10] = zaxis.z;

	movss	xmm0, DWORD PTR _zaxis$2$[esp+288]
	movss	DWORD PTR _m$[esp+320], xmm0
	movss	xmm0, DWORD PTR _zaxis$6$[esp+288]
	movss	DWORD PTR _m$[esp+328], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 105  : 	matrix() { Identity(); }

	call	?Identity@matrix@Raytracer@@QAEXXZ	; Raytracer::matrix::Identity

; 159  : 		return vector3( x, y, z );
; 160  : 	}
; 161  : 	void Invert()
; 162  : 	{
; 163  : 		matrix t;
; 164  : 		real tx = -cell[3], ty = -cell[7], tz = -cell[11];
; 165  : 		for ( int h = 0; h < 3; h++ ) for ( int v = 0; v < 3; v++ ) t.cell[h + v * 4] = cell[v + h * 4];

	movss	xmm0, DWORD PTR _xaxis$1$[esp+288]

; 166  : 		for ( int i = 0; i < 11; i++ ) cell[i] = t.cell[i];

	movq	xmm1, QWORD PTR _t$3$[esp+288]
	movss	DWORD PTR _t$13[esp+288], xmm0
	movss	xmm0, DWORD PTR _xaxis$2$[esp+288]

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm4, DWORD PTR [esi+2528]
	movss	xmm3, DWORD PTR [esi+2524]

; 159  : 		return vector3( x, y, z );
; 160  : 	}
; 161  : 	void Invert()
; 162  : 	{
; 163  : 		matrix t;
; 164  : 		real tx = -cell[3], ty = -cell[7], tz = -cell[11];
; 165  : 		for ( int h = 0; h < 3; h++ ) for ( int v = 0; v < 3; v++ ) t.cell[h + v * 4] = cell[v + h * 4];

	movss	DWORD PTR _t$13[esp+304], xmm0
	movss	xmm0, DWORD PTR _yaxis$1$[esp+288]
	movss	DWORD PTR _t$13[esp+292], xmm0
	movss	xmm0, DWORD PTR _yaxis$2$[esp+288]

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm5, DWORD PTR [esi+2532]

; 159  : 		return vector3( x, y, z );
; 160  : 	}
; 161  : 	void Invert()
; 162  : 	{
; 163  : 		matrix t;
; 164  : 		real tx = -cell[3], ty = -cell[7], tz = -cell[11];
; 165  : 		for ( int h = 0; h < 3; h++ ) for ( int v = 0; v < 3; v++ ) t.cell[h + v * 4] = cell[v + h * 4];

	movss	DWORD PTR _t$13[esp+308], xmm0
	movss	xmm0, DWORD PTR _zaxis$2$[esp+288]
	movss	DWORD PTR _t$13[esp+296], xmm0
	movss	xmm0, DWORD PTR _zaxis$4$[esp+288]

; 166  : 		for ( int i = 0; i < 11; i++ ) cell[i] = t.cell[i];

	movdqu	xmm2, XMMWORD PTR _t$13[esp+288]
	movss	DWORD PTR _t$13[esp+312], xmm0
	movss	xmm0, DWORD PTR _zaxis$6$[esp+288]

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movaps	xmm6, xmm2

; 166  : 		for ( int i = 0; i < 11; i++ ) cell[i] = t.cell[i];

	movdqu	xmm7, XMMWORD PTR _t$13[esp+304]
	movss	DWORD PTR _t$13[esp+328], xmm0
	movss	xmm0, DWORD PTR _t$2$[esp+288]
	mov	eax, DWORD PTR _t$13[esp+328]
	unpcklps xmm1, xmm0

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movaps	xmm0, xmm2
	shufps	xmm0, xmm2, 85				; 00000055H
	movaps	XMMWORD PTR tv1496[esp+288], xmm0
	mulss	xmm6, xmm3

; 166  : 		for ( int i = 0; i < 11; i++ ) cell[i] = t.cell[i];

	mov	DWORD PTR _m$[esp+328], eax

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	mulss	xmm0, xmm4

; 166  : 		for ( int i = 0; i < 11; i++ ) cell[i] = t.cell[i];

	movq	QWORD PTR _m$[esp+320], xmm1

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	addss	xmm6, xmm0
	movaps	xmm0, xmm2

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	movss	xmm1, DWORD PTR _m$[esp+320]
	shufps	xmm0, xmm2, 170				; 000000aaH
	movaps	xmm2, xmm7
	movaps	XMMWORD PTR tv1494[esp+288], xmm0
	mulss	xmm0, xmm5
	mulss	xmm2, xmm3
	addss	xmm6, xmm0
	mulss	xmm1, xmm3
	movaps	xmm0, xmm7
	shufps	xmm0, xmm7, 85				; 00000055H
	movaps	XMMWORD PTR tv1490[esp+288], xmm0
	mulss	xmm0, xmm4
	addss	xmm6, DWORD PTR tv1478[esp+288]
	addss	xmm2, xmm0
	movaps	xmm0, xmm7
	shufps	xmm0, xmm7, 170				; 000000aaH
	movaps	XMMWORD PTR tv1488[esp+288], xmm0
	mulss	xmm0, xmm5
	movss	xmm7, DWORD PTR _m$[esp+328]
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR _m$[esp+324]
	mulss	xmm0, xmm4
	addss	xmm2, DWORD PTR tv1449[esp+288]
	addss	xmm1, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 434  : 	m_Origin = m.Transform( m_Origin );

	unpcklps xmm6, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 434  : 	m_Origin = m.Transform( m_Origin );

	movq	QWORD PTR [esi+2524], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm6, DWORD PTR _t$13[esp+288]
	movss	xmm0, DWORD PTR tv1496[esp+288]

; 157  : 		real y  = cell[4] * v.x + cell[5] * v.y + cell[6] * v.z + cell[7];

	movss	xmm2, DWORD PTR _t$13[esp+304]

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, DWORD PTR tv1450[esp+288]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T7[esp+296], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 434  : 	m_Origin = m.Transform( m_Origin );

	mov	eax, DWORD PTR $T7[esp+296]
	mov	DWORD PTR [esi+2532], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm5, DWORD PTR [esi+2540]
	movss	xmm3, DWORD PTR [esi+2536]
	movss	xmm4, DWORD PTR [esi+2544]
	mulss	xmm0, xmm5
	mulss	xmm6, xmm3

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	movss	xmm1, DWORD PTR _m$[esp+320]
	mulss	xmm2, xmm3
	addss	xmm6, xmm0
	mulss	xmm1, xmm3
	movss	xmm0, DWORD PTR tv1494[esp+288]
	mulss	xmm0, xmm4
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR tv1490[esp+288]
	mulss	xmm0, xmm5
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1488[esp+288]
	addss	xmm6, DWORD PTR tv1478[esp+288]
	mulss	xmm0, xmm4
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR _m$[esp+324]
	mulss	xmm0, xmm5
	addss	xmm2, DWORD PTR tv1449[esp+288]
	addss	xmm1, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 435  : 	m_P1 = m.Transform( m_P1 );

	unpcklps xmm6, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 435  : 	m_P1 = m.Transform( m_P1 );

	movq	QWORD PTR [esi+2536], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm0, DWORD PTR tv1496[esp+288]
	movss	xmm6, DWORD PTR _t$13[esp+288]

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, DWORD PTR tv1450[esp+288]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T6[esp+296], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 435  : 	m_P1 = m.Transform( m_P1 );

	mov	eax, DWORD PTR $T6[esp+296]
	mov	DWORD PTR [esi+2544], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm5, DWORD PTR [esi+2552]
	movss	xmm3, DWORD PTR [esi+2548]
	movss	xmm4, DWORD PTR [esi+2556]
	mulss	xmm6, xmm3
	mulss	xmm0, xmm5
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR tv1494[esp+288]
	mulss	xmm0, xmm4
	addss	xmm6, xmm0
	addss	xmm6, DWORD PTR tv1478[esp+288]

; 157  : 		real y  = cell[4] * v.x + cell[5] * v.y + cell[6] * v.z + cell[7];

	movss	xmm2, DWORD PTR _t$13[esp+304]
	movss	xmm0, DWORD PTR tv1490[esp+288]
	mulss	xmm0, xmm5

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	movss	xmm1, DWORD PTR _m$[esp+320]
	mulss	xmm2, xmm3
	mulss	xmm1, xmm3
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1488[esp+288]
	mulss	xmm0, xmm4
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR _m$[esp+324]
	mulss	xmm0, xmm5
	addss	xmm2, DWORD PTR tv1449[esp+288]
	addss	xmm1, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 436  : 	m_P2 = m.Transform( m_P2 );

	unpcklps xmm6, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 436  : 	m_P2 = m.Transform( m_P2 );

	movq	QWORD PTR [esi+2548], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm6, DWORD PTR _t$13[esp+288]
	movss	xmm0, DWORD PTR tv1496[esp+288]

; 157  : 		real y  = cell[4] * v.x + cell[5] * v.y + cell[6] * v.z + cell[7];

	movss	xmm2, DWORD PTR _t$13[esp+304]

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, DWORD PTR tv1450[esp+288]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T5[esp+296], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 436  : 	m_P2 = m.Transform( m_P2 );

	mov	eax, DWORD PTR $T5[esp+296]
	mov	DWORD PTR [esi+2556], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm5, DWORD PTR [esi+2564]
	movss	xmm3, DWORD PTR [esi+2560]
	movss	xmm4, DWORD PTR [esi+2568]
	mulss	xmm0, xmm5
	mulss	xmm6, xmm3

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	movss	xmm1, DWORD PTR _m$[esp+320]
	mulss	xmm2, xmm3
	addss	xmm6, xmm0
	mulss	xmm1, xmm3
	movss	xmm0, DWORD PTR tv1494[esp+288]
	mulss	xmm0, xmm4
	movss	xmm3, DWORD PTR _m$[esp+324]
	addss	xmm6, xmm0
	movss	xmm0, DWORD PTR tv1490[esp+288]
	mulss	xmm0, xmm5
	addss	xmm6, DWORD PTR tv1478[esp+288]
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR tv1488[esp+288]
	mulss	xmm0, xmm4
	addss	xmm2, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm5

; 157  : 		real y  = cell[4] * v.x + cell[5] * v.y + cell[6] * v.z + cell[7];

	movdqu	xmm5, XMMWORD PTR _t$13[esp+304]
	addss	xmm2, DWORD PTR tv1449[esp+288]

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, xmm4

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movaps	xmm4, XMMWORD PTR tv1496[esp+288]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 437  : 	m_P3 = m.Transform( m_P3 );

	unpcklps xmm6, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 437  : 	m_P3 = m.Transform( m_P3 );

	movq	QWORD PTR [esi+2560], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movdqu	xmm6, XMMWORD PTR _t$13[esp+288]

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm1, DWORD PTR tv1450[esp+288]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T4[esp+296], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 437  : 	m_P3 = m.Transform( m_P3 );

	mov	eax, DWORD PTR $T4[esp+296]
	mov	DWORD PTR [esi+2568], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	movss	xmm2, DWORD PTR [esi+2576]
	movss	xmm0, DWORD PTR [esi+2572]
	movss	xmm1, DWORD PTR [esi+2580]
	mulss	xmm4, xmm2
	mulss	xmm6, xmm0

; 157  : 		real y  = cell[4] * v.x + cell[5] * v.y + cell[6] * v.z + cell[7];

	mulss	xmm5, xmm0
	addss	xmm6, xmm4
	movaps	xmm4, XMMWORD PTR tv1494[esp+288]
	mulss	xmm4, xmm1
	addss	xmm6, xmm4
	movaps	xmm4, XMMWORD PTR tv1490[esp+288]
	mulss	xmm4, xmm2
	addss	xmm6, DWORD PTR tv1478[esp+288]
	addss	xmm5, xmm4
	movaps	xmm4, XMMWORD PTR tv1488[esp+288]
	mulss	xmm4, xmm1
	addss	xmm5, xmm4

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	movss	xmm4, DWORD PTR _m$[esp+320]
	addss	xmm5, DWORD PTR tv1449[esp+288]
	mulss	xmm4, xmm0
	mulss	xmm3, xmm2
	movd	xmm0, edi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 440  : 	m_DX = (m_P2 - m_P1) * (1.0f / m_Width);

	cvtdq2ps xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	mulss	xmm7, xmm1
	addss	xmm4, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 438  : 	m_P4 = m.Transform( m_P4 );

	unpcklps xmm6, xmm5

; 440  : 	m_DX = (m_P2 - m_P1) * (1.0f / m_Width);

	movss	xmm5, DWORD PTR __real@3f800000
	movaps	xmm1, xmm5
	movq	QWORD PTR [esi+2572], xmm6
	divss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	addss	xmm4, xmm7
	addss	xmm4, DWORD PTR tv1450[esp+288]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T3[esp+296], xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 438  : 	m_P4 = m.Transform( m_P4 );

	mov	eax, DWORD PTR $T3[esp+296]
	mov	DWORD PTR [esi+2580], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm4, DWORD PTR [esi+2548]
	movss	xmm3, DWORD PTR [esi+2552]
	subss	xmm3, DWORD PTR [esi+2540]
	movss	xmm2, DWORD PTR [esi+2556]
	subss	xmm2, DWORD PTR [esi+2544]
	subss	xmm4, DWORD PTR [esi+2536]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm1
	mulss	xmm2, xmm1
	mulss	xmm4, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T2[esp+296], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 440  : 	m_DX = (m_P2 - m_P1) * (1.0f / m_Width);

	mov	eax, DWORD PTR $T2[esp+296]
	unpcklps xmm4, xmm3
	movq	QWORD PTR [esi+2584], xmm4
	mov	DWORD PTR [esi+2592], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm3, DWORD PTR [esi+2572]
	movss	xmm2, DWORD PTR [esi+2576]
	movss	xmm1, DWORD PTR [esi+2580]
	subss	xmm3, DWORD PTR [esi+2536]
	subss	xmm2, DWORD PTR [esi+2540]
	subss	xmm1, DWORD PTR [esi+2544]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 441  : 	m_DY = (m_P4 - m_P1) * (1.0f / m_Height);

	mov	esi, DWORD PTR [esi+12]
	mov	eax, DWORD PTR _this$GSCopy$1$[esp+288]
	movd	xmm0, esi
	cvtdq2ps xmm0, xmm0
	divss	xmm5, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm5
	mulss	xmm2, xmm5
	mulss	xmm1, xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 441  : 	m_DY = (m_P4 - m_P1) * (1.0f / m_Height);

	unpcklps xmm3, xmm2
	movq	QWORD PTR [eax+2596], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T1[esp+296], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 441  : 	m_DY = (m_P4 - m_P1) * (1.0f / m_Height);

	mov	ecx, DWORD PTR $T1[esp+296]
	mov	DWORD PTR [eax+2604], ecx

; 442  : 	// setup the tile renderer
; 443  : 	m_CurrCol = 0;

	mov	ecx, eax

; 444  : 	m_CurrRow = 20 / TILESIZE;
; 445  : 	m_XTiles = m_Width / TILESIZE;

	mov	eax, edi
	cdq
	and	edx, 15					; 0000000fH
	add	eax, edx
	mov	DWORD PTR [ecx+2616], 0
	sar	eax, 4
	mov	DWORD PTR [ecx+2624], eax

; 446  : 	m_YTiles = (m_Height - 40) / TILESIZE;

	lea	eax, DWORD PTR [esi-40]
	cdq
	and	edx, 15					; 0000000fH
	mov	DWORD PTR [ecx+2620], 1
	add	eax, edx

; 447  : 	// reset counters
; 448  : 	m_Intersections = 0;

	mov	DWORD PTR [ecx+2636], 0
	sar	eax, 4
	mov	DWORD PTR [ecx+2628], eax

; 449  : 	m_RaysCast = 0;

	mov	DWORD PTR [ecx+2632], 0

; 450  : }

	mov	ecx, DWORD PTR __$ArrayPad$[esp+288]
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?InitRender@Engine@Raytracer@@QAEXAAVvector3@2@0@Z ENDP	; Raytracer::Engine::InitRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?CalcShade@Engine@Raytracer@@QAEMPAVLight@2@Vvector3@2@AAV42@MM@Z
_TEXT	SEGMENT
_retval$ = -108						; size = 4
_retval$1$ = -104					; size = 4
tv184 = -104						; size = 4
$T1 = -100						; size = 4
tv492 = -100						; size = 4
tv240 = -100						; size = 4
_dir$5$ = -96						; size = 4
$T2 = -96						; size = 4
tv491 = -96						; size = 4
tv244 = -96						; size = 4
_tdist$3 = -96						; size = 4
_dir$3$ = -92						; size = 4
tv493 = -92						; size = 4
_f$ = -92						; size = 4
_f$ = -92						; size = 4
_dir$1$ = -88						; size = 4
$T4 = -88						; size = 4
_ldist$5 = -88						; size = 4
_deltay$6 = -84						; size = 12
_deltax$7 = -72						; size = 12
$T8 = -72						; size = 12
$T9 = -72						; size = 12
$T10 = -72						; size = 12
$T11 = -60						; size = 12
_dir$12 = -48						; size = 12
$T13 = -48						; size = 24
$T14 = -24						; size = 24
_a_Light$ = 8						; size = 4
_a_IP$ = 12						; size = 12
_a_Dir$ = 24						; size = 4
_a_Samples$ = 28					; size = 4
_a_SScale$ = 32						; size = 4
?CalcShade@Engine@Raytracer@@QAEMPAVLight@2@Vvector3@2@AAV42@MM@Z PROC ; Raytracer::Engine::CalcShade, COMDAT
; _this$ = ecx

; 369  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
	push	edi

; 370  : 	real retval;
; 371  : 	Primitive* prim = 0;
; 372  : 	if (a_Light->GetType() == Light::POINT)

	mov	edi, DWORD PTR _a_Light$[ebp]
	mov	ebx, ecx
	mov	eax, DWORD PTR [edi+48]
	cmp	eax, 1
	jne	$LN8@CalcShade
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm2, DWORD PTR [edi]
	movss	xmm1, DWORD PTR [edi+4]
	subss	xmm1, DWORD PTR _a_IP$[ebp+4]
	movss	xmm0, DWORD PTR [edi+8]
	subss	xmm0, DWORD PTR _a_IP$[ebp+8]
	subss	xmm2, DWORD PTR _a_IP$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 376  : 		a_Dir = a_Light->GetPos() - a_IP;

	mov	esi, DWORD PTR _a_Dir$[ebp]
	mov	DWORD PTR _retval$[esp+120], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T10[esp+128], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 376  : 		a_Dir = a_Light->GetPos() - a_IP;

	mov	eax, DWORD PTR $T10[esp+128]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [esi], xmm2
	mov	DWORD PTR [esi+8], eax

; 377  : 		real tdist = LENGTH( a_Dir );

	movss	xmm0, DWORD PTR [esi]
	movss	xmm3, DWORD PTR [esi+4]
	movaps	xmm1, xmm0
	movss	xmm2, DWORD PTR [esi+8]
	mulss	xmm1, xmm0
	movss	DWORD PTR tv184[esp+120], xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movss	DWORD PTR tv240[esp+120], xmm3
	movss	DWORD PTR tv244[esp+120], xmm2
	addss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }

	movss	xmm2, DWORD PTR tv184[esp+120]
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 381  : 		if (!FindOccluder( Ray( a_IP + a_Dir * EPSILON, a_Dir ), tdist )) return 1;

	mov	ecx, ebx
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, xmm1
	mulss	xmm1, DWORD PTR __real@3f7fe5c9
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }

	mulss	xmm2, xmm0
	movss	DWORD PTR [esi], xmm2
	movss	xmm2, DWORD PTR tv240[esp+120]
	mulss	xmm2, xmm0
	movss	DWORD PTR [esi+4], xmm2
	movss	xmm2, DWORD PTR tv244[esp+120]
	mulss	xmm2, xmm0

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR __real@38d1b717
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 379  : 		tdist *= 1 - 4 * EPSILON;

	movss	DWORD PTR _tdist$3[esp+120], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }

	movss	DWORD PTR [esi+8], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 380  : 		m_RaysCast++;

	inc	DWORD PTR [ebx+2632]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm1, DWORD PTR [esi+8]
	movss	xmm3, DWORD PTR [esi]
	movss	xmm2, DWORD PTR [esi+4]
	mulss	xmm1, xmm0
	mulss	xmm3, xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm1, DWORD PTR _a_IP$[ebp+8]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm3, DWORD PTR _a_IP$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	movq	xmm0, QWORD PTR [esi]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm2, DWORD PTR _a_IP$[ebp+4]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T9[esp+128], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	mov	eax, DWORD PTR $T9[esp+128]
	mov	DWORD PTR $T13[esp+128], eax
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR $T13[esp+140], eax

; 381  : 		if (!FindOccluder( Ray( a_IP + a_Dir * EPSILON, a_Dir ), tdist )) return 1;

	lea	eax, DWORD PTR _tdist$3[esp+120]
	push	eax
	lea	eax, DWORD PTR $T13[esp+124]

; 21   : {

	unpcklps xmm3, xmm2

; 381  : 		if (!FindOccluder( Ray( a_IP + a_Dir * EPSILON, a_Dir ), tdist )) return 1;

	push	eax

; 21   : {

	movq	QWORD PTR $T13[esp+128], xmm3
	movq	QWORD PTR $T13[esp+140], xmm0

; 381  : 		if (!FindOccluder( Ray( a_IP + a_Dir * EPSILON, a_Dir ), tdist )) return 1;

	call	?FindOccluder@Engine@Raytracer@@QAEHAAVRay@2@AAM@Z ; Raytracer::Engine::FindOccluder
	test	eax, eax
	jne	$LN2@CalcShade
	fld1

; 402  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN8@CalcShade:

; 382  : 	}
; 383  : 	else if (a_Light->GetType() == Light::AREA)

	cmp	eax, 2
	jne	$LN2@CalcShade
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm2, DWORD PTR [edi]
	xorps	xmm0, xmm0
	movss	xmm1, DWORD PTR [edi+4]
	subss	xmm1, DWORD PTR _a_IP$[ebp+4]
	subss	xmm2, DWORD PTR _a_IP$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 387  : 		a_Dir = a_Light->GetPos() - a_IP;

	mov	esi, DWORD PTR _a_Dir$[ebp]
	movss	DWORD PTR _retval$1$[esp+120], xmm0
	movss	DWORD PTR _retval$[esp+120], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm0, DWORD PTR [edi+8]
	subss	xmm0, DWORD PTR _a_IP$[ebp+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 387  : 		a_Dir = a_Light->GetPos() - a_IP;

	unpcklps xmm2, xmm1
	movq	QWORD PTR [esi], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T8[esp+128], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 387  : 		a_Dir = a_Light->GetPos() - a_IP;

	mov	eax, DWORD PTR $T8[esp+128]
	mov	DWORD PTR [esi+8], eax

; 388  : 		NORMALIZE( a_Dir );

	movss	xmm0, DWORD PTR [esi]
	movss	xmm3, DWORD PTR [esi+4]
	movaps	xmm1, xmm0
	movss	xmm2, DWORD PTR [esi+8]
	mulss	xmm1, xmm0
	movss	DWORD PTR tv491[esp+120], xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movss	DWORD PTR tv492[esp+120], xmm3
	movss	DWORD PTR tv493[esp+120], xmm2
	addss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 388  : 		NORMALIZE( a_Dir );

	movss	xmm1, DWORD PTR __real@3f800000
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 388  : 		NORMALIZE( a_Dir );

	divss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv491[esp+120]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi], xmm0
	movss	xmm0, DWORD PTR tv492[esp+120]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+4], xmm0
	movss	xmm0, DWORD PTR tv493[esp+120]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+8], xmm0

; 389  : 		vector3 deltax = a_Light->GetCellX(), deltay = a_Light->GetCellY();
; 390  : 		for ( int i = 0; i < a_Samples; i++ )

	xor	esi, esi
	movq	xmm0, QWORD PTR [edi+12]
	mov	eax, DWORD PTR [edi+20]
	movq	QWORD PTR _deltax$7[esp+120], xmm0
	movq	xmm0, QWORD PTR [edi+24]
	movq	QWORD PTR _deltay$6[esp+120], xmm0
	movss	xmm0, DWORD PTR _a_Samples$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	mov	DWORD PTR _deltax$7[esp+128], eax
	mov	eax, DWORD PTR [edi+32]
	mov	DWORD PTR _deltay$6[esp+128], eax
	jbe	$LN2@CalcShade
	lea	eax, DWORD PTR [ebx+24]
$LL4@CalcShade:

; 392  : 			vector3 lp = a_Light->GetGrid( i & 15 ) + m_Twister.Rand() * deltax + m_Twister.Rand() * deltay;

	mov	ecx, eax
	call	?Rand@Twister@Raytracer@@QAEMXZ		; Raytracer::Twister::Rand
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm1, DWORD PTR _deltay$6[esp+120]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 392  : 			vector3 lp = a_Light->GetGrid( i & 15 ) + m_Twister.Rand() * deltax + m_Twister.Rand() * deltay;

	lea	ecx, DWORD PTR [ebx+24]
	fstp	DWORD PTR _f$[esp+120]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR _f$[esp+120]
	mulss	xmm1, xmm0
	movss	DWORD PTR $T2[esp+120], xmm1
	movss	xmm1, DWORD PTR _deltay$6[esp+124]
	mulss	xmm1, xmm0
	movss	DWORD PTR $T1[esp+120], xmm1
	movss	xmm1, DWORD PTR _deltay$6[esp+128]
	mulss	xmm1, xmm0
	movss	DWORD PTR $T4[esp+120], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 392  : 			vector3 lp = a_Light->GetGrid( i & 15 ) + m_Twister.Rand() * deltax + m_Twister.Rand() * deltay;

	call	?Rand@Twister@Raytracer@@QAEMXZ		; Raytracer::Twister::Rand
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm1, DWORD PTR _deltax$7[esp+124]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 392  : 			vector3 lp = a_Light->GetGrid( i & 15 ) + m_Twister.Rand() * deltax + m_Twister.Rand() * deltay;

	mov	eax, esi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm3, DWORD PTR _deltax$7[esp+120]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 392  : 			vector3 lp = a_Light->GetGrid( i & 15 ) + m_Twister.Rand() * deltax + m_Twister.Rand() * deltay;

	and	eax, 15					; 0000000fH
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm2, DWORD PTR _deltax$7[esp+128]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 392  : 			vector3 lp = a_Light->GetGrid( i & 15 ) + m_Twister.Rand() * deltax + m_Twister.Rand() * deltay;

	fstp	DWORD PTR _f$[esp+120]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR _f$[esp+120]
	mulss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 113  : 	vector3& GetGrid( int a_Idx ) { return m_Grid[a_Idx]; }

	lea	ecx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [edi+52]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm0
	mulss	xmm2, xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [eax+ecx*4+4]
	movss	xmm4, DWORD PTR [eax+ecx*4]
	addss	xmm0, xmm1
	addss	xmm4, xmm3
	movss	xmm3, DWORD PTR [eax+ecx*4+8]
	addss	xmm3, xmm2
	addss	xmm0, DWORD PTR $T1[esp+120]
	addss	xmm4, DWORD PTR $T2[esp+120]
	addss	xmm3, DWORD PTR $T4[esp+120]

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm0, DWORD PTR _a_IP$[ebp+4]
	subss	xmm4, DWORD PTR _a_IP$[ebp]
	subss	xmm3, DWORD PTR _a_IP$[ebp+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 394  : 			real ldist = LENGTH( dir );

	movaps	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _dir$3$[esp+120], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 394  : 			real ldist = LENGTH( dir );

	mulss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _dir$1$[esp+120], xmm4
	movss	DWORD PTR _dir$5$[esp+120], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 394  : 			real ldist = LENGTH( dir );

	addss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 395  : 			dir *= 1.0f / ldist;

	movss	xmm2, DWORD PTR __real@3f800000
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 397  : 			m_RaysCast++;

	inc	DWORD PTR [ebx+2632]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm5, DWORD PTR __real@38d1b717
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 395  : 			dir *= 1.0f / ldist;

	divss	xmm2, xmm0

; 396  : 			ldist *= 1 - 4 * EPSILON;

	mulss	xmm0, DWORD PTR __real@3f7fe5c9
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }

	movaps	xmm4, xmm2
	movaps	xmm3, xmm2
	mulss	xmm4, DWORD PTR _dir$1$[esp+120]
	mulss	xmm2, DWORD PTR _dir$5$[esp+120]
	mulss	xmm3, DWORD PTR _dir$3$[esp+120]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movaps	xmm1, xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 396  : 			ldist *= 1 - 4 * EPSILON;

	movss	DWORD PTR _ldist$5[esp+120], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }

	movss	DWORD PTR _dir$12[esp+128], xmm2

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movaps	xmm0, xmm3
	mulss	xmm1, xmm5
	mulss	xmm2, xmm5

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm1, DWORD PTR _a_IP$[ebp]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm0, xmm5

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm2, DWORD PTR _a_IP$[ebp+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	unpcklps xmm4, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm0, DWORD PTR _a_IP$[ebp+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	movq	QWORD PTR $T14[esp+132], xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T11[esp+128], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	mov	eax, DWORD PTR $T11[esp+128]
	unpcklps xmm1, xmm0
	mov	DWORD PTR $T14[esp+128], eax
	mov	eax, DWORD PTR _dir$12[esp+128]
	movq	QWORD PTR $T14[esp+120], xmm1
	mov	DWORD PTR $T14[esp+140], eax

; 398  : 			if (!FindOccluder( Ray( a_IP + dir * EPSILON, dir ), ldist )) retval += a_SScale;

	mov	ecx, ebx
	lea	eax, DWORD PTR _ldist$5[esp+120]
	push	eax
	lea	eax, DWORD PTR $T14[esp+124]
	push	eax
	call	?FindOccluder@Engine@Raytracer@@QAEHAAVRay@2@AAM@Z ; Raytracer::Engine::FindOccluder
	test	eax, eax
	jne	SHORT $LN3@CalcShade
	movss	xmm0, DWORD PTR _retval$1$[esp+120]
	addss	xmm0, DWORD PTR _a_SScale$[ebp]
	movss	DWORD PTR _retval$1$[esp+120], xmm0
	movss	DWORD PTR _retval$[esp+120], xmm0
$LN3@CalcShade:

; 389  : 		vector3 deltax = a_Light->GetCellX(), deltay = a_Light->GetCellY();
; 390  : 		for ( int i = 0; i < a_Samples; i++ )

	movss	xmm1, DWORD PTR _a_Samples$[ebp]
	lea	eax, DWORD PTR [ebx+24]
	inc	esi
	movd	xmm0, esi
	cvtdq2ps xmm0, xmm0
	comiss	xmm1, xmm0
	ja	$LL4@CalcShade
$LN2@CalcShade:

; 399  : 		}
; 400  : 	}
; 401  : 	return retval;

	fld	DWORD PTR _retval$[esp+120]

; 402  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?CalcShade@Engine@Raytracer@@QAEMPAVLight@2@Vvector3@2@AAV42@MM@Z ENDP ; Raytracer::Engine::CalcShade
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z
_TEXT	SEGMENT
$T1 = -188						; size = 4
_absorbance$2$ = -188					; size = 4
_f$1$ = -188						; size = 4
_result$1$ = -188					; size = 4
_dist$2 = -188						; size = 4
_prim$ = -184						; size = 4
_drefl$3 = -180						; size = 4
_shade$4 = -180						; size = 4
_this$1$ = -176						; size = 4
_refl$1$ = -172						; size = 4
_l$1$ = -172						; size = 4
_rcol$5 = -168						; size = 12
_rcol$6 = -168						; size = 12
_rcol$7 = -168						; size = 12
$T8 = -156						; size = 4
_N$3$ = -156						; size = 4
_RP$2$ = -156						; size = 4
_f$1$ = -152						; size = 4
_N$2$ = -152						; size = 4
_RN1$1$ = -152						; size = 4
_pi$ = -148						; size = 12
$T9 = -136						; size = 4
_N$1$ = -136						; size = 4
_RP$1$ = -136						; size = 4
_R$3$ = -132						; size = 4
_i$1$ = -132						; size = 4
_N$ = -128						; size = 12
_R$4$ = -116						; size = 4
_xoffs$10 = -116					; size = 4
_rindex$1$ = -112					; size = 4
_RN2$3$ = -112						; size = 4
$T11 = -108						; size = 4
_yoffs$12 = -108					; size = 4
_R$7$ = -104						; size = 8
$T13 = -104						; size = 12
_N$14 = -104						; size = 12
$T15 = -104						; size = 24
_L$16 = -104						; size = 12
_color$ = -80						; size = 12
_RP$3$ = -68						; size = 4
$T17 = -64						; size = 12
$T18 = -64						; size = 12
$T19 = -64						; size = 12
_R$20 = -64						; size = 12
_dist$21 = -52						; size = 4
_dist$22 = -52						; size = 4
_T$23 = -48						; size = 12
_R$24 = -48						; size = 12
$T25 = -48						; size = 12
tv1559 = -36						; size = 4
_RN2$1$ = -32						; size = 4
_RN2$2$ = -28						; size = 4
$T26 = -24						; size = 24
$T27 = -24						; size = 24
_a_Ray$ = 8						; size = 4
_a_Acc$ = 12						; size = 4
_a_Depth$ = 16						; size = 4
_a_RIndex$ = 20						; size = 4
_a_Dist$ = 24						; size = 4
_a_Samples$ = 28					; size = 4
_a_SScale$ = 32						; size = 4
?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z PROC ; Raytracer::Engine::Raytrace, COMDAT
; _this$ = ecx

; 248  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 192				; 000000c0H
	push	esi

; 249  : 	// trace primary ray
; 250  : 	a_Dist = 10000.0f;

	mov	esi, DWORD PTR _a_Dist$[ebp]
	mov	eax, ecx
	push	edi

; 251  : 	Primitive* prim = 0;
; 252  : 	int result;
; 253  : 	// find the nearest intersection
; 254  : 	if (!(result = FindNearest( a_Ray, a_Dist, prim ))) return 0;

	mov	edi, DWORD PTR _a_Ray$[ebp]
	lea	ecx, DWORD PTR _prim$[esp+200]
	push	ecx
	push	esi
	push	edi
	mov	ecx, eax
	mov	DWORD PTR _this$1$[esp+212], eax
	mov	DWORD PTR [esi], 1176256512		; 461c4000H
	mov	DWORD PTR _prim$[esp+212], 0
	call	?FindNearest@Engine@Raytracer@@QAEHAAVRay@2@AAMAAPAVPrimitive@2@@Z ; Raytracer::Engine::FindNearest
	mov	DWORD PTR _result$1$[esp+200], eax
	test	eax, eax
	jne	SHORT $LN20@Raytrace

; 360  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN20@Raytrace:

; 255  : 	// determine color at point of intersection
; 256  : 	vector3 pi = a_Ray.GetOrigin() + a_Ray.GetDirection() * a_Dist;

	movss	xmm0, DWORD PTR [esi]

; 257  : 	Color color = prim->GetColor( pi );

	lea	eax, DWORD PTR _pi$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm1, DWORD PTR [edi+16]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR [edi+20]
	mulss	xmm3, DWORD PTR [edi+12]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 257  : 	Color color = prim->GetColor( pi );

	mov	ecx, DWORD PTR _prim$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 257  : 	Color color = prim->GetColor( pi );

	push	eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm3, DWORD PTR [edi]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 257  : 	Color color = prim->GetColor( pi );

	lea	eax, DWORD PTR _color$[esp+204]
	push	eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [edi+4]
	addss	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _pi$[esp+208], xmm3
	movss	DWORD PTR _pi$[esp+212], xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [edi+8]
	addss	xmm0, xmm2

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _pi$[esp+216], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 257  : 	Color color = prim->GetColor( pi );

	call	?GetColor@Primitive@Raytracer@@QAE?AVvector3@2@AAV32@@Z ; Raytracer::Primitive::GetColor

; 258  : 	vector3 N = prim->GetNormal( pi );

	mov	ecx, DWORD PTR _prim$[esp+200]
	lea	eax, DWORD PTR _pi$[esp+200]
	push	eax
	lea	eax, DWORD PTR _N$[esp+204]
	push	eax
	call	?GetNormal@Primitive@Raytracer@@QAE?AVvector3@2@AAV32@@Z ; Raytracer::Primitive::GetNormal

; 260  : 	for ( int l = 0; l < m_Scene->GetNrLights(); l++ )

	mov	edx, DWORD PTR _this$1$[esp+200]
	xor	ecx, ecx
	mov	esi, DWORD PTR _a_Acc$[ebp]
	xorps	xmm5, xmm5
	mov	DWORD PTR _l$1$[esp+200], ecx
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+4], ecx
	jle	$LN284@Raytrace
	npad	3
$LL19@Raytrace:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 270  : 	Light* GetLight( int a_Idx ) { return m_Light[a_Idx]; }

	mov	eax, DWORD PTR [edx]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 265  : 		real shade = CalcShade( light, pi, L, a_Samples, a_SScale );

	sub	esp, 8
	movss	xmm0, DWORD PTR _a_SScale$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 62   : 	vector3() : x( 0.0f ), y( 0.0f ), z( 0.0f ) {};

	mov	DWORD PTR _L$16[esp+208], 0
	mov	DWORD PTR _L$16[esp+212], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 270  : 	Light* GetLight( int a_Idx ) { return m_Light[a_Idx]; }

	mov	eax, DWORD PTR [eax+12]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 265  : 		real shade = CalcShade( light, pi, L, a_Samples, a_SScale );

	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _a_Samples$[ebp]
	movss	DWORD PTR [esp], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 270  : 	Light* GetLight( int a_Idx ) { return m_Light[a_Idx]; }

	mov	edi, DWORD PTR [eax+ecx*4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 265  : 		real shade = CalcShade( light, pi, L, a_Samples, a_SScale );

	lea	eax, DWORD PTR _L$16[esp+208]
	movq	xmm0, QWORD PTR _pi$[esp+208]
	push	eax
	mov	eax, DWORD PTR _pi$[esp+220]
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 62   : 	vector3() : x( 0.0f ), y( 0.0f ), z( 0.0f ) {};

	mov	DWORD PTR _L$16[esp+232], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 265  : 		real shade = CalcShade( light, pi, L, a_Samples, a_SScale );

	push	edi
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, edx
	call	?CalcShade@Engine@Raytracer@@QAEMPAVLight@2@Vvector3@2@AAV42@MM@Z ; Raytracer::Engine::CalcShade
	fstp	DWORD PTR _shade$4[esp+200]

; 266  : 		if (shade > 0)

	movss	xmm0, DWORD PTR _shade$4[esp+200]
	xorps	xmm5, xmm5
	comiss	xmm0, xmm5
	jbe	$LN18@Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 54   : 	real GetDiffuse() { return m_Diff; }

	mov	eax, DWORD PTR _prim$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 269  : 			if (prim->GetMaterial()->GetDiffuse() > 0)

	movss	xmm3, DWORD PTR _L$16[esp+208]
	movss	xmm7, DWORD PTR _L$16[esp+204]
	movss	xmm6, DWORD PTR _L$16[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 54   : 	real GetDiffuse() { return m_Diff; }

	mov	eax, DWORD PTR [eax]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 271  : 				real dot = DOT( L, N );

	movss	xmm2, DWORD PTR _N$[esp+204]
	movss	DWORD PTR _R$3$[esp+200], xmm3
	movss	xmm4, DWORD PTR [eax+20]
	comiss	xmm4, xmm5
	jbe	$LN59@Raytrace
	movss	xmm0, DWORD PTR _N$[esp+200]
	movaps	xmm1, xmm2
	mulss	xmm0, xmm6
	mulss	xmm1, xmm7
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR _N$[esp+208]
	mulss	xmm0, xmm3
	addss	xmm1, xmm0

; 272  : 				if (dot > 0)

	comiss	xmm1, xmm5
	jbe	SHORT $LN59@Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm2, DWORD PTR _color$[esp+204]
	movss	xmm0, DWORD PTR _color$[esp+200]
	movss	xmm3, DWORD PTR _color$[esp+208]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 274  : 					real diff = dot * prim->GetMaterial()->GetDiffuse() * shade;

	mulss	xmm4, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	movss	xmm1, DWORD PTR [edi+36]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 274  : 					real diff = dot * prim->GetMaterial()->GetDiffuse() * shade;

	mulss	xmm4, DWORD PTR _shade$4[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm4
	mulss	xmm0, xmm4
	mulss	xmm3, xmm4

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	movss	xmm4, DWORD PTR [edi+40]
	mulss	xmm4, xmm2
	movss	xmm2, DWORD PTR [edi+44]
	mulss	xmm2, xmm3

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	addss	xmm4, DWORD PTR [esi+4]
	movss	xmm3, DWORD PTR _R$3$[esp+200]
	addss	xmm2, DWORD PTR [esi+8]

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	mulss	xmm1, xmm0

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	xmm0, DWORD PTR [esi]
	movss	DWORD PTR [esi+4], xmm4
	addss	xmm0, xmm1
	movss	DWORD PTR [esi+8], xmm2
	movss	xmm2, DWORD PTR _N$[esp+204]
	movss	DWORD PTR [esi], xmm0
$LN59@Raytrace:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 280  : 			if (prim->GetMaterial()->GetSpecular() > 0)

	movss	xmm4, DWORD PTR [eax+24]
	comiss	xmm4, xmm5
	jbe	$LN18@Raytrace

; 281  : 			{
; 282  : 				// point light source: sample once for specular highlight
; 283  : 				vector3 R = L - 2.0f * DOT( L, N ) * N;

	movss	xmm1, DWORD PTR _N$[esp+200]
	mulss	xmm2, xmm7
	movaps	xmm0, xmm1

; 284  : 				real dot = DOT( a_Ray.GetDirection(), R );

	mov	eax, DWORD PTR _a_Ray$[ebp]
	mulss	xmm0, xmm6
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR _N$[esp+208]
	mulss	xmm0, xmm3
	addss	xmm2, xmm0
	mulss	xmm2, DWORD PTR __real@40000000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movaps	xmm0, xmm2
	mulss	xmm0, xmm1
	movaps	xmm1, xmm2
	mulss	xmm2, DWORD PTR _N$[esp+208]
	mulss	xmm1, DWORD PTR _N$[esp+204]

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm6, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 284  : 				real dot = DOT( a_Ray.GetDirection(), R );

	movss	xmm0, DWORD PTR [eax+12]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm3, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 284  : 				real dot = DOT( a_Ray.GetDirection(), R );

	movss	xmm2, DWORD PTR [eax+16]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm7, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 284  : 				real dot = DOT( a_Ray.GetDirection(), R );

	mulss	xmm0, xmm6
	mulss	xmm2, xmm7
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR [eax+20]
	mulss	xmm0, xmm3
	addss	xmm2, xmm0

; 285  : 				if (dot > 0)

	comiss	xmm2, xmm5
	jbe	SHORT $LN18@Raytrace

; 287  : 					real spec = dot * prim->GetMaterial()->GetSpecular() * shade / (50 - 50 * dot + dot);

	movss	xmm1, DWORD PTR __real@42480000
	movaps	xmm0, xmm2
	mulss	xmm0, xmm1
	mulss	xmm4, xmm2
	subss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm3, DWORD PTR [edi+44]

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	xmm0, DWORD PTR [esi]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 287  : 					real spec = dot * prim->GetMaterial()->GetSpecular() * shade / (50 - 50 * dot + dot);

	mulss	xmm4, DWORD PTR _shade$4[esp+200]
	addss	xmm1, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm2, DWORD PTR [edi+40]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 287  : 					real spec = dot * prim->GetMaterial()->GetSpecular() * shade / (50 - 50 * dot + dot);

	divss	xmm4, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm1, DWORD PTR [edi+36]
	mulss	xmm1, xmm4
	mulss	xmm2, xmm4
	mulss	xmm3, xmm4

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	addss	xmm0, xmm1
	addss	xmm2, DWORD PTR [esi+4]
	addss	xmm3, DWORD PTR [esi+8]
	movss	DWORD PTR [esi], xmm0
	movss	DWORD PTR [esi+4], xmm2
	movss	DWORD PTR [esi+8], xmm3
$LN18@Raytrace:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 260  : 	for ( int l = 0; l < m_Scene->GetNrLights(); l++ )

	mov	edx, DWORD PTR _this$1$[esp+200]
	mov	ecx, DWORD PTR _l$1$[esp+200]
	inc	ecx
	mov	DWORD PTR _l$1$[esp+200], ecx
	mov	eax, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+4]
	jl	$LL19@Raytrace
	mov	edi, DWORD PTR _a_Ray$[ebp]
$LN284@Raytrace:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 55   : 	real GetReflection() { return m_Refl; }

	mov	eax, DWORD PTR _prim$[esp+200]
	mov	ecx, DWORD PTR [eax]
	movss	xmm6, DWORD PTR [ecx+12]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 296  : 	if ((refl > 0.0f) && (a_Depth < TRACEDEPTH))

	comiss	xmm6, xmm5
	mov	ecx, DWORD PTR _a_Depth$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 55   : 	real GetReflection() { return m_Refl; }

	movss	DWORD PTR _refl$1$[esp+200], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 296  : 	if ((refl > 0.0f) && (a_Depth < TRACEDEPTH))

	jbe	$LN201@Raytrace
	cmp	ecx, 4
	jge	$LN201@Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 60   : 	real GetDiffuseRefl() { return m_DRefl; }

	mov	esi, DWORD PTR [eax]
	movss	xmm7, DWORD PTR [esi+28]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 299  : 		if ((drefl > 0) && (a_Depth < 3))

	comiss	xmm7, xmm5
	mov	esi, DWORD PTR _a_Acc$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 60   : 	real GetDiffuseRefl() { return m_DRefl; }

	movss	DWORD PTR _drefl$3[esp+200], xmm7
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 299  : 		if ((drefl > 0) && (a_Depth < 3))

	jbe	$LN10@Raytrace
	cmp	ecx, 3
	jge	$LN10@Raytrace

; 302  : 			vector3 RP = a_Ray.GetDirection() - 2.0f * DOT( a_Ray.GetDirection(), N ) * N;

	movss	xmm2, DWORD PTR [edi+16]
	lea	eax, DWORD PTR [edx+24]
	mulss	xmm2, DWORD PTR _N$[esp+204]

; 306  : 			for ( int i = 0; i < SAMPLES; i++ )

	mov	DWORD PTR _i$1$[esp+200], 0
	movss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, DWORD PTR _N$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm4, DWORD PTR [edi+12]
	movss	xmm3, DWORD PTR [edi+16]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 302  : 			vector3 RP = a_Ray.GetDirection() - 2.0f * DOT( a_Ray.GetDirection(), N ) * N;

	addss	xmm2, xmm0

; 304  : 			vector3 RN2 = RP.Cross( RN1 );
; 305  : 			refl *= a_SScale;

	mulss	xmm6, DWORD PTR _a_SScale$[ebp]
	movss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, DWORD PTR _N$[esp+208]
	movss	DWORD PTR _refl$1$[esp+200], xmm6
	addss	xmm2, xmm0
	mulss	xmm2, DWORD PTR __real@40000000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movaps	xmm0, xmm2
	movaps	xmm1, xmm2
	mulss	xmm0, DWORD PTR _N$[esp+200]
	mulss	xmm2, DWORD PTR _N$[esp+208]
	mulss	xmm1, DWORD PTR _N$[esp+204]

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm4, xmm0
	movss	xmm0, DWORD PTR [edi+20]
	subss	xmm0, xmm2
	mov	edi, DWORD PTR _this$1$[esp+200]
	subss	xmm3, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 303  : 			vector3 RN1 = vector3( RP.z, RP.y, -RP.x );

	movaps	xmm2, xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _RP$1$[esp+200], xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 303  : 			vector3 RN1 = vector3( RP.z, RP.y, -RP.x );

	xorps	xmm2, DWORD PTR __xmm@80000000800000008000000080000000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movaps	xmm5, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 303  : 			vector3 RN1 = vector3( RP.z, RP.y, -RP.x );

	movss	DWORD PTR _RN1$1$[esp+200], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	movaps	xmm1, xmm0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _RP$3$[esp+200], xmm0

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	mulss	xmm5, xmm3
	mulss	xmm1, xmm3

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	DWORD PTR _RP$2$[esp+200], xmm3

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	subss	xmm5, xmm1
	movss	DWORD PTR _RN2$1$[esp+200], xmm5
	movaps	xmm5, xmm0
	mulss	xmm5, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm4
	subss	xmm5, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm4
	subss	xmm0, xmm1
	movss	DWORD PTR _RN2$2$[esp+200], xmm5
	movss	DWORD PTR _RN2$3$[esp+200], xmm0
	movaps	xmm0, xmm7
	mulss	xmm0, xmm7
	movss	DWORD PTR tv1559[esp+200], xmm0
$LL6@Raytrace:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 311  : 					xoffs = (m_Twister.Rand() - 0.5f) * drefl;

	mov	ecx, eax
	call	?Rand@Twister@Raytracer@@QAEMXZ		; Raytracer::Twister::Rand
	fsub	DWORD PTR __real@3f000000

; 312  : 					yoffs = (m_Twister.Rand() - 0.5f) * drefl;

	lea	ecx, DWORD PTR [edi+24]
	fmul	DWORD PTR _drefl$3[esp+200]
	fstp	DWORD PTR _xoffs$10[esp+200]
	call	?Rand@Twister@Raytracer@@QAEMXZ		; Raytracer::Twister::Rand
	fsub	DWORD PTR __real@3f000000

; 313  : 				}
; 314  : 				while ((xoffs * xoffs + yoffs * yoffs) > (drefl * drefl));

	lea	eax, DWORD PTR [edi+24]
	movss	xmm6, DWORD PTR _xoffs$10[esp+200]
	fmul	DWORD PTR _drefl$3[esp+200]
	movaps	xmm0, xmm6
	mulss	xmm0, xmm6
	fstp	DWORD PTR _yoffs$12[esp+200]
	movss	xmm3, DWORD PTR _yoffs$12[esp+200]
	movaps	xmm1, xmm3
	mulss	xmm1, xmm3
	addss	xmm1, xmm0
	comiss	xmm1, DWORD PTR tv1559[esp+200]
	ja	SHORT $LL6@Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm1, DWORD PTR _RN2$1$[esp+200]
	movaps	xmm5, xmm6
	movss	xmm4, DWORD PTR _RN2$3$[esp+200]
	movss	xmm2, DWORD PTR _RN2$2$[esp+200]
	movss	xmm0, DWORD PTR _drefl$3[esp+200]
	mulss	xmm5, DWORD PTR _RP$3$[esp+200]
	mulss	xmm1, xmm3

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm5, DWORD PTR _RP$1$[esp+200]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm4, xmm3
	mulss	xmm1, xmm0
	mulss	xmm2, xmm3
	movaps	xmm3, xmm6
	mulss	xmm3, DWORD PTR _RP$2$[esp+200]

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm5, xmm1

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm3, DWORD PTR _RP$2$[esp+200]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm4, xmm0
	movss	xmm0, DWORD PTR _RN1$1$[esp+200]
	mulss	xmm0, xmm6

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm3, xmm2
	movq	QWORD PTR _R$7$[esp+200], xmm5
	addss	xmm0, DWORD PTR _RP$3$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	movaps	xmm1, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	DWORD PTR _R$4$[esp+200], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	mulss	xmm1, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm4, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	movaps	xmm0, xmm5
	mulss	xmm0, xmm5
	addss	xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	DWORD PTR $T11[esp+200], xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	movaps	xmm0, xmm4
	mulss	xmm0, xmm4
	addss	xmm1, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	movss	xmm1, DWORD PTR __real@3f800000

; 317  : 				real dist;
; 318  : 				Color rcol( 0, 0, 0 );
; 319  : 				Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.25f, a_SScale * 4 );

	sub	esp, 8
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _rcol$7[esp+208], 0
	mov	DWORD PTR _rcol$7[esp+212], 0
	mov	DWORD PTR _rcol$7[esp+216], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	movq	xmm4, QWORD PTR _R$7$[esp+208]
	divss	xmm1, xmm0
	movss	xmm2, DWORD PTR _R$4$[esp+208]
	movss	xmm3, DWORD PTR $T11[esp+208]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm5, DWORD PTR __real@38d1b717
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	mulss	xmm2, xmm1
	mulss	xmm4, xmm1
	mulss	xmm3, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movaps	xmm0, xmm2
	mulss	xmm0, xmm5
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm0, DWORD PTR _pi$[esp+212]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 316  : 				NORMALIZE( R );

	movss	DWORD PTR _R$20[esp+216], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm1, DWORD PTR _pi$[esp+208]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	unpcklps xmm4, xmm2
	movq	QWORD PTR $T15[esp+220], xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm3, DWORD PTR _pi$[esp+216]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	unpcklps xmm1, xmm0

; 317  : 				real dist;
; 318  : 				Color rcol( 0, 0, 0 );
; 319  : 				Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.25f, a_SScale * 4 );

	movss	xmm0, DWORD PTR _a_SScale$[ebp]
	mulss	xmm0, DWORD PTR __real@40800000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T25[esp+216], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	mov	eax, DWORD PTR $T25[esp+216]

; 317  : 				real dist;
; 318  : 				Color rcol( 0, 0, 0 );
; 319  : 				Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.25f, a_SScale * 4 );

	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _a_Samples$[ebp]
	mulss	xmm0, DWORD PTR __real@3e800000

; 21   : {

	mov	DWORD PTR $T15[esp+216], eax
	mov	eax, DWORD PTR _R$20[esp+216]
	mov	DWORD PTR $T15[esp+228], eax

; 317  : 				real dist;
; 318  : 				Color rcol( 0, 0, 0 );
; 319  : 				Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.25f, a_SScale * 4 );

	lea	eax, DWORD PTR _dist$22[esp+208]
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _a_RIndex$[ebp]
	push	eax
	mov	eax, DWORD PTR _a_Depth$[ebp]
	push	ecx
	inc	eax
	movss	DWORD PTR [esp], xmm0

; 21   : {

	movq	QWORD PTR $T15[esp+216], xmm1

; 317  : 				real dist;
; 318  : 				Color rcol( 0, 0, 0 );
; 319  : 				Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.25f, a_SScale * 4 );

	push	eax
	lea	eax, DWORD PTR _rcol$7[esp+220]
	mov	ecx, edi
	push	eax
	lea	eax, DWORD PTR $T15[esp+224]
	push	eax
	call	?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z ; Raytracer::Engine::Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR _refl$1$[esp+200]
	movss	xmm1, DWORD PTR _rcol$7[esp+200]
	movss	xmm2, DWORD PTR _rcol$7[esp+204]
	movss	xmm3, DWORD PTR _rcol$7[esp+208]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 320  : 				m_RaysCast++;

	inc	DWORD PTR [edi+2632]
	mov	eax, DWORD PTR _i$1$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 306  : 			for ( int i = 0; i < SAMPLES; i++ )

	inc	eax
	cmp	eax, 128				; 00000080H
	mov	DWORD PTR _i$1$[esp+200], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 306  : 			for ( int i = 0; i < SAMPLES; i++ )

	lea	eax, DWORD PTR [edi+24]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	mulss	xmm2, DWORD PTR _color$[esp+204]
	mulss	xmm3, DWORD PTR _color$[esp+208]

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	addss	xmm2, DWORD PTR [esi+4]

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm1, xmm0

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	xmm0, DWORD PTR [esi]
	addss	xmm3, DWORD PTR [esi+8]

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	mulss	xmm1, DWORD PTR _color$[esp+200]

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	DWORD PTR [esi+4], xmm2
	addss	xmm0, xmm1
	movss	DWORD PTR [esi+8], xmm3
	movss	DWORD PTR [esi], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 306  : 			for ( int i = 0; i < SAMPLES; i++ )

	jl	$LL6@Raytrace

; 321  : 				a_Acc += refl * rcol * color;
; 322  : 			}
; 323  : 		}
; 324  : 		else

	mov	edi, DWORD PTR _a_Ray$[ebp]
	jmp	$LN288@Raytrace
$LN10@Raytrace:

; 325  : 		{
; 326  : 			// calculate perfect reflection
; 327  : 			vector3 N = prim->GetNormal( pi );

	lea	ecx, DWORD PTR _pi$[esp+200]
	push	ecx
	lea	ecx, DWORD PTR _N$14[esp+204]
	push	ecx
	mov	ecx, eax
	call	?GetNormal@Primitive@Raytracer@@QAE?AVvector3@2@AAV32@@Z ; Raytracer::Primitive::GetNormal

; 328  : 			vector3 R = a_Ray.GetDirection() - 2.0f * DOT( a_Ray.GetDirection(), N ) * N;

	movss	xmm4, DWORD PTR [edi+16]

; 329  : 			Color rcol( 0, 0, 0 );
; 330  : 			real dist;
; 331  : 			Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.5f, a_SScale * 2 );

	sub	esp, 8
	mulss	xmm4, DWORD PTR _N$14[esp+212]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _rcol$6[esp+208], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 328  : 			vector3 R = a_Ray.GetDirection() - 2.0f * DOT( a_Ray.GetDirection(), N ) * N;

	movss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, DWORD PTR _N$14[esp+208]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _rcol$6[esp+212], 0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm5, DWORD PTR [edi+12]
	movss	xmm3, DWORD PTR [edi+16]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 328  : 			vector3 R = a_Ray.GetDirection() - 2.0f * DOT( a_Ray.GetDirection(), N ) * N;

	addss	xmm4, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm2, DWORD PTR [edi+20]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 328  : 			vector3 R = a_Ray.GetDirection() - 2.0f * DOT( a_Ray.GetDirection(), N ) * N;

	movss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, DWORD PTR _N$14[esp+216]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _rcol$6[esp+216], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 328  : 			vector3 R = a_Ray.GetDirection() - 2.0f * DOT( a_Ray.GetDirection(), N ) * N;

	addss	xmm4, xmm0
	mulss	xmm4, DWORD PTR __real@40000000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movaps	xmm0, xmm4
	movaps	xmm1, xmm4
	mulss	xmm0, DWORD PTR _N$14[esp+208]
	mulss	xmm1, DWORD PTR _N$14[esp+212]
	mulss	xmm4, DWORD PTR _N$14[esp+216]

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	subss	xmm5, xmm0
	subss	xmm3, xmm1
	subss	xmm2, xmm4

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm4, DWORD PTR __real@38d1b717
	movaps	xmm1, xmm5
	mulss	xmm1, xmm4
	movaps	xmm0, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	unpcklps xmm5, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm0, xmm4

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm1, DWORD PTR _pi$[esp+208]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _R$24[esp+216], xmm2

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm0, DWORD PTR _pi$[esp+212]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	movq	QWORD PTR $T27[esp+220], xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm2, DWORD PTR _pi$[esp+216]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	unpcklps xmm1, xmm0

; 329  : 			Color rcol( 0, 0, 0 );
; 330  : 			real dist;
; 331  : 			Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.5f, a_SScale * 2 );

	movss	xmm0, DWORD PTR _a_SScale$[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T19[esp+216], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	mov	eax, DWORD PTR $T19[esp+216]

; 329  : 			Color rcol( 0, 0, 0 );
; 330  : 			real dist;
; 331  : 			Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.5f, a_SScale * 2 );

	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _a_Samples$[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000

; 21   : {

	mov	DWORD PTR $T27[esp+216], eax
	mov	eax, DWORD PTR _R$24[esp+216]
	mov	DWORD PTR $T27[esp+228], eax

; 329  : 			Color rcol( 0, 0, 0 );
; 330  : 			real dist;
; 331  : 			Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.5f, a_SScale * 2 );

	lea	eax, DWORD PTR _dist$21[esp+208]
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _a_RIndex$[ebp]
	push	eax
	mov	eax, DWORD PTR _a_Depth$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$1$[esp+216]
	inc	eax
	movss	DWORD PTR [esp], xmm0
	push	eax
	lea	eax, DWORD PTR _rcol$6[esp+220]

; 21   : {

	movq	QWORD PTR $T27[esp+220], xmm1

; 329  : 			Color rcol( 0, 0, 0 );
; 330  : 			real dist;
; 331  : 			Raytrace( Ray( pi + R * EPSILON, R ), rcol, a_Depth + 1, a_RIndex, dist, a_Samples * 0.5f, a_SScale * 2 );

	push	eax
	lea	eax, DWORD PTR $T27[esp+224]
	push	eax
	call	?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z ; Raytracer::Engine::Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR _refl$1$[esp+200]
	movss	xmm1, DWORD PTR _rcol$6[esp+200]
	movss	xmm2, DWORD PTR _rcol$6[esp+204]
	movss	xmm3, DWORD PTR _rcol$6[esp+208]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 332  : 			m_RaysCast++;

	mov	eax, DWORD PTR _this$1$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm1, xmm0
	mulss	xmm2, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 332  : 			m_RaysCast++;

	inc	DWORD PTR [eax+2632]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	mulss	xmm1, DWORD PTR _color$[esp+200]
	mulss	xmm2, DWORD PTR _color$[esp+204]

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm0

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	mulss	xmm3, DWORD PTR _color$[esp+208]

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	xmm0, DWORD PTR [esi]
	addss	xmm2, DWORD PTR [esi+4]
	addss	xmm3, DWORD PTR [esi+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [esi+4], xmm2
	movss	DWORD PTR [esi+8], xmm3
	movss	DWORD PTR [esi], xmm0
$LN288@Raytrace:
	mov	ecx, DWORD PTR _a_Depth$[ebp]
	xorps	xmm5, xmm5
	mov	eax, DWORD PTR _prim$[esp+200]
$LN201@Raytrace:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 56   : 	real GetRefraction() { return m_Refr; }

	mov	edx, DWORD PTR [eax]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 338  : 	if ((refr > 0) && (a_Depth < TRACEDEPTH))

	movss	xmm0, DWORD PTR [edx+16]
	comiss	xmm0, xmm5
	jbe	$LN21@Raytrace
	cmp	ecx, 4
	jge	$LN21@Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 58   : 	real GetRefrIndex() { return m_RIndex; }

	movss	xmm1, DWORD PTR [edx+32]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 342  : 		vector3 N = prim->GetNormal( pi ) * (real)result;

	lea	ecx, DWORD PTR _pi$[esp+200]
	movss	xmm0, DWORD PTR _a_RIndex$[ebp]
	divss	xmm0, xmm1
	push	ecx
	lea	ecx, DWORD PTR $T18[esp+204]
	push	ecx
	mov	ecx, eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 58   : 	real GetRefrIndex() { return m_RIndex; }

	movss	DWORD PTR _rindex$1$[esp+208], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 341  : 		real n = a_RIndex / rindex;

	movss	DWORD PTR _a_RIndex$[ebp], xmm0

; 342  : 		vector3 N = prim->GetNormal( pi ) * (real)result;

	call	?GetNormal@Primitive@Raytracer@@QAE?AVvector3@2@AAV32@@Z ; Raytracer::Primitive::GetNormal
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mov	ecx, DWORD PTR _result$1$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 343  : 		real cosI = -DOT( N, a_Ray.GetDirection() );

	movss	xmm2, DWORD PTR [edi+16]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm3, DWORD PTR [eax+4]
	movss	xmm4, DWORD PTR [eax+8]
	movd	xmm0, ecx
	cvtdq2ps xmm0, xmm0
	movaps	xmm1, xmm0
	mulss	xmm3, xmm0
	mulss	xmm1, DWORD PTR [eax]
	mulss	xmm4, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 343  : 		real cosI = -DOT( N, a_Ray.GetDirection() );

	movss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, xmm1
	mulss	xmm2, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	DWORD PTR _N$3$[esp+200], xmm4
	movss	DWORD PTR _N$1$[esp+200], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 343  : 		real cosI = -DOT( N, a_Ray.GetDirection() );

	addss	xmm2, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	DWORD PTR _N$2$[esp+200], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 343  : 		real cosI = -DOT( N, a_Ray.GetDirection() );

	movss	xmm0, DWORD PTR [edi+20]

; 344  : 		real cosT2 = 1.0f - n * n * (1.0f - cosI * cosI);

	movss	xmm3, DWORD PTR _a_RIndex$[ebp]
	mulss	xmm0, xmm4
	movss	xmm4, DWORD PTR __real@3f800000
	movaps	xmm1, xmm4
	addss	xmm2, xmm0
	xorps	xmm2, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	subss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	mulss	xmm1, xmm0
	xorps	xmm0, xmm0
	subss	xmm4, xmm1

; 345  : 		if (cosT2 > 0.0f)

	comiss	xmm4, xmm0
	jbe	$LN286@Raytrace
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 347  : 			vector3 T = (n * a_Ray.GetDirection()) + (n * cosI - _sqrt( cosT2 )) * N;

	mulss	xmm2, xmm3
	movss	DWORD PTR _f$1$[esp+200], xmm2
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 347  : 			vector3 T = (n * a_Ray.GetDirection()) + (n * cosI - _sqrt( cosT2 )) * N;

	movss	xmm5, DWORD PTR _f$1$[esp+200]

; 350  : 			Raytrace( Ray( pi + T * EPSILON, T ), rcol, a_Depth + 1, rindex, dist, a_Samples * 0.5f, a_SScale * 2 );

	sub	esp, 8
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm4, DWORD PTR [edi+12]
	movss	xmm6, DWORD PTR _a_RIndex$[ebp]
	movss	xmm3, DWORD PTR [edi+16]
	movss	xmm2, DWORD PTR [edi+20]
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 350  : 			Raytrace( Ray( pi + T * EPSILON, T ), rcol, a_Depth + 1, rindex, dist, a_Samples * 0.5f, a_SScale * 2 );

	mov	edi, DWORD PTR _this$1$[esp+208]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	DWORD PTR _rcol$5[esp+208], 0
	mov	DWORD PTR _rcol$5[esp+212], 0
	mov	DWORD PTR _rcol$5[esp+216], 0

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm4, xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 347  : 			vector3 T = (n * a_Ray.GetDirection()) + (n * cosI - _sqrt( cosT2 )) * N;

	subss	xmm5, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm6
	mulss	xmm2, xmm6
	movaps	xmm0, xmm5
	movaps	xmm1, xmm5
	mulss	xmm0, DWORD PTR _N$1$[esp+208]
	mulss	xmm1, DWORD PTR _N$2$[esp+208]
	mulss	xmm5, DWORD PTR _N$3$[esp+208]

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm4, xmm0
	addss	xmm3, xmm1
	addss	xmm2, xmm5

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm5, DWORD PTR __real@38d1b717
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5
	movaps	xmm0, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	unpcklps xmm4, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm0, xmm5

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm1, DWORD PTR _pi$[esp+208]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _T$23[esp+216], xmm2

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm0, DWORD PTR _pi$[esp+212]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm2, xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	movq	QWORD PTR $T26[esp+220], xmm4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm2, DWORD PTR _pi$[esp+216]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	unpcklps xmm1, xmm0

; 350  : 			Raytrace( Ray( pi + T * EPSILON, T ), rcol, a_Depth + 1, rindex, dist, a_Samples * 0.5f, a_SScale * 2 );

	movss	xmm0, DWORD PTR _a_SScale$[ebp]
	mulss	xmm0, DWORD PTR __real@40000000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T17[esp+216], xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 21   : {

	mov	eax, DWORD PTR $T17[esp+216]

; 350  : 			Raytrace( Ray( pi + T * EPSILON, T ), rcol, a_Depth + 1, rindex, dist, a_Samples * 0.5f, a_SScale * 2 );

	movss	DWORD PTR [esp+4], xmm0
	movss	xmm0, DWORD PTR _a_Samples$[ebp]
	mulss	xmm0, DWORD PTR __real@3f000000

; 21   : {

	mov	DWORD PTR $T26[esp+216], eax
	mov	eax, DWORD PTR _T$23[esp+216]
	mov	DWORD PTR $T26[esp+228], eax

; 350  : 			Raytrace( Ray( pi + T * EPSILON, T ), rcol, a_Depth + 1, rindex, dist, a_Samples * 0.5f, a_SScale * 2 );

	lea	eax, DWORD PTR _dist$2[esp+208]
	movss	DWORD PTR [esp], xmm0
	movss	xmm0, DWORD PTR _rindex$1$[esp+208]
	push	eax
	mov	eax, DWORD PTR _a_Depth$[ebp]
	push	ecx
	inc	eax
	movss	DWORD PTR [esp], xmm0
	push	eax
	lea	eax, DWORD PTR _rcol$5[esp+220]

; 21   : {

	movq	QWORD PTR $T26[esp+220], xmm1

; 350  : 			Raytrace( Ray( pi + T * EPSILON, T ), rcol, a_Depth + 1, rindex, dist, a_Samples * 0.5f, a_SScale * 2 );

	push	eax
	lea	eax, DWORD PTR $T26[esp+224]
	mov	ecx, edi
	push	eax
	call	?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z ; Raytracer::Engine::Raytrace
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 135  : 	Material* GetMaterial() { return m_Material; }

	mov	eax, DWORD PTR _prim$[esp+200]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 351  : 			m_RaysCast++;

	inc	DWORD PTR [edi+2632]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 135  : 	Material* GetMaterial() { return m_Material; }

	mov	eax, DWORD PTR [eax]

; 47   : 	Color GetColor() { return m_Color; }

	movq	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR [eax+8]
	movq	QWORD PTR $T13[esp+200], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR __real@3e19999a
	movss	xmm1, DWORD PTR $T13[esp+200]
	movss	xmm2, DWORD PTR $T13[esp+204]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 47   : 	Color GetColor() { return m_Color; }

	mov	DWORD PTR $T13[esp+208], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm3, DWORD PTR $T13[esp+208]
	mulss	xmm3, xmm0
	mulss	xmm1, xmm0
	mulss	xmm2, xmm0
	movss	DWORD PTR $T9[esp+200], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 353  : 			Color absorbance = prim->GetMaterial()->GetColor() * 0.15f * -dist;

	movss	xmm0, DWORD PTR _dist$2[esp+200]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm1, xmm0
	mulss	xmm2, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 353  : 			Color absorbance = prim->GetMaterial()->GetColor() * 0.15f * -dist;

	movss	DWORD PTR _f$1$[esp+200], xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 674  :     return (float)exp(_X);

	cvtps2pd xmm0, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	DWORD PTR _absorbance$2$[esp+200], xmm2
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 674  :     return (float)exp(_X);

	call	__libm_sse2_exp_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR $T8[esp+200], xmm0
	movss	xmm0, DWORD PTR _absorbance$2$[esp+200]
	cvtps2pd xmm0, xmm0
	call	__libm_sse2_exp_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR $T1[esp+200], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR $T9[esp+200]
	mulss	xmm0, DWORD PTR _f$1$[esp+200]
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 674  :     return (float)exp(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_exp_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	movss	xmm3, DWORD PTR $T8[esp+200]
	xorps	xmm1, xmm1
	movss	xmm2, DWORD PTR $T1[esp+200]
	mulss	xmm3, DWORD PTR _rcol$5[esp+200]
	mulss	xmm2, DWORD PTR _rcol$5[esp+204]
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 674  :     return (float)exp(_X);

	cvtsd2ss xmm1, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	movss	xmm0, DWORD PTR [esi]

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	mulss	xmm1, DWORD PTR _rcol$5[esp+208]

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	addss	xmm0, xmm3
	addss	xmm2, DWORD PTR [esi+4]
	addss	xmm1, DWORD PTR [esi+8]
	movss	DWORD PTR [esi], xmm0
	movss	DWORD PTR [esi+4], xmm2
	movss	DWORD PTR [esi+8], xmm1
$LN286@Raytrace:
	mov	eax, DWORD PTR _prim$[esp+200]
$LN21@Raytrace:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 360  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Raytrace@Engine@Raytracer@@QAEPAVPrimitive@2@AAVRay@2@AAVvector3@2@HMAAMMM@Z ENDP ; Raytracer::Engine::Raytrace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?FindOccluder@Engine@Raytracer@@QAEHAAVRay@2@AAM@Z
_TEXT	SEGMENT
$T1 = -60						; size = 12
_O$ = -48						; size = 12
_D$ = -36						; size = 12
_dist$2 = -24						; size = 4
_axis$1$ = -20						; size = 4
_tmp$1$ = -16						; size = 4
tv590 = -12						; size = 4
_entrypoint$1$ = -8					; size = 4
_this$1$ = -4						; size = 4
_a_Ray$ = 8						; size = 4
_a_Dist$ = 12						; size = 4
?FindOccluder@Engine@Raytracer@@QAEHAAVRay@2@AAM@Z PROC	; Raytracer::Engine::FindOccluder, COMDAT
; _this$ = ecx

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 173  : 	vector3 O, D = a_Ray.GetDirection();

	mov	edx, DWORD PTR _a_Ray$[ebp]
	push	ebx
	mov	ebx, ecx

; 174  : 	// init stack
; 175  : 	int entrypoint = 0, exitpoint = 1;

	mov	DWORD PTR _entrypoint$1$[ebp], 0
	push	esi
	mov	eax, DWORD PTR [edx+20]
	movq	xmm0, QWORD PTR [edx+12]
	mov	DWORD PTR _D$[ebp+8], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 241  : 	KdTreeNode* GetRoot() { return m_Root; }

	mov	eax, DWORD PTR [ebx]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm1, DWORD PTR _D$[ebp+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 173  : 	vector3 O, D = a_Ray.GetDirection();

	movq	QWORD PTR _D$[ebp], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm3, DWORD PTR _D$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 241  : 	KdTreeNode* GetRoot() { return m_Root; }

	mov	eax, DWORD PTR [eax+40]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm2, DWORD PTR _D$[ebp+4]
	push	edi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 171  : {

	mov	DWORD PTR _this$1$[ebp], ebx

; 174  : 	// init stack
; 175  : 	int entrypoint = 0, exitpoint = 1;

	mov	edi, 1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 241  : 	KdTreeNode* GetRoot() { return m_Root; }

	mov	esi, DWORD PTR [eax]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 178  : 	m_Stack[entrypoint].t = tnear;

	mov	eax, DWORD PTR [ebx+2612]
	mov	DWORD PTR [eax+4], 953267991		; 38d1b717H

; 179  : 	m_Stack[entrypoint].pb = O = a_Ray.GetOrigin();

	mov	eax, DWORD PTR [ebx+2612]
	movq	xmm0, QWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR _O$[ebp+8], ecx
	movq	QWORD PTR [eax+8], xmm0
	mov	DWORD PTR [eax+16], ecx

; 180  : 	m_Stack[exitpoint].t = a_Dist;

	mov	ecx, DWORD PTR [ebx+2612]
	mov	eax, DWORD PTR _a_Dist$[ebp]
	movq	QWORD PTR _O$[ebp], xmm0
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+36], eax

; 181  : 	m_Stack[exitpoint].pb = O + D * a_Dist;

	mov	eax, DWORD PTR _a_Dist$[ebp]
	mov	ecx, DWORD PTR [ebx+2612]
	movss	xmm0, DWORD PTR [eax]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm3, xmm0
	mulss	xmm2, xmm0
	mulss	xmm1, xmm0

; 64   : 	void Set( real a_X, real a_Y, real a_Z ) { x = a_X; y = a_Y; z = a_Z; }
; 65   : 	void Normalize() { real l = 1.0f / Length(); x *= l; y *= l; z *= l; }
; 66   : 	real Length() { return (real)sqrt( x * x + y * y + z * z ); }
; 67   : 	real SqrLength() { return x * x + y * y + z * z; }
; 68   : 	real Dot( vector3 a_V ) { return x * a_V.x + y * a_V.y + z * a_V.z; }
; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }
; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }
; 71   : 	void operator += ( vector3* a_V ) { x += a_V->x; y += a_V->y; z += a_V->z; }
; 72   : 	void operator -= ( vector3& a_V ) { x -= a_V.x; y -= a_V.y; z -= a_V.z; }
; 73   : 	void operator -= ( vector3* a_V ) { x -= a_V->x; y -= a_V->y; z -= a_V->z; }
; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }
; 75   : 	void operator *= ( vector3& a_V ) { x *= a_V.x; y *= a_V.y; z *= a_V.z; }
; 76   : 	void operator *= ( vector3* a_V ) { x *= a_V->x; y *= a_V->y; z *= a_V->z; }
; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }
; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm3, DWORD PTR _O$[ebp]
	addss	xmm2, DWORD PTR _O$[ebp+4]
	addss	xmm1, DWORD PTR _O$[ebp+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 181  : 	m_Stack[exitpoint].pb = O + D * a_Dist;

	unpcklps xmm3, xmm2
	movq	QWORD PTR [ecx+40], xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T1[ebp+8], xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 181  : 	m_Stack[exitpoint].pb = O + D * a_Dist;

	mov	eax, DWORD PTR $T1[ebp+8]
	mov	DWORD PTR [ecx+48], eax

; 182  : 	m_Stack[exitpoint].node = 0;

	mov	eax, DWORD PTR [ebx+2612]
	mov	DWORD PTR [eax+32], 0

; 183  : 	// traverse kd-tree
; 184  : 	while (currnode)

	test	esi, esi
	je	$LN72@FindOcclud
	npad	5
$LL13@FindOcclud:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 218  : 	bool IsLeaf() { return ((m_Data & 4) > 0); }

	mov	ecx, DWORD PTR [esi+4]
	test	cl, 4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 186  : 		while (!currnode->IsLeaf())

	ja	$LN10@FindOcclud
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 218  : 	bool IsLeaf() { return ((m_Data & 4) > 0); }

	mov	ebx, edi
	shl	ebx, 5
$LL11@FindOcclud:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 190  : 			if (m_Stack[entrypoint].pb.cell[axis] <= splitpos)

	mov	eax, DWORD PTR _this$1$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 211  : 	int GetAxis() { return m_Data & 3; }

	mov	edx, ecx

; 212  : 	void SetSplitPos( real a_Pos ) { m_Split = a_Pos; }
; 213  : 	real GetSplitPos() { return m_Split; }

	movss	xmm2, DWORD PTR [esi]

; 211  : 	int GetAxis() { return m_Data & 3; }

	and	edx, 3
	mov	DWORD PTR _axis$1$[ebp], edx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 190  : 			if (m_Stack[entrypoint].pb.cell[axis] <= splitpos)

	mov	esi, DWORD PTR [eax+2612]
	mov	eax, DWORD PTR _entrypoint$1$[ebp]
	mov	DWORD PTR tv590[ebp], esi
	lea	eax, DWORD PTR [edx+eax*8]
	comiss	xmm2, DWORD PTR [esi+eax*4+8]

; 192  : 				if (m_Stack[exitpoint].pb.cell[axis] <= splitpos)

	lea	eax, DWORD PTR [edx+edi*8]
	jb	SHORT $LN9@FindOcclud
	comiss	xmm2, DWORD PTR [esi+eax*4+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	mov	esi, ecx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 192  : 				if (m_Stack[exitpoint].pb.cell[axis] <= splitpos)

	jb	SHORT $LN8@FindOcclud
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	and	esi, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 195  : 					continue;

	jmp	$LN63@FindOcclud
$LN8@FindOcclud:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	and	esi, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 203  : 				farchild = currnode + 1; // GetRight();

	lea	ecx, DWORD PTR [esi+8]

; 204  : 			}
; 205  : 			else

	jmp	SHORT $LN6@FindOcclud
$LN9@FindOcclud:

; 206  : 			{
; 207  : 				if (m_Stack[exitpoint].pb.cell[axis] > splitpos)

	movss	xmm0, DWORD PTR [esi+eax*4+8]
	comiss	xmm0, xmm2
	jbe	SHORT $LN5@FindOcclud
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 216  : 	KdTreeNode* GetRight() { return ((KdTreeNode*)(m_Data&0xfffffff8)) + 1; }

	mov	esi, ecx
	and	esi, -8					; fffffff8H
	add	esi, 8
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 210  : 					continue;

	jmp	$LN63@FindOcclud
$LN5@FindOcclud:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	and	ecx, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 213  : 				currnode = farchild + 1; // GetRight();

	lea	esi, DWORD PTR [ecx+8]
$LN6@FindOcclud:

; 214  : 			}
; 215  : 			t = (splitpos - O.cell[axis]) / D.cell[axis];

	movaps	xmm1, xmm2

; 216  : 			int tmp = exitpoint;

	mov	DWORD PTR _tmp$1$[ebp], edi
	subss	xmm1, DWORD PTR _O$[ebp+edx*4]

; 217  : 			if (++exitpoint == entrypoint) exitpoint++;

	inc	edi
	add	ebx, 32					; 00000020H
	divss	xmm1, DWORD PTR _D$[ebp+edx*4]
	cmp	edi, DWORD PTR _entrypoint$1$[ebp]
	jne	SHORT $LN4@FindOcclud
	inc	edi
	add	ebx, 32					; 00000020H
$LN4@FindOcclud:

; 218  : 			m_Stack[exitpoint].prev = tmp;

	mov	eax, DWORD PTR tv590[ebp]
	mov	edx, DWORD PTR _tmp$1$[ebp]
	mov	DWORD PTR [ebx+eax+20], edx

; 219  : 			m_Stack[exitpoint].t = t;

	mov	eax, DWORD PTR _this$1$[ebp]

; 220  : 			m_Stack[exitpoint].node = farchild;
; 221  : 			m_Stack[exitpoint].pb.cell[axis] = splitpos;

	mov	edx, DWORD PTR _axis$1$[ebp]
	mov	eax, DWORD PTR [eax+2612]
	movss	DWORD PTR [ebx+eax+4], xmm1
	mov	eax, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [eax+2612]
	mov	DWORD PTR [ebx+eax], ecx
	lea	ecx, DWORD PTR [edx+edi*8]
	mov	eax, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [eax+2612]
	movss	DWORD PTR [eax+ecx*4+8], xmm2

; 222  : 			int nextaxis = m_Mod[axis + 1];

	mov	eax, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [eax+2608]
	mov	ecx, DWORD PTR [eax+edx*4+4]

; 223  : 			int prevaxis = m_Mod[axis + 2];

	mov	edx, DWORD PTR [eax+edx*4+8]

; 224  : 			m_Stack[exitpoint].pb.cell[nextaxis] = O.cell[nextaxis] + t * D.cell[nextaxis];

	mov	eax, DWORD PTR _this$1$[ebp]
	movss	xmm0, DWORD PTR _D$[ebp+ecx*4]
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR [eax+2612]
	addss	xmm0, DWORD PTR _O$[ebp+ecx*4]
	lea	ecx, DWORD PTR [ecx+edi*8]
	movss	DWORD PTR [eax+ecx*4+8], xmm0

; 225  : 			m_Stack[exitpoint].pb.cell[prevaxis] = O.cell[prevaxis] + t * D.cell[prevaxis];

	lea	ecx, DWORD PTR [edx+edi*8]
	movss	xmm0, DWORD PTR _D$[ebp+edx*4]
	mov	eax, DWORD PTR _this$1$[ebp]
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR [eax+2612]
	addss	xmm0, DWORD PTR _O$[ebp+edx*4]
	movss	DWORD PTR [eax+ecx*4+8], xmm0
$LN63@FindOcclud:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 218  : 	bool IsLeaf() { return ((m_Data & 4) > 0); }

	mov	ecx, DWORD PTR [esi+4]
	test	cl, 4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 186  : 		while (!currnode->IsLeaf())

	jbe	$LL11@FindOcclud
	mov	ebx, DWORD PTR _this$1$[ebp]
	mov	edx, DWORD PTR _a_Ray$[ebp]
$LN10@FindOcclud:

; 228  : 		real dist = a_Dist; // m_Stack[exitpoint].t;

	mov	eax, DWORD PTR _a_Dist$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 220  : 	ObjectList* GetList() { return (ObjectList*)(m_Data&0xfffffff8); }

	mov	esi, DWORD PTR [esi+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 228  : 		real dist = a_Dist; // m_Stack[exitpoint].t;

	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR _dist$2[ebp], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 220  : 	ObjectList* GetList() { return (ObjectList*)(m_Data&0xfffffff8); }

	and	esi, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 229  : 		while (list)

	je	SHORT $LN2@FindOcclud
$LL3@FindOcclud:

; 230  : 		{
; 231  : 			m_Intersections++;

	inc	DWORD PTR [ebx+2636]

; 232  : 			if (list->GetPrimitive()->Intersect( a_Ray, dist )) return 1;

	lea	eax, DWORD PTR _dist$2[ebp]
	mov	ecx, DWORD PTR [esi]
	push	eax
	push	edx
	call	?Intersect@Primitive@Raytracer@@QAEHAAVRay@2@AAM@Z ; Raytracer::Primitive::Intersect
	test	eax, eax
	jne	SHORT $LN62@FindOcclud
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 195  : 	ObjectList* GetNext() { return m_Next; }

	mov	esi, DWORD PTR [esi+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 229  : 		while (list)

	mov	edx, DWORD PTR _a_Ray$[ebp]
	test	esi, esi
	jne	SHORT $LL3@FindOcclud
$LN2@FindOcclud:

; 233  : 			list = list->GetNext();
; 234  : 		}
; 235  : 		entrypoint = exitpoint;
; 236  : 		currnode = m_Stack[exitpoint].node;

	mov	eax, DWORD PTR [ebx+2612]
	mov	DWORD PTR _entrypoint$1$[ebp], edi
	shl	edi, 5
	mov	esi, DWORD PTR [eax+edi]

; 237  : 		exitpoint = m_Stack[entrypoint].prev;

	mov	edi, DWORD PTR [eax+edi+20]
	test	esi, esi
	je	SHORT $LN72@FindOcclud

; 183  : 	// traverse kd-tree
; 184  : 	while (currnode)

	mov	edx, DWORD PTR _a_Ray$[ebp]
	jmp	$LL13@FindOcclud
$LN62@FindOcclud:
	pop	edi
	pop	esi

; 232  : 			if (list->GetPrimitive()->Intersect( a_Ray, dist )) return 1;

	mov	eax, 1
	pop	ebx

; 240  : }

	mov	esp, ebp
	pop	ebp
	ret	8
$LN72@FindOcclud:
	pop	edi
	pop	esi

; 238  : 	}
; 239  : 	return 0;

	xor	eax, eax
	pop	ebx

; 240  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?FindOccluder@Engine@Raytracer@@QAEHAAVRay@2@AAM@Z ENDP	; Raytracer::Engine::FindOccluder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?FindNearest@Engine@Raytracer@@QAEHAAVRay@2@AAMAAPAVPrimitive@2@@Z
_TEXT	SEGMENT
$T1 = -80						; size = 12
$T2 = -80						; size = 12
_p2$ = -80						; size = 12
_p1$ = -68						; size = 12
_D$ = -56						; size = 12
_O$ = -44						; size = 12
_O$4$ = -32						; size = 8
_pr$1$ = -28						; size = 4
_axis$1$ = -28						; size = 4
_tmp$1$ = -24						; size = 4
tv1174 = -24						; size = 4
_retval$1$ = -20					; size = 4
_dist$3 = -16						; size = 4
_entrypoint$1$ = -12					; size = 4
_exitpoint$1$ = -8					; size = 4
tv1175 = -8						; size = 4
_this$1$ = -4						; size = 4
_a_Ray$ = 8						; size = 4
_a_Dist$ = 12						; size = 4
_a_Prim$ = 16						; size = 4
?FindNearest@Engine@Raytracer@@QAEHAAVRay@2@AAMAAPAVPrimitive@2@@Z PROC ; Raytracer::Engine::FindNearest, COMDAT
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H

; 58   : 	real tnear = 0, tfar = a_Dist, t;

	mov	eax, DWORD PTR _a_Dist$[ebp]
	xorps	xmm7, xmm7
	push	ebx
	mov	ebx, ecx

; 62   : 	vector3 D = a_Ray.GetDirection(), O = a_Ray.GetOrigin();

	mov	edx, DWORD PTR _a_Ray$[ebp]
	mov	DWORD PTR _this$1$[ebp], ebx
	movaps	xmm4, xmm7
	movss	xmm5, DWORD PTR [eax]
	mov	DWORD PTR _retval$1$[ebp], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 195  : 	vector3& GetPos() { return m_Pos; }

	mov	ecx, DWORD PTR [ebx]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 60   : 	vector3 p1 = m_Scene->GetExtends().GetPos();

	movq	xmm0, QWORD PTR [ecx+16]
	mov	eax, DWORD PTR [ecx+24]
	movq	QWORD PTR _p1$[ebp], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR _p1$[ebp]
	addss	xmm0, DWORD PTR [ecx+28]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 60   : 	vector3 p1 = m_Scene->GetExtends().GetPos();

	mov	DWORD PTR _p1$[ebp+8], eax

; 62   : 	vector3 D = a_Ray.GetDirection(), O = a_Ray.GetOrigin();

	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _D$[ebp+8], eax

; 63   : 	for ( int i = 0; i < 3; i++ ) if (D.cell[i] < 0) 

	xor	eax, eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _p2$[ebp], xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, DWORD PTR _p1$[ebp+4]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _p2$[ebp+4], xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [ecx+36]
	addss	xmm0, DWORD PTR _p1$[ebp+8]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR _p2$[ebp+8], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 62   : 	vector3 D = a_Ray.GetDirection(), O = a_Ray.GetOrigin();

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR _D$[ebp], xmm0
	movq	xmm0, QWORD PTR [edx]
	mov	edx, DWORD PTR [edx+8]
	movq	QWORD PTR _O$4$[ebp], xmm0
	movq	QWORD PTR _O$[ebp], xmm0
	mov	DWORD PTR _O$[ebp+8], edx
$LL33@FindNeares:

; 63   : 	for ( int i = 0; i < 3; i++ ) if (D.cell[i] < 0) 

	comiss	xmm7, DWORD PTR _D$[ebp+eax]
	jbe	SHORT $LN30@FindNeares

; 64   : 	{
; 65   : 		if (O.cell[i] < p1.cell[i]) return 0;

	movss	xmm0, DWORD PTR _p1$[ebp+eax]
	comiss	xmm0, DWORD PTR _O$[ebp+eax]

; 66   : 	}

	jmp	SHORT $LN127@FindNeares
$LN30@FindNeares:

; 67   : 	else if (O.cell[i] > p2.cell[i]) return 0;

	movss	xmm0, DWORD PTR _O$[ebp+eax]
	comiss	xmm0, DWORD PTR _p2$[ebp+eax]
$LN127@FindNeares:
	ja	$LN102@FindNeares

; 63   : 	for ( int i = 0; i < 3; i++ ) if (D.cell[i] < 0) 

	add	eax, 4
	cmp	eax, 12					; 0000000cH
	jl	SHORT $LL33@FindNeares

; 68   : 	// clip ray segment to box
; 69   : 	for (int i = 0; i < 3; i++)

	xor	eax, eax
	npad	9
$LL26@FindNeares:

; 70   : 	{
; 71   : 		real pos = O.cell[i] + tfar * D.cell[i];

	movss	xmm6, DWORD PTR _D$[ebp+eax]

; 72   : 		if (D.cell[i] < 0)

	comiss	xmm7, xmm6
	movss	xmm2, DWORD PTR _O$[ebp+eax]
	movaps	xmm3, xmm6
	mulss	xmm3, xmm5
	addss	xmm3, xmm2
	jbe	SHORT $LN23@FindNeares

; 73   : 		{
; 74   : 			// clip end point
; 75   : 			if (pos < p1.cell[i]) tfar = tnear + (tfar - tnear) * ((O.cell[i] - p1.cell[i]) / (O.cell[i] - pos));

	movss	xmm0, DWORD PTR _p1$[ebp+eax]
	comiss	xmm0, xmm3
	jbe	SHORT $LN22@FindNeares
	movaps	xmm1, xmm2
	subss	xmm5, xmm4
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	subss	xmm0, xmm3
	divss	xmm1, xmm0
	mulss	xmm5, xmm1
	addss	xmm5, xmm4
$LN22@FindNeares:

; 76   : 			// clip start point
; 77   : 			if (O.cell[i] > p2.cell[i]) tnear += (tfar - tnear) * ((O.cell[i] - p2.cell[i]) / (tfar * D.cell[i]));

	movss	xmm0, DWORD PTR _p2$[ebp+eax]
	comiss	xmm2, xmm0
	jbe	SHORT $LN18@FindNeares
	subss	xmm2, xmm0
	mulss	xmm6, xmm5
	movaps	xmm0, xmm5
	subss	xmm0, xmm4
	divss	xmm2, xmm6
	mulss	xmm2, xmm0
	addss	xmm4, xmm2

; 78   : 		}
; 79   : 		else

	jmp	SHORT $LN18@FindNeares
$LN102@FindNeares:

; 64   : 	{
; 65   : 		if (O.cell[i] < p1.cell[i]) return 0;

	xor	eax, eax
	pop	ebx

; 164  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN23@FindNeares:

; 80   : 		{
; 81   : 			// clip end point
; 82   : 			if (pos > p2.cell[i]) tfar = tnear + (tfar - tnear) * ((p2.cell[i] - O.cell[i]) / (pos - O.cell[i]));

	movss	xmm0, DWORD PTR _p2$[ebp+eax]
	comiss	xmm3, xmm0
	jbe	SHORT $LN19@FindNeares
	subss	xmm0, xmm2
	subss	xmm3, xmm2
	subss	xmm5, xmm4
	divss	xmm0, xmm3
	mulss	xmm5, xmm0
	addss	xmm5, xmm4
$LN19@FindNeares:

; 83   : 			// clip start point
; 84   : 			if (O.cell[i] < p1.cell[i]) tnear += (tfar - tnear) * ((p1.cell[i] - O.cell[i]) / (tfar * D.cell[i]));

	movss	xmm1, DWORD PTR _p1$[ebp+eax]
	comiss	xmm1, xmm2
	jbe	SHORT $LN18@FindNeares
	subss	xmm1, xmm2
	mulss	xmm6, xmm5
	movaps	xmm0, xmm5
	subss	xmm0, xmm4
	divss	xmm1, xmm6
	mulss	xmm1, xmm0
	addss	xmm4, xmm1
$LN18@FindNeares:

; 85   : 		}
; 86   : 		if (tnear > tfar) return 0;

	comiss	xmm4, xmm5
	ja	SHORT $LN102@FindNeares

; 68   : 	// clip ray segment to box
; 69   : 	for (int i = 0; i < 3; i++)

	add	eax, 4
	cmp	eax, 12					; 0000000cH
	jl	$LL26@FindNeares
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 241  : 	KdTreeNode* GetRoot() { return m_Root; }

	mov	eax, DWORD PTR [ecx+40]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 94   : 	if (tnear > 0.0f) m_Stack[entrypoint].pb = O + D * tnear;

	movss	xmm1, DWORD PTR _D$[ebp+4]
	movss	xmm6, DWORD PTR _D$[ebp]
	movss	xmm3, DWORD PTR _O$[ebp+4]
	push	esi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 241  : 	KdTreeNode* GetRoot() { return m_Root; }

	mov	esi, DWORD PTR [eax]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 93   : 	m_Stack[entrypoint].t = tnear;

	mov	eax, DWORD PTR [ebx+2612]
	push	edi
	mov	edi, 1
	mov	DWORD PTR _entrypoint$1$[ebp], 0

; 94   : 	if (tnear > 0.0f) m_Stack[entrypoint].pb = O + D * tnear;

	comiss	xmm4, xmm7
	mov	DWORD PTR _exitpoint$1$[ebp], edi
	movss	xmm7, DWORD PTR _D$[ebp+8]
	movss	DWORD PTR [eax+4], xmm4
	jbe	SHORT $LN16@FindNeares
	mov	ecx, DWORD PTR [ebx+2612]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movaps	xmm0, xmm6
	mulss	xmm0, xmm4
	movaps	xmm2, xmm7
	mulss	xmm1, xmm4
	mulss	xmm2, xmm4

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm4, DWORD PTR _O$[ebp]
	addss	xmm3, xmm1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 94   : 	if (tnear > 0.0f) m_Stack[entrypoint].pb = O + D * tnear;

	movss	xmm1, DWORD PTR _D$[ebp+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm4, xmm0
	movss	xmm0, DWORD PTR _O$[ebp+8]
	addss	xmm0, xmm2
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 94   : 	if (tnear > 0.0f) m_Stack[entrypoint].pb = O + D * tnear;

	unpcklps xmm4, xmm3
	movss	xmm3, DWORD PTR _O$[ebp+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T2[ebp+8], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 94   : 	if (tnear > 0.0f) m_Stack[entrypoint].pb = O + D * tnear;

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR [ecx+8], xmm4
	mov	DWORD PTR [ecx+16], eax
	jmp	SHORT $LN15@FindNeares
$LN16@FindNeares:

; 95   : 				 else m_Stack[entrypoint].pb = O;

	mov	eax, DWORD PTR [ebx+2612]
	movq	xmm0, QWORD PTR _O$4$[ebp]
	movq	QWORD PTR [eax+8], xmm0
	mov	DWORD PTR [eax+16], edx
$LN15@FindNeares:

; 96   : 	m_Stack[exitpoint].t = tfar;

	mov	eax, DWORD PTR [ebx+2612]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	mulss	xmm6, xmm5
	mulss	xmm1, xmm5
	mulss	xmm7, xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 96   : 	m_Stack[exitpoint].t = tfar;

	movss	DWORD PTR [eax+36], xmm5
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm1, xmm3
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 97   : 	m_Stack[exitpoint].pb = O + D * tfar;

	mov	ecx, DWORD PTR [ebx+2612]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	addss	xmm6, DWORD PTR _O$[ebp]
	addss	xmm7, DWORD PTR _O$[ebp+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 97   : 	m_Stack[exitpoint].pb = O + D * tfar;

	unpcklps xmm6, xmm1
	movq	QWORD PTR [ecx+40], xmm6
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR $T1[ebp+8], xmm7
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 97   : 	m_Stack[exitpoint].pb = O + D * tfar;

	mov	eax, DWORD PTR $T1[ebp+8]
	mov	DWORD PTR [ecx+48], eax

; 98   : 	m_Stack[exitpoint].node = 0;

	mov	eax, DWORD PTR [ebx+2612]
	mov	DWORD PTR [eax+32], 0

; 99   : 	// traverse kd-tree
; 100  : 	while (currnode)

	test	esi, esi
	je	$LN123@FindNeares
	npad	3
$LL14@FindNeares:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 218  : 	bool IsLeaf() { return ((m_Data & 4) > 0); }

	mov	ecx, DWORD PTR [esi+4]
	test	cl, 4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 102  : 		while (!currnode->IsLeaf())

	ja	$LN11@FindNeares
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 218  : 	bool IsLeaf() { return ((m_Data & 4) > 0); }

	mov	ebx, edi
	shl	ebx, 5
$LL12@FindNeares:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 106  : 			if (m_Stack[entrypoint].pb.cell[axis] <= splitpos)

	mov	eax, DWORD PTR _this$1$[ebp]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 211  : 	int GetAxis() { return m_Data & 3; }

	mov	edx, ecx

; 212  : 	void SetSplitPos( real a_Pos ) { m_Split = a_Pos; }
; 213  : 	real GetSplitPos() { return m_Split; }

	movss	xmm2, DWORD PTR [esi]

; 211  : 	int GetAxis() { return m_Data & 3; }

	and	edx, 3
	mov	DWORD PTR _axis$1$[ebp], edx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 106  : 			if (m_Stack[entrypoint].pb.cell[axis] <= splitpos)

	mov	esi, DWORD PTR [eax+2612]
	mov	eax, DWORD PTR _entrypoint$1$[ebp]
	mov	DWORD PTR tv1175[ebp], esi
	lea	eax, DWORD PTR [edx+eax*8]
	comiss	xmm2, DWORD PTR [esi+eax*4+8]

; 108  : 				if (m_Stack[exitpoint].pb.cell[axis] <= splitpos)

	lea	eax, DWORD PTR [edx+edi*8]
	jb	SHORT $LN10@FindNeares
	comiss	xmm2, DWORD PTR [esi+eax*4+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	mov	esi, ecx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 108  : 				if (m_Stack[exitpoint].pb.cell[axis] <= splitpos)

	jb	SHORT $LN9@FindNeares
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	and	esi, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 111  : 					continue;

	jmp	$LN108@FindNeares
$LN9@FindNeares:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	and	esi, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 119  : 				farchild = currnode + 1; // GetRight();

	lea	ecx, DWORD PTR [esi+8]

; 120  : 			}
; 121  : 			else

	jmp	SHORT $LN7@FindNeares
$LN10@FindNeares:

; 122  : 			{
; 123  : 				if (m_Stack[exitpoint].pb.cell[axis] > splitpos)

	movss	xmm0, DWORD PTR [esi+eax*4+8]
	comiss	xmm0, xmm2
	jbe	SHORT $LN6@FindNeares
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 216  : 	KdTreeNode* GetRight() { return ((KdTreeNode*)(m_Data&0xfffffff8)) + 1; }

	mov	esi, ecx
	and	esi, -8					; fffffff8H
	add	esi, 8
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 126  : 					continue;

	jmp	$LN108@FindNeares
$LN6@FindNeares:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 215  : 	KdTreeNode* GetLeft() { return (KdTreeNode*)(m_Data&0xfffffff8); }

	and	ecx, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 129  : 				currnode = farchild + 1; // GetRight();

	lea	esi, DWORD PTR [ecx+8]
$LN7@FindNeares:

; 130  : 			}
; 131  : 			t = (splitpos - O.cell[axis]) / D.cell[axis];

	movaps	xmm1, xmm2

; 132  : 			int tmp = exitpoint++;

	mov	DWORD PTR _tmp$1$[ebp], edi
	subss	xmm1, DWORD PTR _O$[ebp+edx*4]
	inc	edi
	add	ebx, 32					; 00000020H
	divss	xmm1, DWORD PTR _D$[ebp+edx*4]

; 133  : 			if (exitpoint == entrypoint) exitpoint++;

	cmp	edi, DWORD PTR _entrypoint$1$[ebp]
	jne	SHORT $LN5@FindNeares
	inc	edi
	add	ebx, 32					; 00000020H
$LN5@FindNeares:

; 134  : 			m_Stack[exitpoint].prev = tmp;

	mov	eax, DWORD PTR tv1175[ebp]
	mov	edx, DWORD PTR _tmp$1$[ebp]
	mov	DWORD PTR [eax+ebx+20], edx

; 135  : 			m_Stack[exitpoint].t = t;

	mov	eax, DWORD PTR _this$1$[ebp]

; 136  : 			m_Stack[exitpoint].node = farchild;
; 137  : 			m_Stack[exitpoint].pb.cell[axis] = splitpos;

	mov	edx, DWORD PTR _axis$1$[ebp]
	mov	eax, DWORD PTR [eax+2612]
	movss	DWORD PTR [ebx+eax+4], xmm1
	mov	eax, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [eax+2612]
	mov	DWORD PTR [ebx+eax], ecx
	lea	ecx, DWORD PTR [edx+edi*8]
	mov	eax, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [eax+2612]
	movss	DWORD PTR [eax+ecx*4+8], xmm2

; 138  : 			int nextaxis = m_Mod[axis + 1];

	mov	eax, DWORD PTR _this$1$[ebp]
	mov	eax, DWORD PTR [eax+2608]
	mov	ecx, DWORD PTR [eax+edx*4+4]

; 139  : 			int prevaxis = m_Mod[axis + 2];

	mov	edx, DWORD PTR [eax+edx*4+8]

; 140  : 			m_Stack[exitpoint].pb.cell[nextaxis] = O.cell[nextaxis] + t * D.cell[nextaxis];

	mov	eax, DWORD PTR _this$1$[ebp]
	movss	xmm0, DWORD PTR _D$[ebp+ecx*4]
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR [eax+2612]
	addss	xmm0, DWORD PTR _O$[ebp+ecx*4]
	lea	ecx, DWORD PTR [ecx+edi*8]
	movss	DWORD PTR [eax+ecx*4+8], xmm0

; 141  : 			m_Stack[exitpoint].pb.cell[prevaxis] = O.cell[prevaxis] + t * D.cell[prevaxis];

	lea	ecx, DWORD PTR [edx+edi*8]
	movss	xmm0, DWORD PTR _D$[ebp+edx*4]
	mov	eax, DWORD PTR _this$1$[ebp]
	mulss	xmm0, xmm1
	mov	eax, DWORD PTR [eax+2612]
	addss	xmm0, DWORD PTR _O$[ebp+edx*4]
	movss	DWORD PTR [eax+ecx*4+8], xmm0
$LN108@FindNeares:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 218  : 	bool IsLeaf() { return ((m_Data & 4) > 0); }

	mov	ecx, DWORD PTR [esi+4]
	test	cl, 4
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 102  : 		while (!currnode->IsLeaf())

	jbe	$LL12@FindNeares
	mov	ebx, DWORD PTR _this$1$[ebp]
	mov	DWORD PTR _exitpoint$1$[ebp], edi
$LN11@FindNeares:

; 144  : 		real dist = m_Stack[exitpoint].t;

	mov	eax, DWORD PTR [ebx+2612]
	mov	ecx, edi
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 220  : 	ObjectList* GetList() { return (ObjectList*)(m_Data&0xfffffff8); }

	mov	esi, DWORD PTR [esi+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 144  : 		real dist = m_Stack[exitpoint].t;

	shl	ecx, 5
	mov	DWORD PTR tv1174[ebp], ecx
	movss	xmm0, DWORD PTR [ecx+eax+4]
	movss	DWORD PTR _dist$3[ebp], xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 220  : 	ObjectList* GetList() { return (ObjectList*)(m_Data&0xfffffff8); }

	and	esi, -8					; fffffff8H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 145  : 		while (list)

	je	SHORT $LN121@FindNeares
	mov	edi, DWORD PTR _a_Prim$[ebp]
$LL4@FindNeares:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 193  : 	Primitive* GetPrimitive() { return m_Primitive; }

	mov	eax, DWORD PTR [esi]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 150  : 			if (result = pr->Intersect( a_Ray, dist ))

	lea	ecx, DWORD PTR _dist$3[ebp]
	inc	DWORD PTR [ebx+2636]
	push	ecx
	push	DWORD PTR _a_Ray$[ebp]
	mov	ecx, eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 193  : 	Primitive* GetPrimitive() { return m_Primitive; }

	mov	DWORD PTR _pr$1$[ebp], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 150  : 			if (result = pr->Intersect( a_Ray, dist ))

	call	?Intersect@Primitive@Raytracer@@QAEHAAVRay@2@AAM@Z ; Raytracer::Primitive::Intersect
	test	eax, eax
	je	SHORT $LN124@FindNeares

; 151  : 			{
; 152  : 				retval = result;
; 153  : 				a_Dist = dist;

	movss	xmm0, DWORD PTR _dist$3[ebp]
	mov	edx, eax
	mov	eax, DWORD PTR _a_Dist$[ebp]
	mov	DWORD PTR _retval$1$[ebp], edx
	movss	DWORD PTR [eax], xmm0

; 154  : 				a_Prim = pr;

	mov	eax, DWORD PTR _pr$1$[ebp]
	mov	DWORD PTR [edi], eax
	jmp	SHORT $LN2@FindNeares
$LN124@FindNeares:
	mov	edx, DWORD PTR _retval$1$[ebp]
$LN2@FindNeares:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 195  : 	ObjectList* GetNext() { return m_Next; }

	mov	esi, DWORD PTR [esi+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 145  : 		while (list)

	test	esi, esi
	jne	SHORT $LL4@FindNeares

; 155  : 			}
; 156  : 			list = list->GetNext();
; 157  : 		}
; 158  : 		if (retval) return retval;

	mov	edi, DWORD PTR _exitpoint$1$[ebp]
	test	edx, edx
	jne	SHORT $LN105@FindNeares
	mov	ecx, DWORD PTR tv1174[ebp]
$LN121@FindNeares:

; 159  : 		entrypoint = exitpoint;
; 160  : 		currnode = m_Stack[exitpoint].node;

	mov	eax, DWORD PTR [ebx+2612]
	mov	DWORD PTR _entrypoint$1$[ebp], edi
	mov	esi, DWORD PTR [ecx+eax]

; 161  : 		exitpoint = m_Stack[entrypoint].prev;

	mov	edi, DWORD PTR [ecx+eax+20]
	mov	DWORD PTR _exitpoint$1$[ebp], edi
	test	esi, esi
	jne	$LL14@FindNeares
$LN123@FindNeares:
	pop	edi
	pop	esi

; 162  : 	}
; 163  : 	return 0;

	xor	eax, eax
	pop	ebx

; 164  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN105@FindNeares:
	pop	edi
	pop	esi

; 155  : 			}
; 156  : 			list = list->GetNext();
; 157  : 		}
; 158  : 		if (retval) return retval;

	mov	eax, edx
	pop	ebx

; 164  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?FindNearest@Engine@Raytracer@@QAEHAAVRay@2@AAMAAPAVPrimitive@2@@Z ENDP ; Raytracer::Engine::FindNearest
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ?SetTarget@Engine@Raytracer@@QAEXPAIHH@Z
_TEXT	SEGMENT
_a_Dest$ = 8						; size = 4
_a_Width$ = 12						; size = 4
_a_Height$ = 16						; size = 4
?SetTarget@Engine@Raytracer@@QAEXPAIHH@Z PROC		; Raytracer::Engine::SetTarget, COMDAT
; _this$ = ecx

; 45   : {

	push	ebp
	mov	ebp, esp

; 46   : 	// set pixel buffer address & size
; 47   : 	m_Dest = a_Dest;

	mov	eax, DWORD PTR _a_Dest$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 48   : 	m_Width = a_Width;

	mov	eax, DWORD PTR _a_Width$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 49   : 	m_Height = a_Height;

	mov	eax, DWORD PTR _a_Height$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 50   : }

	pop	ebp
	ret	12					; 0000000cH
?SetTarget@Engine@Raytracer@@QAEXPAIHH@Z ENDP		; Raytracer::Engine::SetTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ??1Engine@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??1Engine@Raytracer@@QAE@XZ PROC			; Raytracer::Engine::~Engine, COMDAT
; _this$ = ecx

; 36   : {

	push	esi

; 37   : 	delete m_Scene;

	mov	esi, DWORD PTR [ecx]
	test	esi, esi
	je	SHORT $LN5@Engine
	mov	ecx, esi
	call	??1Scene@Raytracer@@QAE@XZ		; Raytracer::Scene::~Scene
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Engine:
	pop	esi

; 38   : }

	ret	0
??1Engine@Raytracer@@QAE@XZ ENDP			; Raytracer::Engine::~Engine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\twister.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ??0Engine@Raytracer@@QAE@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0Engine@Raytracer@@QAE@XZ PROC			; Raytracer::Engine::Engine, COMDAT
; _this$ = ecx

; 25   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Engine@Raytracer@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+24]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\twister.h

; 19   : 	Twister() { Seed( (unsigned long)0xf2710812 ); }

	push	-227473390				; f2710812H
	call	?Seed@Twister@Raytracer@@QAEXK@Z	; Raytracer::Twister::Seed
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 62   : 	vector3() : x( 0.0f ), y( 0.0f ), z( 0.0f ) {};

	mov	DWORD PTR [esi+2524], 0
	mov	DWORD PTR [esi+2528], 0
	mov	DWORD PTR [esi+2532], 0
	mov	DWORD PTR [esi+2536], 0
	mov	DWORD PTR [esi+2540], 0
	mov	DWORD PTR [esi+2544], 0
	mov	DWORD PTR [esi+2548], 0
	mov	DWORD PTR [esi+2552], 0
	mov	DWORD PTR [esi+2556], 0
	mov	DWORD PTR [esi+2560], 0
	mov	DWORD PTR [esi+2564], 0
	mov	DWORD PTR [esi+2568], 0
	mov	DWORD PTR [esi+2572], 0
	mov	DWORD PTR [esi+2576], 0
	mov	DWORD PTR [esi+2580], 0
	mov	DWORD PTR [esi+2584], 0
	mov	DWORD PTR [esi+2588], 0
	mov	DWORD PTR [esi+2592], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 26   : 	m_Scene = new Scene();

	push	68					; 00000044H
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 62   : 	vector3() : x( 0.0f ), y( 0.0f ), z( 0.0f ) {};

	mov	DWORD PTR [esi+2596], 0
	mov	DWORD PTR [esi+2600], 0
	mov	DWORD PTR [esi+2604], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 26   : 	m_Scene = new Scene();

	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN3@Engine
	mov	ecx, eax
	call	??0Scene@Raytracer@@QAE@XZ		; Raytracer::Scene::Scene
	jmp	SHORT $LN4@Engine
$LN3@Engine:
	xor	eax, eax
$LN4@Engine:

; 27   : 	KdTree::SetMemoryManager( new MManager() );

	push	24					; 00000018H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [esi], eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	eax, eax
	je	SHORT $LN5@Engine
	mov	ecx, eax
	call	??0MManager@Raytracer@@QAE@XZ		; Raytracer::MManager::MManager
	jmp	SHORT $LN6@Engine
$LN5@Engine:
	xor	eax, eax
$LN6@Engine:

; 28   : 	m_Mod = new int[64];

	push	256					; 00000100H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 247  : 	static void SetMemoryManager( MManager* a_MM ) { s_MManager = a_MM; }

	mov	DWORD PTR ?s_MManager@KdTree@Raytracer@@2PAVMManager@2@A, eax ; Raytracer::KdTree::s_MManager
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 28   : 	m_Mod = new int[64];

	call	??2@YAPAXI@Z				; operator new

; 29   : 	m_Mod = (int*)((((unsigned long)m_Mod) + 32) & (0xffffffff - 31));

	add	eax, 32					; 00000020H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR [esi+2608], eax

; 31   : 	m_Stack = new kdstack[64];

	push	2048					; 00000800H
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR [esi+2608]
	mov	DWORD PTR [eax+4], 1
	mov	eax, DWORD PTR [esi+2608]
	mov	DWORD PTR [eax+8], 2
	mov	eax, DWORD PTR [esi+2608]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR [esi+2608]
	mov	DWORD PTR [eax+16], 1
	call	??2@YAPAXI@Z				; operator new
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@Engine
	mov	edx, 63					; 0000003fH
	lea	ecx, DWORD PTR [eax+16]
	npad	7
$LL31@Engine:
	dec	edx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 62   : 	vector3() : x( 0.0f ), y( 0.0f ), z( 0.0f ) {};

	mov	DWORD PTR [ecx-8], 0
	mov	DWORD PTR [ecx-4], 0
	lea	ecx, DWORD PTR [ecx+32]
	mov	DWORD PTR [ecx-32], 0
	jns	SHORT $LL31@Engine
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp

; 31   : 	m_Stack = new kdstack[64];

	jmp	SHORT $LN8@Engine
$LN7@Engine:
	xor	eax, eax
$LN8@Engine:

; 32   : 	m_Stack = (kdstack*)((((unsigned long)m_Stack) + 32) & (0xffffffff - 31));

	add	eax, 32					; 00000020H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR [esi+2612], eax

; 33   : }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Engine@Raytracer@@QAE@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0Engine@Raytracer@@QAE@XZ$1:
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0Engine@Raytracer@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Engine@Raytracer@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Engine@Raytracer@@QAE@XZ ENDP			; Raytracer::Engine::Engine
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??0kdstack@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??0kdstack@Raytracer@@QAE@XZ PROC			; Raytracer::kdstack::kdstack, COMDAT
; _this$ = ecx

; 62   : 	vector3() : x( 0.0f ), y( 0.0f ), z( 0.0f ) {};

	mov	DWORD PTR [ecx+8], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 0
	ret	0
??0kdstack@Raytracer@@QAE@XZ ENDP			; Raytracer::kdstack::kdstack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.h
;	COMDAT ?GetDirection@Ray@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetDirection@Ray@Raytracer@@QAEAAVvector3@2@XZ PROC	; Raytracer::Ray::GetDirection, COMDAT
; _this$ = ecx

; 25   : 	vector3& GetDirection() { return m_Direction; }

	lea	eax, DWORD PTR [ecx+12]
	ret	0
?GetDirection@Ray@Raytracer@@QAEAAVvector3@2@XZ ENDP	; Raytracer::Ray::GetDirection
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.h
;	COMDAT ?GetOrigin@Ray@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetOrigin@Ray@Raytracer@@QAEAAVvector3@2@XZ PROC	; Raytracer::Ray::GetOrigin, COMDAT
; _this$ = ecx

; 24   : 	vector3& GetOrigin() { return m_Origin; }

	mov	eax, ecx
	ret	0
?GetOrigin@Ray@Raytracer@@QAEAAVvector3@2@XZ ENDP	; Raytracer::Ray::GetOrigin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\raytracer.cpp
;	COMDAT ??0Ray@Raytracer@@QAE@AAVvector3@1@0@Z
_TEXT	SEGMENT
_a_Origin$ = 8						; size = 4
_a_Dir$ = 12						; size = 4
??0Ray@Raytracer@@QAE@AAVvector3@1@0@Z PROC		; Raytracer::Ray::Ray, COMDAT
; _this$ = ecx

; 21   : {

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _a_Origin$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _a_Dir$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 22   : }

	mov	eax, ecx
	pop	ebp
	ret	8
??0Ray@Raytracer@@QAE@AAVvector3@1@0@Z ENDP		; Raytracer::Ray::Ray
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\twister.h
;	COMDAT ??0Twister@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??0Twister@Raytracer@@QAE@XZ PROC			; Raytracer::Twister::Twister, COMDAT
; _this$ = ecx

; 19   : 	Twister() { Seed( (unsigned long)0xf2710812 ); }

	push	esi
	push	-227473390				; f2710812H
	mov	esi, ecx
	call	?Seed@Twister@Raytracer@@QAEXK@Z	; Raytracer::Twister::Seed
	mov	eax, esi
	pop	esi
	ret	0
??0Twister@Raytracer@@QAE@XZ ENDP			; Raytracer::Twister::Twister
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?GetSize@aabb@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetSize@aabb@Raytracer@@QAEAAVvector3@2@XZ PROC	; Raytracer::aabb::GetSize, COMDAT
; _this$ = ecx

; 196  : 	vector3& GetSize() { return m_Size; }

	lea	eax, DWORD PTR [ecx+12]
	ret	0
?GetSize@aabb@Raytracer@@QAEAAVvector3@2@XZ ENDP	; Raytracer::aabb::GetSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?GetPos@aabb@Raytracer@@QAEAAVvector3@2@XZ
_TEXT	SEGMENT
?GetPos@aabb@Raytracer@@QAEAAVvector3@2@XZ PROC		; Raytracer::aabb::GetPos, COMDAT
; _this$ = ecx

; 195  : 	vector3& GetPos() { return m_Pos; }

	mov	eax, ecx
	ret	0
?GetPos@aabb@Raytracer@@QAEAAVvector3@2@XZ ENDP		; Raytracer::aabb::GetPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?Invert@matrix@Raytracer@@QAEXXZ
_TEXT	SEGMENT
_t$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?Invert@matrix@Raytracer@@QAEXXZ PROC			; Raytracer::matrix::Invert, COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	esi, ecx

; 105  : 	matrix() { Identity(); }

	lea	ecx, DWORD PTR _t$[ebp]
	call	?Identity@matrix@Raytracer@@QAEXXZ	; Raytracer::matrix::Identity

; 163  : 		matrix t;
; 164  : 		real tx = -cell[3], ty = -cell[7], tz = -cell[11];

	movss	xmm5, DWORD PTR [esi+12]
	movss	xmm3, DWORD PTR [esi+28]
	movss	xmm4, DWORD PTR [esi+44]
	movss	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	xorps	xmm3, xmm0

; 165  : 		for ( int h = 0; h < 3; h++ ) for ( int v = 0; v < 3; v++ ) t.cell[h + v * 4] = cell[v + h * 4];

	movss	xmm1, DWORD PTR [esi+24]
	xorps	xmm5, xmm0
	movss	xmm2, DWORD PTR [esi+8]
	xorps	xmm4, xmm0

; 166  : 		for ( int i = 0; i < 11; i++ ) cell[i] = t.cell[i];

	unpcklps xmm2, xmm1
	movss	xmm0, DWORD PTR [esi]
	movss	DWORD PTR _t$[ebp], xmm0
	movss	xmm0, DWORD PTR [esi+4]
	movss	DWORD PTR _t$[ebp+16], xmm0
	movss	xmm0, DWORD PTR [esi+16]
	movss	DWORD PTR _t$[ebp+4], xmm0
	movss	xmm0, DWORD PTR [esi+20]
	movss	DWORD PTR _t$[ebp+20], xmm0
	movss	xmm0, DWORD PTR [esi+32]
	movss	DWORD PTR _t$[ebp+8], xmm0
	movss	xmm0, DWORD PTR [esi+36]
	movss	DWORD PTR _t$[ebp+24], xmm0
	movss	xmm0, DWORD PTR [esi+40]
	movss	DWORD PTR _t$[ebp+40], xmm0
	movdqu	xmm0, XMMWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _t$[ebp+40]

; 167  : 		cell[3] = tx * cell[0] + ty * cell[1] + tz * cell[2];
; 168  : 		cell[7] = tx * cell[4] + ty * cell[5] + tz * cell[6];
; 169  : 		cell[11] = tx * cell[8] + ty * cell[9] + tz * cell[10];
; 170  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	movdqu	XMMWORD PTR [esi], xmm0
	xor	ecx, ebp
	movdqu	xmm0, XMMWORD PTR _t$[ebp+16]
	movdqu	XMMWORD PTR [esi+16], xmm0
	movq	QWORD PTR [esi+32], xmm2
	mov	DWORD PTR [esi+40], eax
	movss	xmm1, DWORD PTR [esi+4]
	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, xmm5
	mulss	xmm1, xmm3
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [esi+8]
	mulss	xmm0, xmm4
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [esi+16]
	mulss	xmm0, xmm5
	movss	DWORD PTR [esi+12], xmm1
	movss	xmm1, DWORD PTR [esi+20]
	mulss	xmm1, xmm3
	addss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR [esi+24]
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [esi+32]
	mulss	xmm0, xmm5
	movss	DWORD PTR [esi+28], xmm1
	movss	xmm1, DWORD PTR [esi+36]
	mulss	xmm1, xmm3
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [esi+40]
	mulss	xmm0, xmm4
	addss	xmm1, xmm0
	movss	DWORD PTR [esi+44], xmm1
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?Invert@matrix@Raytracer@@QAEXXZ ENDP			; Raytracer::matrix::Invert
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?Transform@matrix@Raytracer@@QAE?AVvector3@2@AAV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?Transform@matrix@Raytracer@@QAE?AVvector3@2@AAV32@@Z PROC ; Raytracer::matrix::Transform, COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm1, DWORD PTR [ecx+4]
	movss	xmm2, DWORD PTR [eax]
	movss	xmm4, DWORD PTR [eax+4]
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [ecx]
	movss	xmm3, DWORD PTR [eax+8]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 156  : 		real x  = cell[0] * v.x + cell[1] * v.y + cell[2] * v.z + cell[3];

	mulss	xmm1, xmm4
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm3
	addss	xmm1, xmm0

; 157  : 		real y  = cell[4] * v.x + cell[5] * v.y + cell[6] * v.z + cell[7];

	movss	xmm0, DWORD PTR [ecx+20]
	mulss	xmm0, xmm4
	addss	xmm1, DWORD PTR [ecx+12]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm1

; 157  : 		real y  = cell[4] * v.x + cell[5] * v.y + cell[6] * v.z + cell[7];

	movss	xmm1, DWORD PTR [ecx+16]
	mulss	xmm1, xmm2
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [ecx+24]
	mulss	xmm0, xmm3
	addss	xmm1, xmm0

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	movss	xmm0, DWORD PTR [ecx+36]
	mulss	xmm0, xmm4
	addss	xmm1, DWORD PTR [ecx+28]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+4], xmm1

; 158  : 		real z  = cell[8] * v.x + cell[9] * v.y + cell[10] * v.z + cell[11];

	movss	xmm1, DWORD PTR [ecx+32]
	mulss	xmm1, xmm2
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR [ecx+40]
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	addss	xmm1, DWORD PTR [ecx+44]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm1

; 159  : 		return vector3( x, y, z );
; 160  : 	}

	pop	ebp
	ret	8
?Transform@matrix@Raytracer@@QAE?AVvector3@2@AAV32@@Z ENDP ; Raytracer::matrix::Transform
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?Identity@matrix@Raytracer@@QAEXXZ
_TEXT	SEGMENT
?Identity@matrix@Raytracer@@QAEXXZ PROC			; Raytracer::matrix::Identity, COMDAT
; _this$ = ecx

; 108  : 		cell[1] = cell[2] = cell[TX] = cell[4] = cell[6] = cell[TY] =
; 109  : 		cell[8] = cell[9] = cell[TZ] = cell[12] = cell[13] = cell[14] = 0;

	mov	DWORD PTR [ecx+56], 0
	mov	DWORD PTR [ecx+52], 0
	mov	DWORD PTR [ecx+48], 0
	mov	DWORD PTR [ecx+44], 0
	mov	DWORD PTR [ecx+36], 0
	mov	DWORD PTR [ecx+32], 0
	mov	DWORD PTR [ecx+28], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+4], 0

; 110  : 		cell[D0] = cell[D1] = cell[D2] = cell[W] = 1;

	mov	DWORD PTR [ecx+60], 1065353216		; 3f800000H
	mov	DWORD PTR [ecx+40], 1065353216		; 3f800000H
	mov	DWORD PTR [ecx+20], 1065353216		; 3f800000H
	mov	DWORD PTR [ecx], 1065353216		; 3f800000H

; 111  : 	}

	ret	0
?Identity@matrix@Raytracer@@QAEXXZ ENDP			; Raytracer::matrix::Identity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??0matrix@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??0matrix@Raytracer@@QAE@XZ PROC			; Raytracer::matrix::matrix, COMDAT
; _this$ = ecx

; 105  : 	matrix() { Identity(); }

	push	esi
	mov	esi, ecx
	call	?Identity@matrix@Raytracer@@QAEXXZ	; Raytracer::matrix::Identity
	mov	eax, esi
	pop	esi
	ret	0
??0matrix@Raytracer@@QAE@XZ ENDP			; Raytracer::matrix::matrix
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??DRaytracer@@YA?AVvector3@0@MABV10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
_v$ = 16						; size = 4
??DRaytracer@@YA?AVvector3@0@MABV10@@Z PROC		; Raytracer::operator*, COMDAT

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm1, DWORD PTR _f$[ebp]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm0

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+4], xmm0

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm0

; 84   : 	friend vector3 operator * ( real f, const vector3& v ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	pop	ebp
	ret	0
??DRaytracer@@YA?AVvector3@0@MABV10@@Z ENDP		; Raytracer::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??DRaytracer@@YA?AVvector3@0@ABV10@AAV10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??DRaytracer@@YA?AVvector3@0@ABV10@AAV10@@Z PROC	; Raytracer::operator*, COMDAT

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR [ecx]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm0

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [ecx+4]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+4], xmm0

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	movss	xmm0, DWORD PTR [edx+8]
	mulss	xmm0, DWORD PTR [ecx+8]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm0

; 83   : 	friend vector3 operator * ( const vector3& v1, vector3& v2 ) { return vector3( v1.x * v2.x, v1.y * v2.y, v1.z * v2.z ); }

	pop	ebp
	ret	0
??DRaytracer@@YA?AVvector3@0@ABV10@AAV10@@Z ENDP	; Raytracer::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??DRaytracer@@YA?AVvector3@0@ABV10@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
_f$ = 16						; size = 4
??DRaytracer@@YA?AVvector3@0@ABV10@M@Z PROC		; Raytracer::operator*, COMDAT

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm1, DWORD PTR _f$[ebp]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm0

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+4], xmm0

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm0

; 82   : 	friend vector3 operator * ( const vector3& v, real f ) { return vector3( v.x * f, v.y * f, v.z * f ); }

	pop	ebp
	ret	0
??DRaytracer@@YA?AVvector3@0@ABV10@M@Z ENDP		; Raytracer::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??GRaytracer@@YA?AVvector3@0@ABV10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??GRaytracer@@YA?AVvector3@0@ABV10@0@Z PROC		; Raytracer::operator-, COMDAT

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm0, DWORD PTR [edx]
	subss	xmm0, DWORD PTR [ecx]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [ecx+4]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+4], xmm0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	movss	xmm0, DWORD PTR [edx+8]
	subss	xmm0, DWORD PTR [ecx+8]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm0

; 79   : 	friend vector3 operator - ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x - v2.x, v1.y - v2.y, v1.z - v2.z ); }

	pop	ebp
	ret	0
??GRaytracer@@YA?AVvector3@0@ABV10@0@Z ENDP		; Raytracer::operator-
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??HRaytracer@@YA?AVvector3@0@ABV10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??HRaytracer@@YA?AVvector3@0@ABV10@0@Z PROC		; Raytracer::operator+, COMDAT

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [edx]
	addss	xmm0, DWORD PTR [ecx]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [ecx+4]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+4], xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	movss	xmm0, DWORD PTR [edx+8]
	addss	xmm0, DWORD PTR [ecx+8]

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm0

; 78   : 	friend vector3 operator + ( const vector3& v1, const vector3& v2 ) { return vector3( v1.x + v2.x, v1.y + v2.y, v1.z + v2.z ); }

	pop	ebp
	ret	0
??HRaytracer@@YA?AVvector3@0@ABV10@0@Z ENDP		; Raytracer::operator+
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??Gvector3@Raytracer@@QBE?AV01@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
??Gvector3@Raytracer@@QBE?AV01@XZ PROC			; Raytracer::vector3::operator-, COMDAT
; _this$ = ecx

; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	push	ebp
	mov	ebp, esp

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	movss	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm0, DWORD PTR [ecx]
	xorps	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm0

; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	movss	xmm0, DWORD PTR [ecx+4]
	xorps	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+4], xmm0

; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	movss	xmm0, DWORD PTR [ecx+8]
	xorps	xmm0, xmm1

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm0

; 77   : 	vector3 operator- () const { return vector3( -x, -y, -z ); }

	pop	ebp
	ret	4
??Gvector3@Raytracer@@QBE?AV01@XZ ENDP			; Raytracer::vector3::operator-
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??Xvector3@Raytracer@@QAEXM@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
??Xvector3@Raytracer@@QAEXM@Z PROC			; Raytracer::vector3::operator*=, COMDAT
; _this$ = ecx

; 74   : 	void operator *= ( real f ) { x *= f; y *= f; z *= f; }

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR [ecx]
	movss	xmm1, DWORD PTR _f$[ebp]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??Xvector3@Raytracer@@QAEXM@Z ENDP			; Raytracer::vector3::operator*=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??Yvector3@Raytracer@@QAEXAAV01@@Z
_TEXT	SEGMENT
_a_V$ = 8						; size = 4
??Yvector3@Raytracer@@QAEXAAV01@@Z PROC			; Raytracer::vector3::operator+=, COMDAT
; _this$ = ecx

; 70   : 	void operator += ( vector3& a_V ) { x += a_V.x; y += a_V.y; z += a_V.z; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _a_V$[ebp]
	movss	xmm0, DWORD PTR [eax]
	addss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	addss	xmm0, DWORD PTR [ecx+4]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??Yvector3@Raytracer@@QAEXAAV01@@Z ENDP			; Raytracer::vector3::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?Cross@vector3@Raytracer@@QAE?AV12@V12@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_b$ = 12						; size = 12
?Cross@vector3@Raytracer@@QAE?AV12@V12@@Z PROC		; Raytracer::vector3::Cross, COMDAT
; _this$ = ecx

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	push	ebp
	mov	ebp, esp
	movss	xmm6, DWORD PTR [ecx+4]
	movss	xmm5, DWORD PTR [ecx+8]
	movaps	xmm1, xmm6
	mulss	xmm1, DWORD PTR _b$[ebp+8]
	movaps	xmm0, xmm5

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	mulss	xmm0, DWORD PTR _b$[ebp+4]
	movss	xmm3, DWORD PTR [ecx]
	mulss	xmm5, DWORD PTR _b$[ebp]
	mulss	xmm6, DWORD PTR _b$[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm3, DWORD PTR _b$[ebp+4]
	mulss	xmm0, DWORD PTR _b$[ebp+8]
	subss	xmm3, xmm6

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax], xmm1

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	subss	xmm5, xmm0

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	movss	DWORD PTR [eax+8], xmm3
	movss	DWORD PTR [eax+4], xmm5

; 69   : 	vector3 Cross( vector3 b ) { return vector3( y * b.z - z * b.y, z * b.x - x * b.z, x * b.y - y * b.x ); }

	pop	ebp
	ret	16					; 00000010H
?Cross@vector3@Raytracer@@QAE?AV12@V12@@Z ENDP		; Raytracer::vector3::Cross
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?Length@vector3@Raytracer@@QAEMXZ
_TEXT	SEGMENT
tv131 = -4						; size = 4
?Length@vector3@Raytracer@@QAEMXZ PROC			; Raytracer::vector3::Length, COMDAT
; _this$ = ecx

; 66   : 	real Length() { return (real)sqrt( x * x + y * y + z * z ); }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	movss	xmm1, DWORD PTR [ecx+4]
	movss	xmm2, DWORD PTR [ecx]
	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm2, xmm2
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	addss	xmm2, xmm1
	addss	xmm2, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 66   : 	real Length() { return (real)sqrt( x * x + y * y + z * z ); }

	movss	DWORD PTR tv131[esp+8], xmm0
	fld	DWORD PTR tv131[esp+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@vector3@Raytracer@@QAEMXZ ENDP			; Raytracer::vector3::Length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ?Normalize@vector3@Raytracer@@QAEXXZ
_TEXT	SEGMENT
tv130 = -12						; size = 4
tv135 = -8						; size = 4
tv137 = -4						; size = 4
?Normalize@vector3@Raytracer@@QAEXXZ PROC		; Raytracer::vector3::Normalize, COMDAT
; _this$ = ecx

; 65   : 	void Normalize() { real l = 1.0f / Length(); x *= l; y *= l; z *= l; }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 12					; 0000000cH
	push	esi
	mov	esi, ecx

; 66   : 	real Length() { return (real)sqrt( x * x + y * y + z * z ); }

	movss	xmm0, DWORD PTR [esi]
	movss	xmm3, DWORD PTR [esi+4]
	movaps	xmm1, xmm0
	movss	xmm2, DWORD PTR [esi+8]
	mulss	xmm1, xmm0
	movss	DWORD PTR tv130[esp+16], xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movss	DWORD PTR tv135[esp+16], xmm3
	movss	DWORD PTR tv137[esp+16], xmm2
	addss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	addss	xmm1, xmm0
	xorps	xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtss2sd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 65   : 	void Normalize() { real l = 1.0f / Length(); x *= l; y *= l; z *= l; }

	movss	xmm1, DWORD PTR __real@3f800000
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

	cvtsd2ss xmm0, xmm0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h

; 65   : 	void Normalize() { real l = 1.0f / Length(); x *= l; y *= l; z *= l; }

	divss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv130[esp+16]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi], xmm0
	movss	xmm0, DWORD PTR tv135[esp+16]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+4], xmm0
	movss	xmm0, DWORD PTR tv137[esp+16]
	mulss	xmm0, xmm1
	movss	DWORD PTR [esi+8], xmm0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@vector3@Raytracer@@QAEXXZ ENDP		; Raytracer::vector3::Normalize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??0vector3@Raytracer@@QAE@MMM@Z
_TEXT	SEGMENT
_a_X$ = 8						; size = 4
_a_Y$ = 12						; size = 4
_a_Z$ = 16						; size = 4
??0vector3@Raytracer@@QAE@MMM@Z PROC			; Raytracer::vector3::vector3, COMDAT
; _this$ = ecx

; 63   : 	vector3( real a_X, real a_Y, real a_Z ) : x( a_X ), y( a_Y ), z( a_Z ) {};

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR _a_X$[ebp]
	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR _a_Y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR _a_Z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0vector3@Raytracer@@QAE@MMM@Z ENDP			; Raytracer::vector3::vector3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\common.h
;	COMDAT ??0vector3@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??0vector3@Raytracer@@QAE@XZ PROC			; Raytracer::vector3::vector3, COMDAT
; _this$ = ecx

; 62   : 	vector3() : x( 0.0f ), y( 0.0f ), z( 0.0f ) {};

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0vector3@Raytracer@@QAE@XZ ENDP			; Raytracer::vector3::vector3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT

; 1136 :         {return (sqrtf(_X)); }

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	movss	xmm0, DWORD PTR __X$[ebp]

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0

; 1136 :         {return (sqrtf(_X)); }

	movss	DWORD PTR tv65[esp+8], xmm0
	fld	DWORD PTR tv65[esp+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv68 = -4						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 774  : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	movss	xmm0, DWORD PTR __X$[ebp]

; 775  :     return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv68[esp+8], xmm0
	fld	DWORD PTR tv68[esp+8]

; 776  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
;	COMDAT _expf
_TEXT	SEGMENT
tv68 = 8						; size = 4
__X$ = 8						; size = 4
_expf	PROC						; COMDAT

; 673  : {

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR __X$[ebp]

; 674  :     return (float)exp(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_exp_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]

; 675  : }

	pop	ebp
	ret	0
_expf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___n$[ebp]
	dec	esi
	js	SHORT $LN1@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	edi
	mov	edi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, DWORD PTR ___s$[ebp]
	dec	esi
	jns	SHORT $LL2@vector
	pop	edi
	pop	ebx
$LN1@vector:
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
