; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	F:\BaiduYunDownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0MManager@Raytracer@@QAE@XZ			; Raytracer::MManager::MManager
PUBLIC	?NewObjectList@MManager@Raytracer@@QAEPAVObjectList@2@XZ ; Raytracer::MManager::NewObjectList
PUBLIC	?FreeObjectList@MManager@Raytracer@@QAEXPAVObjectList@2@@Z ; Raytracer::MManager::FreeObjectList
PUBLIC	?NewKdTreeNodePair@MManager@Raytracer@@QAEPAVKdTreeNode@2@XZ ; Raytracer::MManager::NewKdTreeNodePair
PUBLIC	??0ObjectList@Raytracer@@QAE@XZ			; Raytracer::ObjectList::ObjectList
PUBLIC	??1ObjectList@Raytracer@@QAE@XZ			; Raytracer::ObjectList::~ObjectList
PUBLIC	?SetPrimitive@ObjectList@Raytracer@@QAEXPAVPrimitive@2@@Z ; Raytracer::ObjectList::SetPrimitive
PUBLIC	?SetNext@ObjectList@Raytracer@@QAEXPAV12@@Z	; Raytracer::ObjectList::SetNext
PUBLIC	?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ	; Raytracer::ObjectList::GetNext
PUBLIC	??_GObjectList@Raytracer@@QAEPAXI@Z		; Raytracer::ObjectList::`scalar deleting destructor'
PUBLIC	??_EObjectList@Raytracer@@QAEPAXI@Z		; Raytracer::ObjectList::`vector deleting destructor'
PUBLIC	??0KdTreeNode@Raytracer@@QAE@XZ			; Raytracer::KdTreeNode::KdTreeNode
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0MManager@Raytracer@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MManager@Raytracer@@QAE@XZ$1
__ehfuncinfo$??0MManager@Raytracer@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0MManager@Raytracer@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ??0KdTreeNode@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??0KdTreeNode@Raytracer@@QAE@XZ PROC			; Raytracer::KdTreeNode::KdTreeNode, COMDAT
; _this$ = ecx

; 209  : 	KdTreeNode() : m_Data( 6 ) {};

	mov	DWORD PTR [ecx+4], 6
	mov	eax, ecx
	ret	0
??0KdTreeNode@Raytracer@@QAE@XZ ENDP			; Raytracer::KdTreeNode::KdTreeNode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ??_EObjectList@Raytracer@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_EObjectList@Raytracer@@QAEPAXI@Z PROC		; Raytracer::ObjectList::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, DWORD PTR ___flags$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
	test	bl, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1ObjectList@Raytracer@@QAE@XZ	; Raytracer::ObjectList::~ObjectList
	push	DWORD PTR [esi-4]
	lea	edi, DWORD PTR [esi-4]
	push	8
	push	esi
	call	??_M@YGXPAXIHP6EX0@Z@Z
	test	bl, 1
	je	SHORT $LN2@vector
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
$LN3@vector:

; 191  : 	~ObjectList() { delete m_Next; }

	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN10@vector
	mov	ecx, edi
	call	??1ObjectList@Raytracer@@QAE@XZ		; Raytracer::ObjectList::~ObjectList
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@vector:
	test	bl, 1
	je	SHORT $LN1@vector
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
??_EObjectList@Raytracer@@QAEPAXI@Z ENDP		; Raytracer::ObjectList::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ??_GObjectList@Raytracer@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GObjectList@Raytracer@@QAEPAXI@Z PROC		; Raytracer::ObjectList::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx

; 191  : 	~ObjectList() { delete m_Next; }

	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	je	SHORT $LN6@scalar
	push	1
	call	??_GObjectList@Raytracer@@QAEPAXI@Z
$LN6@scalar:
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN8@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GObjectList@Raytracer@@QAEPAXI@Z ENDP		; Raytracer::ObjectList::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ
_TEXT	SEGMENT
?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ PROC		; Raytracer::ObjectList::GetNext, COMDAT
; _this$ = ecx

; 195  : 	ObjectList* GetNext() { return m_Next; }

	mov	eax, DWORD PTR [ecx+4]
	ret	0
?GetNext@ObjectList@Raytracer@@QAEPAV12@XZ ENDP		; Raytracer::ObjectList::GetNext
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?SetNext@ObjectList@Raytracer@@QAEXPAV12@@Z
_TEXT	SEGMENT
_a_Next$ = 8						; size = 4
?SetNext@ObjectList@Raytracer@@QAEXPAV12@@Z PROC	; Raytracer::ObjectList::SetNext, COMDAT
; _this$ = ecx

; 194  : 	void SetNext( ObjectList* a_Next ) { m_Next = a_Next; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _a_Next$[ebp]
	mov	DWORD PTR [ecx+4], eax
	pop	ebp
	ret	4
?SetNext@ObjectList@Raytracer@@QAEXPAV12@@Z ENDP	; Raytracer::ObjectList::SetNext
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ?SetPrimitive@ObjectList@Raytracer@@QAEXPAVPrimitive@2@@Z
_TEXT	SEGMENT
_a_Prim$ = 8						; size = 4
?SetPrimitive@ObjectList@Raytracer@@QAEXPAVPrimitive@2@@Z PROC ; Raytracer::ObjectList::SetPrimitive, COMDAT
; _this$ = ecx

; 192  : 	void SetPrimitive( Primitive* a_Prim ) { m_Primitive = a_Prim; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _a_Prim$[ebp]
	mov	DWORD PTR [ecx], eax
	pop	ebp
	ret	4
?SetPrimitive@ObjectList@Raytracer@@QAEXPAVPrimitive@2@@Z ENDP ; Raytracer::ObjectList::SetPrimitive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ??1ObjectList@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??1ObjectList@Raytracer@@QAE@XZ PROC			; Raytracer::ObjectList::~ObjectList, COMDAT
; _this$ = ecx

; 191  : 	~ObjectList() { delete m_Next; }

	push	esi
	mov	esi, DWORD PTR [ecx+4]
	test	esi, esi
	je	SHORT $LN5@ObjectList
	mov	ecx, esi
	call	??1ObjectList@Raytracer@@QAE@XZ		; Raytracer::ObjectList::~ObjectList
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@ObjectList:
	pop	esi
	ret	0
??1ObjectList@Raytracer@@QAE@XZ ENDP			; Raytracer::ObjectList::~ObjectList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
;	COMDAT ??0ObjectList@Raytracer@@QAE@XZ
_TEXT	SEGMENT
??0ObjectList@Raytracer@@QAE@XZ PROC			; Raytracer::ObjectList::ObjectList, COMDAT
; _this$ = ecx

; 190  : 	ObjectList() : m_Primitive( 0 ), m_Next( 0 ) {}

	mov	DWORD PTR [ecx], 0
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0ObjectList@Raytracer@@QAE@XZ ENDP			; Raytracer::ObjectList::ObjectList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
;	COMDAT ?NewKdTreeNodePair@MManager@Raytracer@@QAEPAVKdTreeNode@2@XZ
_TEXT	SEGMENT
?NewKdTreeNodePair@MManager@Raytracer@@QAEPAVKdTreeNode@2@XZ PROC ; Raytracer::MManager::NewKdTreeNodePair, COMDAT
; _this$ = ecx

; 50   : 	unsigned long* tmp = (unsigned long*)m_KdPtr;

	mov	eax, DWORD PTR [ecx+12]

; 51   : 	tmp[1] = tmp[3] = 6;

	mov	DWORD PTR [eax+12], 6
	mov	DWORD PTR [eax+4], 6

; 52   : 	KdTreeNode* node = m_KdPtr;

	mov	eax, DWORD PTR [ecx+12]

; 53   : 	m_KdPtr += 2;

	lea	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+12], edx

; 54   : 	return node;
; 55   : }

	ret	0
?NewKdTreeNodePair@MManager@Raytracer@@QAEPAVKdTreeNode@2@XZ ENDP ; Raytracer::MManager::NewKdTreeNodePair
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
;	COMDAT ?FreeObjectList@MManager@Raytracer@@QAEXPAVObjectList@2@@Z
_TEXT	SEGMENT
_a_List$ = 8						; size = 4
?FreeObjectList@MManager@Raytracer@@QAEXPAVObjectList@2@@Z PROC ; Raytracer::MManager::FreeObjectList, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	push	esi

; 42   : 	ObjectList* list = a_List;

	mov	esi, DWORD PTR _a_List$[ebp]
	mov	edx, esi

; 43   : 	while (list->GetNext()) list = list->GetNext();

	cmp	DWORD PTR [esi+4], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 195  : 	ObjectList* GetNext() { return m_Next; }

	lea	eax, DWORD PTR [esi+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 43   : 	while (list->GetNext()) list = list->GetNext();

	je	SHORT $LN1@FreeObject
$LL2@FreeObject:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 195  : 	ObjectList* GetNext() { return m_Next; }

	mov	edx, DWORD PTR [eax]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 43   : 	while (list->GetNext()) list = list->GetNext();

	cmp	DWORD PTR [edx+4], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 195  : 	ObjectList* GetNext() { return m_Next; }

	lea	eax, DWORD PTR [edx+4]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 43   : 	while (list->GetNext()) list = list->GetNext();

	jne	SHORT $LL2@FreeObject
$LN1@FreeObject:
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 194  : 	void SetNext( ObjectList* a_Next ) { m_Next = a_Next; }

	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 45   : 	m_OList = a_List;

	mov	DWORD PTR [ecx], esi
	pop	esi

; 46   : }

	pop	ebp
	ret	4
?FreeObjectList@MManager@Raytracer@@QAEXPAVObjectList@2@@Z ENDP ; Raytracer::MManager::FreeObjectList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
;	COMDAT ?NewObjectList@MManager@Raytracer@@QAEPAVObjectList@2@XZ
_TEXT	SEGMENT
?NewObjectList@MManager@Raytracer@@QAEPAVObjectList@2@XZ PROC ; Raytracer::MManager::NewObjectList, COMDAT
; _this$ = ecx

; 32   : 	ObjectList* retval;
; 33   : 	retval = m_OList;

	mov	eax, DWORD PTR [ecx]

; 34   : 	m_OList = m_OList->GetNext();

	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], edx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 194  : 	void SetNext( ObjectList* a_Next ) { m_Next = a_Next; }

	mov	DWORD PTR [eax+4], 0

; 192  : 	void SetPrimitive( Primitive* a_Prim ) { m_Primitive = a_Prim; }

	mov	DWORD PTR [eax], 0
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 38   : }

	ret	0
?NewObjectList@MManager@Raytracer@@QAEPAVObjectList@2@XZ ENDP ; Raytracer::MManager::NewObjectList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp
;	COMDAT ??0MManager@Raytracer@@QAE@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0MManager@Raytracer@@QAE@XZ PROC			; Raytracer::MManager::MManager, COMDAT
; _this$ = ecx

; 12   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MManager@Raytracer@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx

; 14   : 	m_KdArray = (char*)(new KdTreeNode[1000000]);

	push	8000000					; 007a1200H
	mov	DWORD PTR [esi], 0
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@MManager
	mov	edx, 999999				; 000f423fH
	lea	ecx, DWORD PTR [eax+4]
$LL13@MManager:
	dec	edx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 209  : 	KdTreeNode() : m_Data( 6 ) {};

	mov	DWORD PTR [ecx], 6
	lea	ecx, DWORD PTR [ecx+8]
	jns	SHORT $LL13@MManager
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 14   : 	m_KdArray = (char*)(new KdTreeNode[1000000]);

	jmp	SHORT $LN7@MManager
$LN6@MManager:
	xor	eax, eax
$LN7@MManager:

; 15   : 	m_ObjArray = (char*)(new ObjectList[100000]);

	push	800004					; 000c3504H
	mov	DWORD PTR [esi+4], eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN8@MManager
	push	OFFSET ??1ObjectList@Raytracer@@QAE@XZ	; Raytracer::ObjectList::~ObjectList
	push	OFFSET ??0ObjectList@Raytracer@@QAE@XZ	; Raytracer::ObjectList::ObjectList
	push	100000					; 000186a0H
	lea	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], 100000			; 000186a0H
	push	8
	push	edi
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	jmp	SHORT $LN9@MManager
$LN8@MManager:
	xor	edi, edi
$LN9@MManager:

; 16   : 	unsigned long addr = (unsigned long)m_KdArray;
; 17   : 	m_KdPtr = (KdTreeNode*)((addr + 32) & (0xffffffff - 31));

	mov	eax, DWORD PTR [esi+4]

; 18   : 	addr = (unsigned long)m_ObjArray;
; 19   : 	m_ObjPtr = (ObjectList*)((addr + 32) & (0xffffffff - 31));

	lea	ecx, DWORD PTR [edi+32]
	add	eax, 32					; 00000020H
	mov	DWORD PTR [esi+8], edi
	and	eax, -32				; ffffffe0H
	mov	edx, 99995				; 0001869bH
	and	ecx, -32				; ffffffe0H
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], ecx
$LL3@MManager:

; 20   : 	ObjectList* ptr = m_ObjPtr;
; 21   : 	for ( int i = 0; i < 99995; i++ ) 

	lea	eax, DWORD PTR [ecx+8]
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 194  : 	void SetNext( ObjectList* a_Next ) { m_Next = a_Next; }

	mov	DWORD PTR [ecx+4], eax
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 24   : 		ptr++;

	mov	ecx, eax
	dec	edx
	jne	SHORT $LL3@MManager
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\scene.h

; 194  : 	void SetNext( ObjectList* a_Next ) { m_Next = a_Next; }

	mov	DWORD PTR [ecx+4], edx
; File f:\baiduyundownload\lab&dom\class\cg\hw2\raytracer7\memory.cpp

; 27   : 	m_OList = m_ObjPtr;

	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [esi], eax

; 28   : }

	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MManager@Raytracer@@QAE@XZ$1:
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0MManager@Raytracer@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MManager@Raytracer@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MManager@Raytracer@@QAE@XZ ENDP			; Raytracer::MManager::MManager
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR ___n$[ebp]
	dec	esi
	js	SHORT $LN1@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	edi
	mov	edi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, edi
	call	ebx
	add	edi, DWORD PTR ___s$[ebp]
	dec	esi
	jns	SHORT $LL2@vector
	pop	edi
	pop	ebx
$LN1@vector:
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
